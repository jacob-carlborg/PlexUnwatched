/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct FSRef {
    unsigned char hidden[80];
};

struct NTCoordinate {
    long long _field1;
    long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

/*
 * File: /Applications/Path Finder.app/Contents/MacOS/Path Finder
 * UUID: 8337304C-30CE-351D-9832-857D9B653167
 * Arch: x86_64
 *       Minimum Mac OS X version: 10.7.0
 *       SDK version: 10.8.0
 *
 *       Objective-C Garbage Collection: Unsupported
 *       Run path: @loader_path/../Frameworks
 *               = /Applications/Path Finder.app/Contents/Frameworks
 */

@protocol BrowserViewProtocol <NSObject>
- (id)window;
- (id)responderView;
- (id)containingView;
- (void)stop;
- (void)setServerRequest:(id)arg1 params:(id)arg2;
- (id)model;
@end

@protocol DBRestClientDelegate <NSObject>

@optional
- (void)restClient:(id)arg1 loadStreamableURLFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedStreamableURL:(id)arg2 forFile:(id)arg3;
- (void)restClient:(id)arg1 loadSharableLinkFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedSharableLink:(id)arg2 forFile:(id)arg3;
- (void)restClient:(id)arg1 searchFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedSearchResults:(id)arg2 forPath:(id)arg3 keyword:(id)arg4;
- (void)restClient:(id)arg1 movePathFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 movedPath:(id)arg2 to:(id)arg3;
- (void)restClient:(id)arg1 copyFromRefFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 copiedRef:(id)arg2 to:(id)arg3;
- (void)restClient:(id)arg1 createdCopyRef:(id)arg2;
- (void)restClient:(id)arg1 createCopyRefFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 createdCopyRef:(id)arg2 forPath:(id)arg3;
- (void)restClient:(id)arg1 copyPathFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 copiedPath:(id)arg2 to:(id)arg3;
- (void)restClient:(id)arg1 deletePathFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 deletedPath:(id)arg2;
- (void)restClient:(id)arg1 createFolderFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 createdFolder:(id)arg2;
- (void)restClient:(id)arg1 restoreFileFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 restoredFile:(id)arg2;
- (void)restClient:(id)arg1 loadRevisionsFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedRevisions:(id)arg2 forFile:(id)arg3;
- (void)restClient:(id)arg1 loadedThumbnail:(id)arg2;
- (void)restClient:(id)arg1 loadedFile:(id)arg2 contentType:(id)arg3;
- (void)restClient:(id)arg1 uploadedFile:(id)arg2 from:(id)arg3;
- (void)restClient:(id)arg1 uploadFromUploadIdFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 uploadedFile:(id)arg2 fromUploadId:(id)arg3 metadata:(id)arg4;
- (void)restClient:(id)arg1 uploadFileChunkProgress:(double)arg2 forFile:(id)arg3 offset:(unsigned long long)arg4 fromPath:(id)arg5;
- (void)restClient:(id)arg1 uploadFileChunkFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 uploadedFileChunk:(id)arg2 newOffset:(unsigned long long)arg3 fromFile:(id)arg4 expires:(id)arg5;
- (void)restClient:(id)arg1 uploadFileFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 uploadProgress:(double)arg2 forFile:(id)arg3 from:(id)arg4;
- (void)restClient:(id)arg1 uploadedFile:(id)arg2 from:(id)arg3 metadata:(id)arg4;
- (void)restClient:(id)arg1 loadThumbnailFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedThumbnail:(id)arg2 metadata:(id)arg3;
- (void)restClient:(id)arg1 loadFileFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadProgress:(double)arg2 forFile:(id)arg3;
- (void)restClient:(id)arg1 loadedFile:(id)arg2 contentType:(id)arg3 metadata:(id)arg4;
- (void)restClient:(id)arg1 loadedFile:(id)arg2;
- (void)restClient:(id)arg1 loadAccountInfoFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedAccountInfo:(id)arg2;
- (void)restClient:(id)arg1 loadDeltaFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedDeltaEntries:(id)arg2 reset:(BOOL)arg3 cursor:(id)arg4 hasMore:(BOOL)arg5;
- (void)restClient:(id)arg1 loadMetadataFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 metadataUnchangedAtPath:(id)arg2;
- (void)restClient:(id)arg1 loadedMetadata:(id)arg2;
@end

@protocol GrowlApplicationBridgeDelegate <NSObject>

@optional
- (BOOL)hasNetworkClientEntitlement;
- (void)growlNotificationTimedOut:(id)arg1;
- (void)growlNotificationWasClicked:(id)arg1;
- (void)growlIsReady;
- (id)applicationIconDataForGrowl;
- (id)applicationIconForGrowl;
- (id)applicationNameForGrowl;
- (id)registrationDictionaryForGrowl;
@end

@protocol ListControllerParamsController <NSObject>
- (id)responderView;
- (void)switchToDirectoryViewOptions;
- (id)viewOptionsModel;
@end

@protocol ListViewDelegateProtocol <NSObject>
- (BOOL)listView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)listView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)listView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)listView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)listView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)listView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)listView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)listView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)listView:(id)arg1 didCollapse:(id)arg2;
- (void)listView:(id)arg1 didExpand:(id)arg2;
- (id)listView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)listView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)listView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)listView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)listView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (id)listView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSBrowserDelegate <NSObject>

@optional
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (long long)browser:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(id)arg5;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)browser:(id)arg1 typeSelectStringForRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (id)browser:(id)arg1 draggingImageForRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4 offset:(struct CGPoint *)arg5;
- (BOOL)browser:(id)arg1 canDragRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4;
- (id)browser:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3 inColumn:(long long)arg4;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (BOOL)browser:(id)arg1 shouldShowCellExpansionForRow:(long long)arg2 column:(long long)arg3;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (void)browserDidScroll:(id)arg1;
- (void)browserWillScroll:(id)arg1;
- (BOOL)browser:(id)arg1 isColumnValid:(long long)arg2;
- (BOOL)browser:(id)arg1 selectRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 selectCellWithString:(id)arg2 inColumn:(long long)arg3;
- (id)browser:(id)arg1 titleOfColumn:(long long)arg2;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (id)rootItemForBrowser:(id)arg1;
- (double)browser:(id)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (long long)browser:(id)arg1 numberOfRowsInColumn:(long long)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(id)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (id)debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(id)arg4;
- (id)outlineView:(id)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldClose:(id)arg1;
@end

@protocol NSSpeechSynthesizerDelegate <NSObject>

@optional
- (void)speechSynthesizer:(id)arg1 didEncounterSyncMessage:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didEncounterErrorAtIndex:(unsigned long long)arg2 ofString:(id)arg3 message:(id)arg4;
- (void)speechSynthesizer:(id)arg1 willSpeakPhoneme:(short)arg2;
- (void)speechSynthesizer:(id)arg1 willSpeakWord:(struct _NSRange)arg2 ofString:(id)arg3;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 willShowSharingServicePicker:(id)arg2 forItems:(id)arg3;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSTokenFieldCellDelegate <NSObject>

@optional
- (unsigned long long)tokenFieldCell:(id)arg1 styleForRepresentedObject:(id)arg2;
- (BOOL)tokenFieldCell:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 menuForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 readFromPasteboard:(id)arg2;
- (BOOL)tokenFieldCell:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)tokenFieldCell:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)tokenFieldCell:(id)arg1 editingStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenFieldCell:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillExitVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (struct CGSize)window:(id)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (id)parser:(id)arg1 resolveExternalEntityName:(id)arg2 systemID:(id)arg3;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundComment:(id)arg2;
- (void)parser:(id)arg1 foundProcessingInstructionWithTarget:(id)arg2 data:(id)arg3;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundExternalEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 foundInternalEntityDeclarationWithName:(id)arg2 value:(id)arg3;
- (void)parser:(id)arg1 foundElementDeclarationWithName:(id)arg2 model:(id)arg3;
- (void)parser:(id)arg1 foundAttributeDeclarationWithName:(id)arg2 forElement:(id)arg3 type:(id)arg4 defaultValue:(id)arg5;
- (void)parser:(id)arg1 foundUnparsedEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 notationName:(id)arg5;
- (void)parser:(id)arg1 foundNotationDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
@end

@protocol NTAnimationDelegateProtocol <NSObject>
- (void)animationDelegateDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDelegateDidStart:(id)arg1;
- (id)animationDelegateView:(id)arg1;
@end

@protocol NTBSMWindowDelegate <NSObject>
- (void)currentStateNofication_set:(id)arg1 fileServerRequest:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 selection:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (id)currentStateNofication_displayedItems:(id)arg1;
- (struct CGRect)currentStateNofication_frame:(id)arg1 forDesc:(id)arg2;
- (id)currentStateNofication_rootFileServerRequest:(id)arg1;
- (id)currentStateNofication_fileServerRequest:(id)arg1;
- (id)currentStateNofication_selection:(id)arg1;
- (id)currentStateNofication_browserID;
@end

@protocol NTBaseViewDataMgrDelegateProtocol <NSObject>
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (BOOL)dataMgr_shouldUpdate;
@end

@protocol NTBookmarksBarDelegateProtocol <NSObject>
- (id)bookmarksBar_itemsForDragInfo:(id)arg1;
- (BOOL)bookmarksBar_validateSpringLoad:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (unsigned long long)bookmarksBar_validateDrop:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (void)bookmarksBar_droppedOn:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (void)bookmarksBar_droppedOnBar:(id)arg1 insertIndex:(long long)arg2;
- (void)bookmarksBar_removeItem:(id)arg1;
- (id)bookmarksBar_items:(id)arg1;
@end

@protocol NTBrowserContextualMenuProtocol <NSObject>
- (id)contextualMenuHelper:(id)arg1 outTarget:(id *)arg2;
@end

@protocol NTBrowserKeyEventHandlerDelegate <NSObject>
- (id)key_selection:(BOOL)arg1;
- (id)key_firstSelectedDesc:(BOOL)arg1;
- (id)key_serverRequest;
- (void)key_sendDoubleClick;
- (unsigned long long)key_numItemsSelected;
- (id)key_visibleItems;
- (void)key_deselectAll;
- (BOOL)key_smartSort;
- (BOOL)key_sortAscending;
- (int)key_sortOrder;
- (BOOL)key_arrangeAscending;
- (int)key_arrangeOrder;
- (void)key_scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (unsigned long long)key_numVisibleItems;
- (BOOL)key_renameSelection;
- (void)key_scrollToSelection;
- (void)key_selectVisibleIndex:(unsigned long long)arg1 byExtendingSelection:(BOOL)arg2;
@end

@protocol NTBrowserViewControllerImplementationProtocol <NSObject>
- (id)imp_itemWithDesc:(id)arg1;
- (id)imp_rootServerRequest;
- (id)imp_actionTargetInSelectedDirectory;
- (id)imp_actionTargetDirectory;
- (BOOL)imp_treatPackagesAsFolderOnDoubleClick;
- (BOOL)imp_renameSelection;
- (id)imp_imageForSelection:(struct CGPoint *)arg1;
- (void)imp_scrollToSelection;
- (void)imp_selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)imp_numItemsSelected;
- (void)imp_deselectAllInRoot;
- (void)imp_deselectAll;
- (id)imp_afterSelectionItem;
- (id)imp_firstSelectedItem;
- (id)imp_selectedItems;
- (id)imp_firstSelectedDesc:(BOOL)arg1;
- (id)imp_selectedDescs:(BOOL)arg1;
- (struct CGRect)imp_rectForVisibleIndex:(unsigned long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (id)imp_responderView;
- (id)imp_containingView;
@end

@protocol NTButtonBarDelegate <NSObject>
- (void)setButtonBar:(id)arg1;
- (void)buttonBar:(id)arg1 message:(id)arg2;
- (id)buttonBar:(id)arg1 itemsForDragInfo:(id)arg2;
- (BOOL)buttonBarDrawInactive:(id)arg1;
- (void)buttonBarReorderIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)buttonBarActivateOnMouseDown:(id)arg1;
- (void)buttonBarDoubleClick:(id)arg1;
- (void)buttonBarPerformDrop:(id)arg1 descs:(id)arg2 insertIndex:(unsigned long long)arg3;
- (BOOL)buttonBarSupportsDrop:(id)arg1;
- (id)buttonBarItemArray:(id)arg1 selectedItem:(id *)arg2;
@end

@protocol NTButtonBarItemDelegate <NSObject>
- (id)buttonItemContextualMenu:(id)arg1;
- (BOOL)buttonItemIsRemovable:(id)arg1;
- (void)buttonItemWasRemoved:(id)arg1;
- (void)buttonItemWasClicked:(id)arg1;
- (BOOL)buttonItemCanSpringLoad:(id)arg1 onItem:(id)arg2;
- (void)buttonItemHandleDrop:(id)arg1 onItem:(id)arg2;
- (unsigned long long)buttonItemDragOperation:(id)arg1 onItem:(id)arg2;
@end

@protocol NTCAMatrixContentProtocol <NSObject>
@property(retain) NSString *filter;
@property long long searchMode;
@property(readonly, retain) id <NTCAMatrixContentLayoutMgrProtocol> layoutManager;
@property(readonly, retain) NSColor *backColor;
@property(readonly) struct CGSize defaultSize;
@property(readonly, retain) NSArray *models;
- (void)displayLocation:(id)arg1;
- (void)arrangedObjectsUpdated:(id)arg1 inView:(id)arg2;
- (id)makeFilterPredicate;
- (id)makeSortDescriptor;
- (BOOL)isLayerTypeOK:(id)arg1;
- (BOOL)handleKeyDown:(id)arg1 selectedLayer:(id)arg2;
- (void)handleMouseDown:(id)arg1 layer:(id)arg2;
- (id)uniqueIDForModel:(id)arg1;
- (id)layerWithModel:(id)arg1;
- (void)start;
@end

@protocol NTCBMWindowDelegate <NSObject>
- (id)CBM_browserWithID:(id)arg1;
- (id)CBM_currentBrowser;
- (id)CBM_currentBrowserMgr;
@end

@protocol NTCompareProtocol <NSObject>
- (void)compareOuput:(id)arg1;
@end

@protocol NTCurrentBrowserMgrProtocol <NSObject>
- (void)CBMNotification:(id)arg1;
@end

@protocol NTDoubleClickDelegateProtocol <NSObject>
- (void)handleDoubleClick:(id)arg1 startRect:(struct CGRect)arg2 window:(id)arg3 params:(id)arg4;
@end

@protocol NTDragDropIndicatorClientProtocol <NSObject>
- (id)window;
- (struct CGRect)dragDropIndicatorRect;
@end

@protocol NTFSWatcherDelegate <NSObject>
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;
@end

@protocol NTFileListMonitorDelegate <NSObject>
- (void)fileListMonitor_updated:(id)arg1;
@end

@protocol NTFileOutlineHelperProtocol <NSObject>
- (BOOL)tableHelper_shouldTrackIconButton;
- (BOOL)tableHelper_shouldTrackActionButton;
- (id)tableHelper_selection:(BOOL)arg1;
- (void)tableHelper_performDraggedOperation:(unsigned long long)arg1;
- (void)tableHelper_dragEnded;
- (void)tableHelper_dragStarted;
- (void)tableHelper_performIconButtonClick;
- (void)tableHelper_performActionButtonClick;
- (void)tableHelper_sendSelectionChangedNotification;
@end

@protocol NTFileOutlineProtocol <NSObject>
- (void)superMouseDown:(id)arg1;
- (id)helper;
@end

@protocol NTFileServerDelegateProtocol <NSObject>
- (void)fileServer_Error;
- (void)fileServer_isBusy:(BOOL)arg1;
- (void)fileServer_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)fileServer_didUpdateRequest:(id)arg1 savedState:(id)arg2;
- (id)fileServer_willUpdateRequest:(id)arg1;
- (BOOL)fileServer_shouldUpdate;
@end

@protocol NTFindUIAccessDelegate
- (void)findUIAccess_zoomEffectsForSelection;
- (void)findUIAccess_copy:(id)arg1;
- (void)findUIAccess_handleSelectionChanged;
- (void)findUIAccess_actionButtonClick;
- (void)findUIAccess_doubleClick;
- (id)findUIAccess_selectedItems;
- (void)findUIAccess_removeItems:(id)arg1;
- (id)findUIAccess_findList;
- (id)findUIAccess_fileServer;
@end

@protocol NTFolderListCacheDelegateProtocol <NSObject>
- (void)folderListCache_list:(id)arg1 forDirectory:(id)arg2;
@end

@protocol NTGotoFolderWindowDelegateProtocol <NSObject>
- (BOOL)handleDownArrowKey;
- (BOOL)handleUpArrowKey;
- (BOOL)handleTabKey;
- (BOOL)handleDeleteKey:(BOOL)arg1;
@end

@protocol NTGridDelegateProtocol <NSObject>
- (id)gridColorForGrid:(id)arg1;
- (id)tooltipForObject:(id)arg1 grid:(id)arg2 shortFormat:(BOOL)arg3 itemRect:(struct CGRect)arg4 mouse:(struct CGPoint)arg5;
- (id)contextualMenuForGrid:(id)arg1;
- (void)gridContentsChanged:(id)arg1;
- (id)drawObject:(id)arg1 inRect:(struct CGRect)arg2 coordinate:(struct NTCoordinate)arg3 ofGrid:(id)arg4 style:(int)arg5 dragging:(BOOL)arg6 drawingCache:(id)arg7;
- (void)drawBackground:(struct CGRect)arg1 ofGrid:(id)arg2;
- (void)gridDoubleClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (void)gridClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (BOOL)mouseIntersectsObject:(id)arg1 grid:(id)arg2 mousePoint:(struct CGPoint)arg3 itemRect:(struct CGRect)arg4;
@end

@protocol NTGridDragSupport <NSObject>
- (void)performSpringAction:(id)arg1 onObject:(id)arg2;
- (BOOL)canPerformSpringAction:(id)arg1 grid:(id)arg2 onObject:(id)arg3;
- (BOOL)performDrop:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (unsigned long long)acceptsDragInfo:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)startDragOnObject:(id)arg1 fromGrid:(id)arg2 image:(id)arg3 atPoint:(struct CGPoint)arg4 event:(id)arg5 pasteboardHelper:(id)arg6;
- (id)dragImageInGrid:(id)arg1 forObject:(id)arg2 withSize:(struct CGSize)arg3;
- (id)objectsFromPropertyList:(id)arg1 ofType:(id)arg2;
- (id)acceptedPasteboardTypes;
@end

@protocol NTIconViewDataMgrDelegate <NTBaseViewDataMgrDelegateProtocol>
@end

@protocol NTKVObserverProxyDelegate <NSObject>
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@protocol NTLauncherMatrixContentDelegate <NSObject>
- (void)matrixContent_modelsUpdated:(id)arg1;
@end

@protocol NTListEditorControllerDelegate <NSObject>
- (void)editorResults:(id)arg1;
@end

@protocol NTLocalizedStringFilterProtocol <NSObject>
- (void)localizedStringFilter_unlocalizedString:(id)arg1 table:(id)arg2;
@end

@protocol NTMenuCommandMgrDelegate <NSObject>
- (BOOL)menuCommandMgr_isDesktop;
- (BOOL)menuCommandMgr_isDirectorySelected:(BOOL)arg1;
- (BOOL)menuCommandMgr_isImageOrMediaSelected;
- (BOOL)menuCommandMgr_isImageSelected;
- (id)menuCommandMgr_containingDirectory;
- (BOOL)menuCommandMgr_onlyEjectableSelected;
- (BOOL)menuCommandMgr_isVolumeSelected;
- (id)menuCommandMgr_selectedDescs:(BOOL)arg1;
- (id)menuCommandMgr_firstSelectedDesc:(BOOL)arg1;
- (BOOL)menuCommandMgr_treatPackagesAsFolders;
- (BOOL)menuCommandMgr_showInvisibles;
- (BOOL)menuCommandMgr_isPackageSelected:(BOOL)arg1;
- (BOOL)menuCommandMgr_onlyNoAliasSelected;
- (BOOL)menuCommandMgr_onlyAliasSelected;
- (unsigned long long)menuCommandMgr_numItemsSelected;
@end

@protocol NTMessageProxyProtocol
- (void)messageProxy:(id)arg1 message:(id)arg2;
@end

@protocol NTNSBNodeMgrDelegateProtocol <NSObject>
- (void)nsbNodeMgr:(id)arg1 updatedActiveNodes:(id)arg2;
- (void)nsbNodeMgr:(id)arg1 reloadNodeIndexes:(id)arg2 inColumn:(long long)arg3;
- (void)nsbNodeMgr:(id)arg1 reloadColumn:(long long)arg2;
- (id)nsbNodeMgr_nodeForColumns:(id)arg1;
- (id)nsbNodeMgr:(id)arg1 listForNode:(id)arg2;
@end

@protocol NTNSBViewDataMgrDelegateProtocol <NTBaseViewDataMgrDelegateProtocol>
- (id)dataMgr_columnServerRequestForFiltering;
- (BOOL)dataMgr_selectColumnWithServerRequest:(id)arg1;
- (id)dataMgr_rootRequest;
@end

@protocol NTNSBViewDelegate <NSBrowserDelegate>
- (BOOL)browserShouldStretchWindowIfNecessaryForUserColumnResize:(id)arg1;
- (void)browser:(id)arg1 draggedImage:(id)arg2 endedAt:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)nsbView:(id)arg1 titleContextualMenuEvent:(id)arg2;
- (void)nsbView_browserSelectionChanged:(id)arg1;
- (void)nsbView_browserDoubleClick:(id)arg1;
@end

@protocol NTOutlineTreeNodeMgrDelegateProtocol <NSObject>
- (void)nodeMgr:(id)arg1 reloadNode:(id)arg2 reloadChildren:(BOOL)arg3;
- (void)nodeMgr:(id)arg1 expandNode:(id)arg2 expandChildren:(BOOL)arg3;
- (id)nodeMgr:(id)arg1 listForNode:(id)arg2;
@end

@protocol NTPaginatorProtocol <NSObject>
- (void)paginateItems:(id)arg1 inView:(id)arg2 positionStore:(id)arg3;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1;
- (struct CGRect)itemRect:(unsigned long long)arg1;
- (BOOL)reverseBlockLayout;
- (void)setReverseBlockLayout:(BOOL)arg1;
- (void)setLayoutDirection:(int)arg1;
- (int)layoutDirection;
- (void)setMaxWidth:(unsigned long long)arg1;
- (void)setDocumentMargin:(struct CGSize)arg1;
- (void)setItemMargin:(struct CGSize)arg1;
- (struct CGSize)itemSize;
- (void)setItemSize:(struct CGSize)arg1;
- (void)setNumItems:(unsigned long long)arg1;
- (struct CGSize)size;
- (void)setWindowWidth:(unsigned long long)arg1;
- (id)paginationArea;
- (id)screenArea;
- (void)setPaginationArea:(id)arg1 screenArea:(id)arg2 fixedRects:(BOOL)arg3;
- (void)setAreasForScreen:(id)arg1;
@end

@protocol NTPasteboardHelperOwnerProtocol <NSObject>
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
@end

@protocol NTPathBarDelegate <NSObject>
- (id)pathBar_completedPathsForPath:(id)arg1;
- (BOOL)pathBar_revealPath:(id)arg1;
@end

@protocol NTPathEventClientDelegate <NSObject>
- (void)pathEventClientEvent:(id)arg1;
@end

@protocol NTPathFinderPluginHostProtocol <NSObject>
- (id)syncToBrowserID;
- (BOOL)infoModule;
- (BOOL)inspectorModule;
- (id)modulePrefKey;
- (int)moduleLocation;
- (id)imageWithName:(id)arg1;
- (id)iconForType:(unsigned int)arg1 size:(unsigned long long)arg2;
- (id)processItems:(id)arg1 parameter:(id)arg2 pluginID:(id)arg3;
- (void)applyDirectoriesAttributesToContents:(id)arg1;
- (void)toggleAttributeID:(int)arg1 items:(id)arg2;
- (void)set:(id)arg1 attributeID:(int)arg2 items:(id)arg3;
- (void)reportForItems:(id)arg1;
- (void)showGetInfoWindows:(id)arg1;
- (void)openTerminal:(id)arg1;
- (void)textDocumentWithString:(id)arg1;
- (struct CGRect)frameForItem:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (id)displayedItems:(id)arg1 browserID:(id)arg2;
- (id)savedSearchFile:(id)arg1 browserID:(id)arg2;
- (id)currentRootDirectory:(id)arg1 browserID:(id)arg2;
- (void)setCurrentDirectory:(id)arg1 inWindow:(id)arg2 browserID:(id)arg3;
- (id)currentDirectory:(id)arg1 browserID:(id)arg2;
- (void)selectItems:(id)arg1 byExtendingSelection:(BOOL)arg2 inWindow:(id)arg3 browserID:(id)arg4;
- (id)selection:(id)arg1 browserID:(id)arg2;
- (id)localize:(id)arg1 table:(id)arg2;
- (void)askUser:(id)arg1 message:(id)arg2 okButton:(id)arg3 cancelButton:(id)arg4 window:(id)arg5 context:(id)arg6;
- (id)runTool:(id)arg1 directory:(id)arg2 arguments:(id)arg3 target:(id)arg4 setUID:(BOOL)arg5;
- (void)rename:(id)arg1 withName:(id)arg2;
- (void)openItems:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (void)revealItem:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (id)pluginParameters;
- (id)sheetWindow:(id)arg1;
- (id)makeFSItems:(id)arg1;
- (id)makeFSItem:(id)arg1;
- (unsigned long long)version;
@end

@protocol NTPathFinderProtocol
- (oneway void)rename:(oneway id)arg1 newName:(id)arg2;
- (oneway void)makeAlias:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)move:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)duplicate:(oneway id)arg1;
- (oneway void)copy:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)moveToTrash:(oneway id)arg1;
- (oneway void)ejectVolume:(oneway id)arg1;
- (oneway void)showGetInfo:(oneway id)arg1;
- (oneway void)selectPaths:(oneway id)arg1 byExtendingSelection:(oneway char)arg2;
- (oneway void)revealPaths:(oneway id)arg1 behavior:(oneway int)arg2;
- (bycopy id)currentDirectory;
- (bycopy id)directoryListing:(oneway id)arg1 visibleItemsOnly:(BOOL)arg2;
- (bycopy id)volumes;
- (bycopy id)selection;
- (oneway void)activate;
@end

@protocol NTPathFinderQueryProtocol
- (bycopy id)query:(oneway id)arg1;
@end

@protocol NTPluginHostDelegateProtocol <NSObject>
- (void)pluginFinished:(id)arg1;
- (void)plugin:(id)arg1 output:(id)arg2;
@end

@protocol NTPreviewViewMgrDelegate <NSObject>
- (id)previewMgrImager:(id)arg1;
- (id)previewMgrItems:(id)arg1;
- (struct CGRect)previewMgr:(id)arg1 rectForPosition:(unsigned long long)arg2 iconRect:(struct CGRect *)arg3;
- (id)previewMgrView:(id)arg1;
@end

@protocol NTRenameWatcherDelegateProtocol <NSObject>
- (void)renameWatcher:(id)arg1 renamed:(id)arg2;
@end

@protocol NTRenamerDelegate <NSObject>
- (void)renamerDelegate_renameNext:(id)arg1 item:(id)arg2 context:(id)arg3;
- (id)renamerDelegate_prepareToRenameNext:(BOOL)arg1 item:(id)arg2 context:(id)arg3;
- (struct CGRect)renamerDelegate_screenRectForText;
- (struct CGRect)renamerDelegate_screenRectForEditor;
- (void)renamerDelegate_renameItem:(id)arg1 context:(id)arg2 to:(id)arg3;
- (void)renamerDelegate_renameDidEnd;
- (void)renamerDelegate_renameDidStart;
@end

@protocol NTSecureDeletePanelControllerDelegate <NSObject>
- (void)deletePanel_deleteStarted;
@end

@protocol NTSharedActionDelegateProtocol <NSObject>
- (id)modifyAttributeNotificationName_SAD;
- (id)actionTargetInSelectedDirectory_SAD;
- (id)actionTargetDirectory_SAD;
- (void)clearFileFilter_SAD;
- (id)containingDirectory_SAD;
- (BOOL)treatPackagesAsFolders_SAD;
- (id)window_SAD;
- (unsigned long long)numItemsSelected_SAD;
- (id)firstSelectedDesc_SAD:(BOOL)arg1;
- (id)selectedDescs_SAD:(BOOL)arg1;
- (id)serverRequest_SAD;
@end

@protocol NTSimpleTimerProtocol
- (void)delegate_simpleTimerNotification:(id)arg1;
@end

@protocol NTSlidingViewDelegate <NSObject>
- (void)slidingViewAnimationDone:(id)arg1;
@end

@protocol NTTabBarDelegateProtocol <NSObject>
- (BOOL)tabBar_buttonBarDrawInactive:(id)arg1;
- (void)setTabBar:(id)arg1;
- (void)tabBar_reorder:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)tabBar_activateOnMouseDown:(id)arg1;
- (void)tabBar_doubleClickOnBar:(id)arg1;
- (void)tabBar_performDrop:(id)arg1 dragObject:(id)arg2 insertIndex:(unsigned long long)arg3;
- (void)tabBar_performDrop:(id)arg1 descs:(id)arg2 insertIndex:(unsigned long long)arg3;
- (id)tabBar_itemArray:(id)arg1 selectedItem:(id *)arg2;
@end

@protocol NTTabBarItemDelegateProtocol <NSObject>
- (id)tabbItem_dragObject:(id)arg1;
- (id)tabbItem_tooltipForItem:(id)arg1;
- (id)tabbItem_titleForItem:(id)arg1;
- (id)tabbItem_contextualMenuForItem:(id)arg1;
- (BOOL)tabbItem_itemIsRemovable:(id)arg1;
- (void)tabbItem_removedOtherItems:(id)arg1;
- (void)tabbItem_itemWasRemoved:(id)arg1;
- (void)tabbItem_itemWasClicked:(id)arg1;
- (BOOL)tabbItem_canSpringLoad:(id)arg1 onItem:(id)arg2;
- (void)tabbItem_handleDrop:(id)arg1 onItem:(id)arg2;
- (unsigned long long)tabbItem_dragOperation:(id)arg1 onItem:(id)arg2;
@end

@protocol NTTaskControllerDelegateProtocol <NSObject>
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
@end

@protocol NTWindowURLSetterDelegate <NSObject>
- (id)windowURLSetter_window:(id)arg1;
@end

@protocol PFPathFinderDOProtocol
- (bycopy id)selectedFilenames;
- (oneway void)showInfoForPath:(bycopy id)arg1;
- (oneway void)selectPath:(bycopy id)arg1 byExtendingSelection:(BOOL)arg2;
- (oneway void)showPath:(bycopy id)arg1 inNewWindow:(BOOL)arg2;
- (bycopy id)currentDirectory;
- (bycopy id)selectedPaths;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@protocol private_BrowserModel <NSObject>
- (BOOL)isActiveView;
- (BOOL)doOpenDocument:(int)arg1 treatPackagesAsFolders:(BOOL)arg2 ignoreGatekeeper:(BOOL)arg3;
@end

@interface NTFileBrowserDocument : NTWindowController <NTWindowURLSetterDelegate, NTCurrentBrowserMgrProtocol, NTCBMWindowDelegate, NTBSMWindowDelegate>
{
    BOOL restoring;
    NTBrowserDocumentModel *documentModel;
    NTCurrentBrowserMgr *currentBrowserMgr;
    NTBrowserWindowContentView *browserContentView;
    NTWindowTitleSetter *titleSetter;
    NTBrowserToolbarController *toolbarController;
    NTBrowserOptionsModel *optionsModel;
    NTWindowSaveHelper *windowSaveHelper;
}

+ (void)setFirstResponderToBrowserID:(id)arg1 inWindow:(id)arg2;
+ (id)makeDocument:(BOOL)arg1 customWindowFrame:(struct CGRect)arg2;
+ (id)makeDocument:(BOOL)arg1;
@property(retain, nonatomic) NTWindowSaveHelper *windowSaveHelper; // @synthesize windowSaveHelper;
@property(retain) NTBrowserOptionsModel *optionsModel; // @synthesize optionsModel;
@property(nonatomic) BOOL restoring; // @synthesize restoring;
@property(retain, nonatomic) NTBrowserToolbarController *toolbarController; // @synthesize toolbarController;
@property(retain, nonatomic) NTWindowTitleSetter *titleSetter; // @synthesize titleSetter;
@property(retain, nonatomic) NTBrowserWindowContentView *browserContentView; // @synthesize browserContentView;
@property(retain, nonatomic) NTCurrentBrowserMgr *currentBrowserMgr; // @synthesize currentBrowserMgr;
@property(retain, nonatomic) NTBrowserDocumentModel *documentModel; // @synthesize documentModel;
- (id)documentInfo;
- (void)handleToolbarClick:(id)arg1;
- (void)setBrowserStyle:(int)arg1;
- (int)browserStyle;
- (void)showTab:(id)arg1 selectDescs:(id)arg2 selectExisting:(BOOL)arg3;
- (BOOL)selectTab:(id)arg1 selectDescs:(id)arg2;
- (id)browserWithID:(id)arg1;
- (id)browser;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
- (void)makeBrowserFirstResponderNotification:(id)arg1;
- (void)saveDocumentState:(id)arg1;
- (void)doCloseWindowSelector:(id)arg1;
- (void)askUserBeforeTabClose;
- (void)toolbarDecompressAction:(id)arg1;
- (void)toolbarCompressAction:(id)arg1;
- (void)toolbarMoveAction:(id)arg1;
- (void)toolbarCopyAction:(id)arg1;
- (void)editPathAction:(id)arg1;
- (void)syncDualPaneAction:(id)arg1;
- (void)compareDualPaneAction:(id)arg1;
- (void)toggleShowDualPaneCommandAction:(id)arg1;
- (void)decompressToOtherPaneAction:(id)arg1;
- (void)compressToOtherPaneAction:(id)arg1;
- (void)moveToOtherPaneAction:(id)arg1;
- (void)copyToOtherPaneAction:(id)arg1;
- (void)swapDualPanesAction:(id)arg1;
- (void)performFindInBrowserAction:(id)arg1;
- (void)toggleDisableDraggingToToolbarAction:(id)arg1;
- (void)browseInNextPaneAction:(id)arg1;
- (void)nextBrowserPaneAction:(id)arg1;
- (void)tabOptionsButtonAction:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)openRecentTabAction:(id)arg1;
- (void)closeOtherTabsAction:(id)arg1;
- (void)closeTabAction:(id)arg1;
- (void)selectPreviousTabAction:(id)arg1;
- (void)selectNextTabAction:(id)arg1;
- (void)newTabAction:(id)arg1;
- (void)backForwardButtonPopUpAction:(id)arg1;
- (id)buildBackForwardMenu:(BOOL)arg1;
- (void)backForwardHistoryButtonAction:(id)arg1;
- (void)browserViewButtonAction:(id)arg1;
- (void)viewsButtonAction:(id)arg1;
- (void)shelfsButtonAction:(id)arg1;
- (void)hidePathNavigatorAction:(id)arg1;
- (void)cloneWindowAction:(id)arg1;
- (void)editFileWindowSetAction:(id)arg1;
- (void)saveFileWindowSetAction:(id)arg1;
- (void)stopButtonAction:(id)arg1;
- (void)toggleBrowserWindowViewAction:(id)arg1;
- (void)toggleBottomShelfAction:(id)arg1;
- (void)toggleRightShelfAction:(id)arg1;
- (void)toggleLeftShelfAction:(id)arg1;
- (void)dualBrowserDirectionAction:(id)arg1;
- (void)toggleCoverflowAction:(id)arg1;
- (void)toggleDualBrowserAction:(id)arg1;
- (void)connectToServerAction:(id)arg1;
- (void)findSheetAction:(id)arg1;
- (void)findFilePanel_message:(id)arg1;
- (void)forwardPathHistoryAction:(id)arg1;
- (void)backPathHistoryAction:(id)arg1;
- (void)goToFolderAction:(id)arg1;
- (void)iconViewAction:(id)arg1;
- (void)columnViewAction:(id)arg1;
- (void)listViewAction:(id)arg1;
- (id)popUpMenuFirstSelectedDesc;
- (unsigned long long)popUpMenuNumSelected;
- (id)currentActionPopUpMenu;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)hideDropStack_noValidate_Action:(id)arg1;
- (void)hideDropStackAction:(id)arg1;
- (void)dropStackButtonAction:(id)arg1;
- (void)progressButtonAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)supportsCloseTabMenuItemMessage:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)setServerRequestSelectPrevious:(id)arg1 params:(id)arg2;
- (id)dualPaneCommandInfo;
- (BOOL)keyFilter_handleKeyEvent:(id)arg1;
- (BOOL)wantsSmallScrollBarsInWebView;
- (void)windowPopUpMenuAction:(id)arg1;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (void)combineOtherWindowsToTabs;
- (id)browserTabModels;
- (void)setupDocumentWindow;
- (void)window:(id)arg1 toolbarWasHidden:(BOOL)arg2;
- (void)setWindowTitle:(id)arg1;
- (id)getCurrentParentDirectory;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowSupportsThemes;
- (void)didFloatAction:(BOOL)arg1;
- (id)currentStateNofication_displayedItems:(id)arg1;
- (struct CGRect)currentStateNofication_frame:(id)arg1 forDesc:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 fileServerRequest:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 selection:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (id)currentStateNofication_rootFileServerRequest:(id)arg1;
- (id)currentStateNofication_fileServerRequest:(id)arg1;
- (id)currentStateNofication_selection:(id)arg1;
- (id)currentStateNofication_browserID;
- (void)refreshAllViewsNotification:(id)arg1;
- (void)CBMNotification:(id)arg1;
- (id)CBM_browserWithID:(id)arg1;
- (id)CBM_currentBrowser;
- (id)CBM_currentBrowserMgr;
- (id)windowURLSetter_window:(id)arg1;
- (void)searchTextFieldAction:(id)arg1;
- (void)updatebrowserSearchField;
- (id)searchDirectories:(int)arg1 currentRequest:(id)arg2;
- (id)selectedDirectories;

@end

@interface NTBrowserToolbarController : NSObject <NSToolbarDelegate>
{
    BOOL builtFromDefaults;
    NTFileBrowserDocument *browserDocument;
    NSToolbar *toolbar;
}

@property(nonatomic) BOOL builtFromDefaults; // @synthesize builtFromDefaults;
@property(retain, nonatomic) NSToolbar *toolbar; // @synthesize toolbar;
@property NTFileBrowserDocument *browserDocument; // @synthesize browserDocument;
- (void)makeSearchFieldFirstResponder;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)activeToolbarItemClicked:(id)arg1;
- (BOOL)isVisible;
- (void)setVisible:(BOOL)arg1;
- (BOOL)appendAcceptsDroppedItemsItem;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 window:(id)arg2;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)updateForNewDefaultItems;
- (void)toolbarWillAddItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)trashDropAction:(id)arg1 dragInfo:(id)arg2;
- (void)moveDropAction:(id)arg1 dragInfo:(id)arg2;
- (void)applicationDropAction:(id)arg1 dragInfo:(id)arg2;
- (void)customDropAction:(id)arg1 dragInfo:(id)arg2;
- (unsigned long long)indexOfItemWithView:(id)arg1;

@end

@interface PathFinderAppController : NSObject
{
    BOOL _applicationInitialized;
    BOOL _attemptingToTerminate;
    BOOL _systemWillPowerOff;
    NTFileDesc *_revealAfterFinishedLaunching;
    DynamicMenuManager *_dynamicMenuManager;
    NSMenu *_dockMenu;
    NTActionToken *_emptyTrashActionToken;
}

+ (BOOL)attemptingToTerminate;
+ (id)factoryDefaults;
@property(nonatomic) BOOL systemWillPowerOff; // @synthesize systemWillPowerOff=_systemWillPowerOff;
@property(retain, nonatomic) NTActionToken *emptyTrashActionToken; // @synthesize emptyTrashActionToken=_emptyTrashActionToken;
@property(nonatomic) BOOL attemptingToTerminate; // @synthesize attemptingToTerminate=_attemptingToTerminate;
@property(retain, nonatomic) NSMenu *dockMenu; // @synthesize dockMenu=_dockMenu;
@property(nonatomic) BOOL applicationInitialized; // @synthesize applicationInitialized=_applicationInitialized;
@property(retain, nonatomic) DynamicMenuManager *dynamicMenuManager; // @synthesize dynamicMenuManager=_dynamicMenuManager;
@property(retain, nonatomic) NTFileDesc *revealAfterFinishedLaunching; // @synthesize revealAfterFinishedLaunching=_revealAfterFinishedLaunching;
- (void)watchdog:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)application:(id)arg1 printFiles:(id)arg2;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (BOOL)application:(id)arg1 openFile:(id)arg2 behavior:(int)arg3;
- (id)applicationDockMenu:(id)arg1;
- (id)application:(id)arg1 willPresentError:(id)arg2;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)newWindowFromTabDropAction:(id)arg1;
- (void)newTabAction:(id)arg1;
- (void)showHelpVideosAction:(id)arg1;
- (void)showRevealInPathFinderToolbarWindowAction:(id)arg1;
- (void)toggleGetInfoInspectorPanel:(id)arg1;
- (void)launchAsRootAction:(id)arg1;
- (void)eraseDiscAction:(id)arg1;
- (void)burnAction:(id)arg1;
- (void)showHelpAction:(id)arg1;
- (void)showMacHelpAction:(id)arg1;
- (void)launchApplicationPanelAction:(id)arg1;
- (void)revealInPathFinder:(id)arg1;
- (void)showGetInfoWindowForDescMessage:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)fileOperationsWindowAction:(id)arg1;
- (void)findFilePanelAction:(id)arg1;
- (void)showViewOptionsAction:(id)arg1;
- (void)terminalAction:(id)arg1;
- (void)newTextFileAction:(id)arg1;
- (void)manPageReportAction:(id)arg1;
- (void)fontReport_message:(id)arg1;
- (void)fontsReportAction:(id)arg1;
- (void)pasteboardsReportAction:(id)arg1;
- (void)iChatReportAction:(id)arg1;
- (void)purchaseAction:(id)arg1;
- (void)defaultsReportAction:(id)arg1;
- (void)volumesReportAction:(id)arg1;
- (void)minimizeAllAction:(id)arg1;
- (void)documentController:(id)arg1 didCloseAll:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)closeAllAction:(id)arg1;
- (void)showDesktopSystemPreferencePanel:(id)arg1;
- (void)trashSizeAction:(id)arg1;
- (void)floatTrashAction:(id)arg1;
- (void)showAllAction:(id)arg1;
- (void)hideOthersAction:(id)arg1;
- (void)hideFrontProcessAction:(id)arg1;
- (void)showTrashAction:(id)arg1;
- (void)secureEmptyTrashAtPathAction:(id)arg1;
- (void)emptyTrashAtPathAction:(id)arg1;
- (void)secureEmptyTrashAction:(id)arg1;
- (void)emptyTrashAction:(id)arg1;
- (void)terminateAction:(id)arg1;
- (void)doCloseWindowSelector:(id)arg1;
- (BOOL)askUserBeforeTerminate;
- (void)doTerminate;
- (void)switchToApplicationAction:(id)arg1;
- (void)showPackageContentsInApplication:(id)arg1;
- (void)revealItemInApplication:(id)arg1;
- (void)menuItemPackageAction:(id)arg1;
- (void)menuItemAction:(id)arg1;
- (void)showDesktopAction:(id)arg1;
- (void)utilitiesAction:(id)arg1;
- (void)applicationsAction:(id)arg1;
- (void)computerAction:(id)arg1;
- (void)openTextDocument:(id)arg1;
- (void)documentsAction:(id)arg1;
- (void)favoritesAction:(id)arg1;
- (void)libraryFolderAction:(id)arg1;
- (void)preferencesFolderAction:(id)arg1;
- (void)downloadsFolderAction:(id)arg1;
- (void)homeAction:(id)arg1;
- (void)diskImageAction:(id)arg1;
- (void)connectToServerAction:(id)arg1;
- (void)emailSupportAction:(id)arg1;
- (void)homepageAction:(id)arg1;
- (void)newFileWindowAction:(id)arg1;
- (void)goToFolderAction:(id)arg1;
- (void)showPreferencesPanel:(id)arg1;
- (void)displayXMLFeeds:(id)arg1;
- (void)checkForUpdates:(id)arg1;
- (void)showAboutBox:(id)arg1;
- (void)doIChatReport:(id)arg1;
- (void)chooseIChatFolderSelector:(id)arg1;
- (BOOL)shouldEnableCloseAllAction;
- (BOOL)shouldEnableMinimizeAllAction;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showFSEventsLogAction:(id)arg1;
- (void)showGeneralLogAction:(id)arg1;
- (void)createPathFinderSDKDistribution:(id)arg1;
- (void)emptyCachesAction:(id)arg1;
- (void)testCrashReporterAction:(id)arg1;
- (void)testExceptionHandlerAction:(id)arg1;
- (void)openFilesReportAction:(id)arg1;
- (void)restartSystemUIServerAction:(id)arg1;
- (void)verifyApplicationAction:(id)arg1;
- (void)atosIntelAction:(id)arg1;
- (void)preferencesModified:(id)arg1;
- (void)systemWillPowerOffNotification:(id)arg1;
- (void)fileLaunchFailedNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)doRevealForOpenLocationAppleEvent:(id)arg1;
- (void)setupEventHandlers;
- (void)addDebugMenu;
- (void)disableCacheAction:(id)arg1;
- (void)installDebugItemsInHelpMenu;
- (void)handleRunException:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)installSortByMenu;
- (void)installArrangeByMenu;
- (void)installLabelMenu;
- (void)activateApplication;
- (void)setupPluginsMenuBar;
- (void)setupMenuBar;
- (void)slowDelayedInitialize;
- (void)delayedInitialize;
- (void)initializeApplication;
- (void)showPurchaseWindow:(BOOL)arg1;
- (void)continueLaunchingApplicationNotification:(id)arg1;
- (void)handleOpenLocationAppleEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)resolveServerURL_result:(id)arg1;
- (id)resolveServerURL_worker:(id)arg1;
- (void)volumeDidMountNotification:(id)arg1;
- (void)volumeListChangedNotification:(id)arg1;

@end

@interface NTCloudDriveView : NTView
{
    NSImage *_image;
    NSAttributedString *_title;
    NSAttributedString *_text;
    NSAttributedString *_link;
    NSButton *_button;
    struct CGPoint _imageOrigin;
    struct CGPoint _titleOrigin;
    struct CGRect _textRect;
    struct CGRect _linkRect;
}

@property(retain, nonatomic) NSButton *button; // @synthesize button=_button;
@property(nonatomic) struct CGRect linkRect; // @synthesize linkRect=_linkRect;
@property(retain, nonatomic) NSAttributedString *link; // @synthesize link=_link;
@property(nonatomic) struct CGRect textRect; // @synthesize textRect=_textRect;
@property(retain, nonatomic) NSAttributedString *text; // @synthesize text=_text;
@property(nonatomic) struct CGPoint titleOrigin; // @synthesize titleOrigin=_titleOrigin;
@property(retain, nonatomic) NSAttributedString *title; // @synthesize title=_title;
@property(nonatomic) struct CGPoint imageOrigin; // @synthesize imageOrigin=_imageOrigin;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void)openCloudPreferences:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)frameDidChange;
- (void)mouseDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface ListViewController : NTBrowserViewController <NTBaseViewDataMgrDelegateProtocol, NTBrowserContextualMenuProtocol, NTOutlineTreeNodeMgrDelegateProtocol, NSTokenFieldCellDelegate, ListViewDelegateProtocol>
{
    NTView *_outlineContainerView;
    NSScrollView *_outlineScrollView;
    ListView *_outlineView;
    NTOutlineTreeNodeMgr *_nodeMgr;
    ListControllerParams *_listViewParams;
    BOOL _userCollapsingOrExpandingItemWithChildren;
    NTBrowserContextualMenu *_contextualMenu;
    NSMutableDictionary *_expandStateAddDictionary;
    NSMutableDictionary *_expandStateRemoveDictionary;
    NTOutlineTreeNode *_userCollapsingOrExpandingItem;
    NTCachedSelection *_cachedSelection;
    NSArray *_tokens;
    NSArray *_allTags;
    NSArray *_allTagsStrings;
    NSTokenFieldCell *_tagDraggedSource;
}

@property(retain, nonatomic) NSTokenFieldCell *tagDraggedSource; // @synthesize tagDraggedSource=_tagDraggedSource;
@property(retain, nonatomic) NSArray *allTagsStrings; // @synthesize allTagsStrings=_allTagsStrings;
@property(retain, nonatomic) NSArray *allTags; // @synthesize allTags=_allTags;
@property(retain, nonatomic) NSArray *tokens; // @synthesize tokens=_tokens;
@property(nonatomic) BOOL userCollapsingOrExpandingItemWithChildren; // @synthesize userCollapsingOrExpandingItemWithChildren=_userCollapsingOrExpandingItemWithChildren;
@property(retain, nonatomic) NTCachedSelection *cachedSelection; // @synthesize cachedSelection=_cachedSelection;
@property(retain, nonatomic) NTOutlineTreeNode *userCollapsingOrExpandingItem; // @synthesize userCollapsingOrExpandingItem=_userCollapsingOrExpandingItem;
@property(retain, nonatomic) NSMutableDictionary *expandStateRemoveDictionary; // @synthesize expandStateRemoveDictionary=_expandStateRemoveDictionary;
@property(retain, nonatomic) NSMutableDictionary *expandStateAddDictionary; // @synthesize expandStateAddDictionary=_expandStateAddDictionary;
@property(retain, nonatomic) NTBrowserContextualMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
- (void)userCollapsingOrExpandingItem:(id)arg1 withChildren:(BOOL)arg2;
- (void)selectionChanged;
- (unsigned long long)numVisibleItemsIgnoringGroups:(BOOL)arg1;
- (id)responderView;
- (id)containingView;
- (struct CGRect)rectForVisibleIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (void)enableExpandChildrenMode;
- (void)sendDoubleClick;
- (unsigned long long)numItemsSelected;
- (void)setColumnHeader:(id)arg1 title:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;
- (void)restoreViewVisibleRectWithRect:(struct CGRect)arg1;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (BOOL)renameSelection;
- (void)scrollToSelection;
- (BOOL)expandSelection:(BOOL)arg1;
- (BOOL)contractSelection:(BOOL)arg1;
- (id)visibleItems;
- (void)deselectAll;
- (void)selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)firstSelectedItem;
- (id)selectedDescs:(BOOL)arg1;
- (void)nodeMgr:(id)arg1 expandNode:(id)arg2 expandChildren:(BOOL)arg3;
- (void)nodeMgr:(id)arg1 reloadNode:(id)arg2 reloadChildren:(BOOL)arg3;
- (id)nodeMgr:(id)arg1 listForNode:(id)arg2;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (BOOL)dataMgr_shouldUpdate;
- (BOOL)tokenFieldCell:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (void)updateTokens:(id)arg1;
- (id)tokenFieldCell:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenFieldCell:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)tokenFieldCell:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)contextualMenuHelper:(id)arg1 outTarget:(id *)arg2;
- (BOOL)restoreSelectionState:(id)arg1;
- (id)saveSelectionState;
- (void)updateAllTags:(id)arg1;
- (void)saveDirectoryViewState:(id)arg1 parentDirectory:(id)arg2 expand:(BOOL)arg3;
- (void)reloadOnDayChangeNotification:(id)arg1;
- (id)afterSelectionItem;
- (id)selectedItems;
- (id)selectedNodes;
- (BOOL)selectionPath:(id)arg1 matchesNode:(id)arg2 skipFirst:(BOOL)arg3 matchedByName:(char *)arg4;
- (id)selectionPathForNode:(id)arg1;
- (unsigned long long)rowForItemSelectionPath:(id)arg1 search:(id)arg2 matchedByName:(char *)arg3;
- (id)columnSpecWithID:(id)arg1;
- (id)buildColumnFromSpec:(id)arg1;
- (void)createOutlineView:(struct CGRect)arg1;
- (void)setListViewParams:(id)arg1;
- (id)listViewParams;
- (void)setNodeMgr:(id)arg1;
- (id)nodeMgr;
- (void)setOutlineView:(id)arg1;
- (id)outlineView;
- (void)doSaveDirectoryViewStateAfterDelay;
- (BOOL)listView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)listView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)listView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)listView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)listView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)listView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)listView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)listView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)listView:(id)arg1 didCollapse:(id)arg2;
- (void)listView:(id)arg1 didExpand:(id)arg2;
- (id)listView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)listView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)listView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)listView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)listView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (id)listView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)syncUISortSettings:(id)arg1;
- (void)handleDefaultColorOptionsChanged;
- (void)handleViewOptionsNotification:(id)arg1;
- (void)columnsChangedNotification:(id)arg1;
- (void)syncListViewColors;
- (void)updateColumnLayout;
- (id)columnLayoutString;
- (void)rearrangeAndResizeColumns;
- (BOOL)resetColumn:(id)arg1;
- (void)resetColumnsWithPrefs;
- (void)resetTableLineHeight;

@end

@interface NTNextRequestInBrowserMgr : NTSingletonObject
{
    NTFileServerRequest *serverRequest;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NTFileServerRequest *serverRequest; // @synthesize serverRequest;
- (BOOL)hasCustomServerRequest;
- (id)nextListRequest;
- (id)makeDocumentWithRequest:(id)arg1 selectExistingWindow:(BOOL)arg2 showWindow:(BOOL)arg3 customWindowFrame:(struct CGRect)arg4;
- (id)makeDocumentWithRequest:(id)arg1 selectExistingWindow:(BOOL)arg2 showWindow:(BOOL)arg3;
- (void)dealloc;
- (BOOL)selectWindowWithListRequest:(id)arg1;

@end

@interface DynamicMenuManager : NSObject
{
}

- (void)dealloc;
- (id)init;
- (void)enabledSpecialSubmenus;
- (id)frameworksMenu:(SEL)arg1;
- (void)installDisassembleMenu;
- (void)installSymbolTableMenu;
- (void)installClassDumpMenu;
- (void)installGroupMenu;
- (void)installOwnerMenu;
- (void)installLabelMenu;
- (void)installOpenWithMenu;
- (void)installKopyPathMenu;
- (void)installStuffItMenu;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)disassembleReportAction:(id)arg1;
- (void)symbolTableReportAction:(id)arg1;
- (void)classDumpReportAction:(id)arg1;

@end

@interface NTFileLauncher : NTSingletonObject <NTMessageProxyProtocol>
{
    BOOL _resolveServerAliases;
    NTMessageProxy *_proxy;
    NTFileLauncherThread *_thread;
    NTFileDesc *_aliasToSet;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property BOOL resolveServerAliases; // @synthesize resolveServerAliases=_resolveServerAliases;
@property(retain) NTFileDesc *aliasToSet; // @synthesize aliasToSet=_aliasToSet;
@property(retain) NTFileLauncherThread *thread; // @synthesize thread=_thread;
@property(retain) NTMessageProxy *proxy; // @synthesize proxy=_proxy;
- (void)askHexEditor:(id)arg1 window:(id)arg2;
- (void)launchSudo:(id)arg1;
- (void)launchItems:(id)arg1 withApp:(id)arg2 window:(id)arg3 launchFlags:(unsigned int)arg4;
- (void)launchItems:(id)arg1 withApp:(id)arg2 window:(id)arg3;
- (void)launchItems:(id)arg1 window:(id)arg2;
- (void)launch:(id)arg1 withApp:(id)arg2 window:(id)arg3;
- (void)launch:(id)arg1 window:(id)arg2;
- (id)init;
- (void)dealloc;
- (BOOL)shouldExpandWithStuffitEngine:(id)arg1;
- (BOOL)shouldRunSearchQuery:(id)arg1;
- (BOOL)shouldOpenFileInImageViewer:(id)arg1;
- (BOOL)shouldOpenFileInTextEditor:(id)arg1;
- (id)itemsRemovingServerAliases:(id)arg1 outServerAliases:(id *)arg2;
- (void)launchItems:(id)arg1 withApp:(id)arg2 window:(id)arg3 launchFlags:(unsigned int)arg4 revealFolders:(BOOL)arg5;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (void)setAliasOriginal:(id)arg1;
- (void)showAlerts:(id)arg1;
- (void)openInHexViewSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface NTEULAWindowController : NSWindowController
{
    NSView *_contentView;
    NSTextView *_eulaTextView;
}

+ (id)window;
@property(retain, nonatomic) NSTextView *eulaTextView; // @synthesize eulaTextView=_eulaTextView;
@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)windowWillClose:(id)arg1;
- (void)agree:(id)arg1;
- (void)windowDidLoad;

@end

@interface NTGotoFolderPanelController : NTWindowController <NTGotoFolderWindowDelegateProtocol>
{
    NSView *shortCuts;
    NTGotoFolderSearchField *textField;
    NSTextView *instructionsTextView;
    BOOL runningAsSheet;
    NSWindow *parentWindow;
    NTGotoFolderUIModel *mContentModel;
    NTWindowCollapse *windowCollapse;
    NTWindowSaveHelper *windowHelper;
}

+ (void)gotoFolder:(id)arg1 parentWindow:(id)arg2;
@property(retain, nonatomic) NTWindowCollapse *windowCollapse; // @synthesize windowCollapse;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow;
@property(nonatomic) BOOL runningAsSheet; // @synthesize runningAsSheet;
@property(retain, nonatomic) NTWindowSaveHelper *windowHelper; // @synthesize windowHelper;
- (void)backButtonAction:(id)arg1;
- (void)goToSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)goButtonAction:(id)arg1;
- (void)cancelButtonAction:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)willPopUpNotification:(id)arg1;
- (void)setContentModel:(id)arg1;
- (id)contentModel;
- (void)doClose:(BOOL)arg1;
- (void)run;
- (void)expandWindow;
- (void)collapseWindow;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)handleDownArrowKey;
- (BOOL)handleUpArrowKey;
- (BOOL)keyFilter_handleKeyEvent:(id)arg1;
- (BOOL)handleTabKey;
- (BOOL)handleDeleteKey:(BOOL)arg1;
- (void)clickInTableAction:(id)arg1;

@end

@interface ListView : NTOutlineView <NTRenamerDelegate>
{
    BOOL _ignoreDoubleClickInTableHeader;
    BOOL _ignoreExpandItem;
    SEL _ctDoubleAction;
    ListViewController *_viewController;
    NTDragInfoCache *_dragInfoCache;
    NTRenamer *_renamer;
    long long _firstResponderEventNumber;
    ListViewOutlineViewDelegate *_delegateFilter;
    struct CGRect _rubberBandRect;
}

@property(retain, nonatomic) ListViewOutlineViewDelegate *delegateFilter; // @synthesize delegateFilter=_delegateFilter;
@property(nonatomic) struct CGRect rubberBandRect; // @synthesize rubberBandRect=_rubberBandRect;
@property(nonatomic) BOOL ignoreExpandItem; // @synthesize ignoreExpandItem=_ignoreExpandItem;
@property(nonatomic) long long firstResponderEventNumber; // @synthesize firstResponderEventNumber=_firstResponderEventNumber;
@property(retain, nonatomic) NTRenamer *renamer; // @synthesize renamer=_renamer;
@property(retain, nonatomic) NTDragInfoCache *dragInfoCache; // @synthesize dragInfoCache=_dragInfoCache;
@property(nonatomic) BOOL ignoreDoubleClickInTableHeader; // @synthesize ignoreDoubleClickInTableHeader=_ignoreDoubleClickInTableHeader;
@property ListViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) SEL ctDoubleAction; // @synthesize ctDoubleAction=_ctDoubleAction;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2 userEvent:(BOOL)arg3;
- (id)visibleItems;
- (BOOL)isRenaming;
- (BOOL)renameSelection;
- (BOOL)expandSelection:(BOOL)arg1;
- (BOOL)contractSelection:(BOOL)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)doubleClickAction:(id)arg1;
- (unsigned long long)focusRingType;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)performDragOperation:(id)arg1;
- (id)menu;
- (void)keyDown:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)arg1;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)renamerDelegate_renameNext:(id)arg1 item:(id)arg2 context:(id)arg3;
- (id)renamerDelegate_prepareToRenameNext:(BOOL)arg1 item:(id)arg2 context:(id)arg3;
- (void)renamerDelegate_renameItem:(id)arg1 context:(id)arg2 to:(id)arg3;
- (struct CGRect)renamerDelegate_screenRectForEditor;
- (struct CGRect)renamerDelegate_screenRectForText;
- (void)renamerDelegate_renameDidEnd;
- (void)renamerDelegate_renameDidStart;
- (void)_expandItemEntry:(id)arg1 expandChildren:(BOOL)arg2 startLevel:(long long)arg3;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)springLoadFolderAtRow:(long long)arg1;
- (BOOL)canSpringLoadRowIndex:(long long)arg1 dragInfo:(id)arg2;
- (void)doAcceptDrop:(id)arg1;
- (unsigned long long)dropInfo:(id)arg1 isValidOnIndex:(long long)arg2;
- (long long)dropIndexUnderMouse:(struct CGPoint)arg1;
- (void)showDropAnimation:(long long)arg1 dragInfo:(id)arg2;
- (void)renameRow:(unsigned long long)arg1 delay:(BOOL)arg2;

@end

@interface NTRecentListRequestManager : NSObject
{
    NTFileServerRequest *lastBackButtonRequest;
    NSMutableArray *backButtonRequests;
    NSMutableArray *forwardButtonRequests;
}

+ (id)manager;
@property(retain, nonatomic) NSMutableArray *forwardButtonRequests; // @synthesize forwardButtonRequests;
@property(retain, nonatomic) NSMutableArray *backButtonRequests; // @synthesize backButtonRequests;
@property(retain, nonatomic) NTFileServerRequest *lastBackButtonRequest; // @synthesize lastBackButtonRequest;
- (id)recentMenu:(BOOL)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)addRecent:(id)arg1;
- (id)getForward;
- (id)getBack;
- (BOOL)hasForward;
- (BOOL)hasBack;
- (void)dealloc;
- (void)verifyForwardButtonRequests;
- (void)verifyBackButtonRequests;

@end

@interface NTPathFinderGlobalMenuMgr : NSObject <NSMenuDelegate>
{
    BOOL menuIsValid;
    NSMenu *statusMenu;
    NTPathFinderStatusItemMenuMgr *statusMgr;
}

+ (void)install;
@property(retain, nonatomic) NTPathFinderStatusItemMenuMgr *statusMgr; // @synthesize statusMgr;
@property(nonatomic) BOOL menuIsValid; // @synthesize menuIsValid;
@property(retain, nonatomic) NSMenu *statusMenu; // @synthesize statusMenu;
- (id)init;
- (void)dealloc;
- (void)setMenuCmdKeyInMenu:(id)arg1;
- (void)updateGlobalMenuFromPreference;
- (id)recentsMenu;
- (void)favoritesUpdatedNotification:(id)arg1;
- (void)applicationsUpdatedNotification:(id)arg1;
- (void)processManagerNotification:(id)arg1;
- (void)preferencesModified:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTSecureDeletePanelController : NSObject
{
    id window;
    id fileTable;
    id securityLevelRadioMatrix;
    id <NTSecureDeletePanelControllerDelegate> delegate;
    BOOL useDefaultLevel;
    NSArray *descs;
    NSWindow *parentWindow;
    BOOL runningAsSheet;
    int defaultLevel;
    NTActionToken *actionToken;
}

+ (void)runWithDescs:(id)arg1 useDefaultLevel:(BOOL)arg2 delegate:(id)arg3 parentWindow:(id)arg4 actionToken:(id)arg5;
@property(retain, nonatomic) NTActionToken *actionToken; // @synthesize actionToken;
@property(nonatomic) BOOL useDefaultLevel; // @synthesize useDefaultLevel;
@property(nonatomic) int defaultLevel; // @synthesize defaultLevel;
@property(nonatomic) BOOL runningAsSheet; // @synthesize runningAsSheet;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow;
@property(retain, nonatomic) NSArray *descs; // @synthesize descs;
@property(retain, nonatomic) id <NTSecureDeletePanelControllerDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) id securityLevelRadioMatrix; // @synthesize securityLevelRadioMatrix;
@property(retain, nonatomic) id fileTable; // @synthesize fileTable;
@property(retain, nonatomic) id window; // @synthesize window;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)deleteButtonAction:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)run;

@end

@interface NTUserWindow : NTWindow <QLPreviewPanelDelegate>
{
    BOOL insideIsKeyWindow;
    BOOL isQuickLookDelegate;
    long long validCBMTarget;
    long long validBSMTarget;
    NSArray *slideShowDescs;
    NSArray *cachedQuicklookSelection;
}

@property(retain, nonatomic) NSArray *cachedQuicklookSelection; // @synthesize cachedQuicklookSelection;
@property(retain, nonatomic) NSArray *slideShowDescs; // @synthesize slideShowDescs;
@property(nonatomic) BOOL isQuickLookDelegate; // @synthesize isQuickLookDelegate;
@property(nonatomic) long long validBSMTarget; // @synthesize validBSMTarget;
@property(nonatomic) BOOL insideIsKeyWindow; // @synthesize insideIsKeyWindow;
@property(nonatomic) long long validCBMTarget; // @synthesize validCBMTarget;
- (BOOL)isKeyWindow;
- (void)_hideToolbar:(id)arg1 animate:(BOOL)arg2;
- (void)_showToolbar:(id)arg1 animate:(BOOL)arg2;
- (void)_performToggleToolbarShown:(id)arg1;
- (void)sendEvent:(id)arg1;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 screen:(id)arg5;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (void)dealloc;
- (BOOL)isBrowserStateMgrCompatible;
- (BOOL)isCurrentBrowserMgrCompatible;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)slideShowAction:(id)arg1;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)worker2_result:(id)arg1;
- (id)worker2:(id)arg1;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)refreshQuicklook:(id)arg1;
- (id)selectionDescs;
- (void)browserStateChangedNotification:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (unsigned long long)modifyStyleMask:(unsigned long long)arg1;
- (void)commonInit;

@end

@interface NTBrowserWindowContentView : NTBoxView
{
    NTFileBrowserContainerView *browserContainer;
}

@property(retain, nonatomic) NTFileBrowserContainerView *browserContainer; // @synthesize browserContainer;
- (void)setPathBarEditable:(BOOL)arg1;
- (void)swapBrowserPanes;
- (void)switchFirstResponder:(id)arg1;
- (id)recentRequestManager;
- (unsigned long long)numberOfTabs;
- (unsigned long long)numberOfTabsTotal;
- (BOOL)dualBrowserMode;
- (id)addBrowser:(id)arg1;
- (BOOL)altBrowserIsCurrent;
- (id)browserTabModels;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)selectPreviousTab;
- (void)selectNextTab;
- (void)setTabSet:(id)arg1;
- (id)tabSet:(id)arg1;
- (void)showTab:(id)arg1 selectDescs:(id)arg2 selectExisting:(BOOL)arg3;
- (BOOL)selectTab:(id)arg1 selectDescs:(id)arg2;
- (id)browserWithID:(id)arg1;
- (id)browser;
- (void)setupView:(id)arg1;
- (void)dealloc;
- (void)setupNotificationObservers;
- (void)syncTopLine:(BOOL)arg1;
- (void)viewDidMoveToWindow;
- (void)toolBarStateChanged:(id)arg1;
- (void)windowDidEnterOrExitFullScreenNotification:(id)arg1;
- (void)windowWillEnterFullScreenNotification:(id)arg1;

@end

@interface ListControllerParams : NSObject <NSMenuDelegate>
{
    NSMenu *_headerContextualMenu;
    id <ListControllerParamsController> _controller;
    NSMutableArray *_columnSpecs;
}

+ (id)paramsWithController:(id)arg1;
@property(retain, nonatomic) NSMutableArray *columnSpecs; // @synthesize columnSpecs=_columnSpecs;
@property(nonatomic) id <ListControllerParamsController> controller; // @synthesize controller=_controller;
@property(retain, nonatomic) NSMenu *headerContextualMenu; // @synthesize headerContextualMenu=_headerContextualMenu;
- (id)columns;
- (id)columnSpec:(unsigned long long)arg1;
- (unsigned long long)numColumnSpecs;
- (void)dealloc;
- (void)setFlag:(BOOL)arg1 forColumnID:(id)arg2;
- (BOOL)flagForColumnID:(id)arg1;
- (void)addColumnSpec:(id)arg1;
- (void)columnMenuAction:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface ActiveToolbarItem : NSToolbarItem <NSCopying>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)validate;
- (struct CGSize)maxSize;
- (struct CGSize)minSize;
- (id)initWithID:(id)arg1 name:(id)arg2 path:(id)arg3 clickAction:(SEL)arg4 dropAction:(SEL)arg5 dropAsAlias:(BOOL)arg6;
- (id)createButton;

@end

@interface NTPathFinderServiceProvider : NSObject
{
}

+ (id)pasteboardTypes;
+ (void)registerForServices;
- (void)getInfoInPathFinderService:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)showInPathFinderService:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (id)descsFromPBoardType:(id)arg1;

@end

@interface NTReports : NSObject
{
    NTFont *_font;
    NSMutableDictionary *_normalAttributes;
    NSMutableDictionary *_boldAttributes;
    NSMutableDictionary *_boldItalicAttributes;
    NSMutableDictionary *_italicAttributes;
    NSMutableDictionary *_centerAttributes;
}

+ (id)report;
- (id)localizedStringsReport:(id)arg1 unlocalized:(BOOL)arg2 region:(id)arg3;
- (id)preferencesReport:(id)arg1;
- (id)pasteboardsReport:(id)arg1;
- (id)iChatReport:(id)arg1 folder:(id)arg2;
- (id)fontsReport:(id)arg1 size:(double)arg2 title:(id)arg3;
- (id)reportForRequest:(id)arg1 items:(id)arg2;
- (id)mountedVolumesReport:(id)arg1;
- (id)reportForDescs:(id)arg1;
- (id)reportForDesc:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)extendedAttributes:(id)arg1;
- (void)dumpPasteboard:(id)arg1 toString:(id)arg2;
- (void)appendResourceForkInfo:(id)arg1 toString:(id)arg2;
- (void)appendQuicktimeMetadata:(id)arg1 toString:(id)arg2;
- (void)appendImageInfo:(id)arg1 toString:(id)arg2;
- (void)appendAliasInfo:(id)arg1 toString:(id)arg2;
- (void)appendExtendedFinderFlags:(unsigned short)arg1 toString:(id)arg2;
- (void)appendFinderFlags:(unsigned short)arg1 toString:(id)arg2;
- (void)adjustTabStops:(id)arg1;
- (id)string:(id)arg1 withFont:(id)arg2;
- (id)normalString:(id)arg1;
- (id)boldString:(id)arg1;
- (void)appendImage:(id)arg1 toString:(id)arg2 addTab:(BOOL)arg3 addReturn:(BOOL)arg4;
- (void)appendString:(id)arg1 toString:(id)arg2 addTab:(BOOL)arg3 addReturn:(BOOL)arg4;
- (void)appendDividerToString:(id)arg1 addReturn:(BOOL)arg2;
- (void)appendDividerToString:(id)arg1;

@end

@interface NTBrowserViewButton : NSSegmentedControl
{
}

+ (Class)cellClass;
- (void)setState:(int)arg1;
- (int)state;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface NTIconViewController : NTBrowserViewController <NTIconViewDataMgrDelegate>
{
    NTIconView *_iconView;
    NSView *_containingView;
}

@property(retain, nonatomic) NSView *containingView; // @synthesize containingView=_containingView;
@property(retain, nonatomic) NTIconView *iconView; // @synthesize iconView=_iconView;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;
- (void)dealloc;
- (void)restoreViewVisibleRectWithRect:(struct CGRect)arg1;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (id)iconPositionMapForSelection:(id)arg1;
- (BOOL)renameSelection;
- (void)scrollToSelection;
- (void)deselectAll;
- (void)selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)numItemsSelected;
- (id)afterSelectionItem;
- (id)firstSelectedItem;
- (id)selectedDescs:(BOOL)arg1;
- (id)selectedItems;
- (struct CGRect)rectForVisibleIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (unsigned long long)numVisibleItemsIgnoringGroups:(BOOL)arg1;
- (id)visibleItems;
- (id)responderView;
- (void)handleDefaultColorOptionsChanged;
- (void)handleViewOptionsNotification:(id)arg1;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (BOOL)dataMgr_shouldUpdate;
- (id)imageBrowser:(id)arg1 groupAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfGroupsInImageBrowser:(id)arg1;
- (id)imageBrowser:(id)arg1 itemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfItemsInImageBrowser:(id)arg1;
- (void)imageBrowserSelectionDidChange:(id)arg1;
- (void)createIconView:(struct CGRect)arg1;

@end

@interface NTDesktopView : NTBackgroundView <NTRenamerDelegate, NTPreviewViewMgrDelegate, NTBrowserContextualMenuProtocol, NTDragDropIndicatorClientProtocol>
{
    BOOL _fileFiltersChanged;
    BOOL _drawIcon;
    BOOL _drawTitle;
    BOOL _snapIconsToGrid;
    BOOL _drawDragDropIndicator;
    BOOL _desktop;
    BOOL _sentSelectionChangedNotification;
    BOOL _leftToRightOrdering;
    BOOL _updatingAfterDelay;
    BOOL _drawDragSelectionInverted;
    long long _iconSize;
    double _gridSpacing;
    NTDesktopViewController *_viewController;
    NTRenamer *_renamer;
    NTIconViewItemImager *_itemImager;
    NTPreviewViewMgr *_previewMgr;
    NTBrowserContextualMenu *_contextualMenu;
    NTSpringLoadedHelper *_springLoadedHelper;
    NTDragDropIndicatorClient *_dragDropIndicatorClient;
    NTDragInfoCache *_dragInfoCache;
    NSMutableIndexSet *_selectedIndexes;
    NTBlockPaginator *_blockPaginator;
    NTFreeformPaginator *_freeformPaginator;
    id <NTPaginatorProtocol> _currentPaginator;
    long long _cellExtraSpace;
    NTFileDesc *_displayingDesc;
    NTRubberbandSelector *_rubberband;
    NTClickState *_clickState;
    long long _dragSelection;
    struct CGPoint _newItemLocation;
}

@property(nonatomic) struct CGPoint newItemLocation; // @synthesize newItemLocation=_newItemLocation;
@property(nonatomic) BOOL drawDragSelectionInverted; // @synthesize drawDragSelectionInverted=_drawDragSelectionInverted;
@property(nonatomic) long long dragSelection; // @synthesize dragSelection=_dragSelection;
@property(retain, nonatomic) NTClickState *clickState; // @synthesize clickState=_clickState;
@property(retain, nonatomic) NTRubberbandSelector *rubberband; // @synthesize rubberband=_rubberband;
@property(retain, nonatomic) NTFileDesc *displayingDesc; // @synthesize displayingDesc=_displayingDesc;
@property(nonatomic) BOOL updatingAfterDelay; // @synthesize updatingAfterDelay=_updatingAfterDelay;
@property(nonatomic) long long cellExtraSpace; // @synthesize cellExtraSpace=_cellExtraSpace;
@property(nonatomic) BOOL leftToRightOrdering; // @synthesize leftToRightOrdering=_leftToRightOrdering;
@property(nonatomic) BOOL sentSelectionChangedNotification; // @synthesize sentSelectionChangedNotification=_sentSelectionChangedNotification;
@property(retain, nonatomic) id <NTPaginatorProtocol> currentPaginator; // @synthesize currentPaginator=_currentPaginator;
@property(retain, nonatomic) NTFreeformPaginator *freeformPaginator; // @synthesize freeformPaginator=_freeformPaginator;
@property(retain, nonatomic) NTBlockPaginator *blockPaginator; // @synthesize blockPaginator=_blockPaginator;
@property(nonatomic) BOOL desktop; // @synthesize desktop=_desktop;
@property(retain, nonatomic) NSMutableIndexSet *selectedIndexes; // @synthesize selectedIndexes=_selectedIndexes;
@property(retain, nonatomic) NTDragInfoCache *dragInfoCache; // @synthesize dragInfoCache=_dragInfoCache;
@property(retain, nonatomic) NTDragDropIndicatorClient *dragDropIndicatorClient; // @synthesize dragDropIndicatorClient=_dragDropIndicatorClient;
@property(retain, nonatomic) NTSpringLoadedHelper *springLoadedHelper; // @synthesize springLoadedHelper=_springLoadedHelper;
@property(retain, nonatomic) NTBrowserContextualMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
@property(retain, nonatomic) NTPreviewViewMgr *previewMgr; // @synthesize previewMgr=_previewMgr;
@property(retain, nonatomic) NTIconViewItemImager *itemImager; // @synthesize itemImager=_itemImager;
@property(retain, nonatomic) NTRenamer *renamer; // @synthesize renamer=_renamer;
@property NTDesktopViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) BOOL drawDragDropIndicator; // @synthesize drawDragDropIndicator=_drawDragDropIndicator;
@property(nonatomic) BOOL snapIconsToGrid; // @synthesize snapIconsToGrid=_snapIconsToGrid;
@property(nonatomic) BOOL drawTitle; // @synthesize drawTitle=_drawTitle;
@property(nonatomic) BOOL drawIcon; // @synthesize drawIcon=_drawIcon;
@property(nonatomic) double gridSpacing; // @synthesize gridSpacing=_gridSpacing;
@property(nonatomic) long long iconSize; // @synthesize iconSize=_iconSize;
@property(nonatomic) BOOL fileFiltersChanged; // @synthesize fileFiltersChanged=_fileFiltersChanged;
- (unsigned long long)lastItemSelected;
- (unsigned long long)firstItemSelected;
- (void)drawSelectionRect:(BOOL)arg1 inRect:(struct CGRect)arg2;
- (void)toggleSelections:(id)arg1;
- (void)toggleSelection:(long long)arg1;
- (BOOL)isSelected:(long long)arg1;
- (void)deselectItem:(long long)arg1;
- (void)selectRange:(struct _NSRange)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectItems:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectItem:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)clearSelection;
- (id)iconPositionMapForSelection:(id)arg1;
- (void)listRequestHasChanged:(id)arg1;
- (long long)itemRelativeTo:(long long)arg1 inDirection:(long long)arg2;
- (void)syncInlinePreviewOption;
- (void)updateForPrefChange;
- (void)setItemMargin:(struct CGSize)arg1;
- (void)setLayoutDirection:(int)arg1;
- (int)layoutDirection;
- (void)setLayoutLeftToRight:(BOOL)arg1;
- (BOOL)layoutLeftToRight;
- (BOOL)isRenaming;
- (BOOL)renameSelection;
- (BOOL)getRectsForItemAtIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3 infoRect:(struct CGRect *)arg4;
- (struct CGRect)rectForPosition:(long long)arg1;
- (void)setPaginationForScreen:(id)arg1;
- (void)setKeepIconsArranged:(BOOL)arg1;
- (BOOL)keepIconsArranged;
- (id)selection;
- (unsigned long long)numItemsSelected;
- (long long)numItems;
- (void)clearDragSelection;
- (id)initWithFrame:(struct CGRect)arg1 isDesktop:(BOOL)arg2;
- (void)dealloc;
- (void)frameDidChange;
- (void)selectAll:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (struct CGRect)visibleRect;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)isFlipped;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)renamerDelegate_renameNext:(id)arg1 item:(id)arg2 context:(id)arg3;
- (id)renamerDelegate_prepareToRenameNext:(BOOL)arg1 item:(id)arg2 context:(id)arg3;
- (struct CGRect)renamerDelegate_screenRectForEditor;
- (struct CGRect)renamerDelegate_screenRectForText;
- (void)renamerDelegate_renameItem:(id)arg1 context:(id)arg2 to:(id)arg3;
- (void)renamerDelegate_renameDidEnd;
- (void)renamerDelegate_renameDidStart;
- (id)previewMgrImager:(id)arg1;
- (id)previewMgrItems:(id)arg1;
- (struct CGRect)previewMgr:(id)arg1 rectForPosition:(unsigned long long)arg2 iconRect:(struct CGRect *)arg3;
- (id)previewMgrView:(id)arg1;
- (id)contextualMenuHelper:(id)arg1 outTarget:(id *)arg2;
- (id)window;
- (struct CGRect)dragDropIndicatorRect;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)windowKeyStatusChanged:(id)arg1;
- (void)updateAfterDelay;
- (void)updateImmediately;
- (void)showContextualMenu:(id)arg1;
- (id)performRubberbandDrag:(id)arg1;
- (void)performMouseUp:(id)arg1;
- (void)performDrag:(id)arg1;
- (id)subtractIntersection:(struct CGRect)arg1 intersection:(struct CGRect)arg2;
- (void)minimalRedraw:(struct CGRect)arg1 newRect:(struct CGRect)arg2;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1 intersectsIcon:(char *)arg2 intersectsText:(char *)arg3;
- (void)renameAtIndex:(long long)arg1 delay:(BOOL)arg2;
- (void)updateDocumentSize;
- (void)sendSelectionChangedNotification;
- (id)draggingImage:(struct CGPoint *)arg1;
- (void)redrawPositions:(id)arg1;
- (void)redrawPosition:(long long)arg1;
- (id)itemAtPosition:(long long)arg1;
- (id)createPositionMapWithDragInfo:(id)arg1 destDesc:(id)arg2;
- (struct CGRect)dragDropHighlightRect:(long long)arg1;
- (void)redrawDragDropHighlightAtIndex:(long long)arg1;
- (void)drawDragDropHighlightAtIndex:(long long)arg1;
- (void)setInvertDragSelection:(BOOL)arg1;
- (void)performSpringLoadedFolder;
- (void)showContextualMenuFromInlinePreview:(id)arg1;
- (void)updateNewItemPosition:(id)arg1;
- (void)sendSelectionChangedAfterDelay;
- (void)drawItem:(id)arg1 inRect:(struct CGRect)arg2 select:(BOOL)arg3 dragging:(BOOL)arg4;
- (void)drawIconsInRect:(struct CGRect)arg1;
- (void)drawContentsInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateLayoutMgrAfterDelay;

@end

@interface BrowserModel : NSObject <NTMenuCommandMgrDelegate, private_BrowserModel>
{
    BOOL _selectionNotificationDisabled;
    BOOL _selectOnDecompress;
    BOOL _allowSelectOnDecompress;
    NSString *_modifyAttributeNotificationName;
    NSString *_decompressNotificationName;
    NSString *_browserID;
    NTBrowserViewController *_viewController;
    NTDropHandler *_dropHandler;
    NTActionToken *_renameActionToken;
    NTFileDesc *_customContainingDirectory;
}

@property(nonatomic) BOOL allowSelectOnDecompress; // @synthesize allowSelectOnDecompress=_allowSelectOnDecompress;
@property(nonatomic) BOOL selectOnDecompress; // @synthesize selectOnDecompress=_selectOnDecompress;
@property(retain, nonatomic) NTFileDesc *customContainingDirectory; // @synthesize customContainingDirectory=_customContainingDirectory;
@property(retain, nonatomic) NTActionToken *renameActionToken; // @synthesize renameActionToken=_renameActionToken;
@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler=_dropHandler;
@property NTBrowserViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
@property(retain, nonatomic) NSString *decompressNotificationName; // @synthesize decompressNotificationName=_decompressNotificationName;
@property(retain, nonatomic) NSString *modifyAttributeNotificationName; // @synthesize modifyAttributeNotificationName=_modifyAttributeNotificationName;
@property(nonatomic) BOOL selectionNotificationDisabled; // @synthesize selectionNotificationDisabled=_selectionNotificationDisabled;
- (void)setViewOptionsModel:(id)arg1;
- (id)viewOptionsModel;
- (struct CGRect)screenRectForItemWithDesc:(id)arg1 outIconRect:(struct CGRect *)arg2;
- (void)decompressDescs:(id)arg1;
- (void)setItemsExtension:(id)arg1;
- (void)renameNextIfPending;
- (void)renameItem:(id)arg1 withName:(id)arg2;
- (BOOL)isBusy;
- (BOOL)isActiveView;
- (BOOL)doOpenDocument:(int)arg1 treatPackagesAsFolders:(BOOL)arg2 ignoreGatekeeper:(BOOL)arg3;
- (void)zoomEffectsForVisibleIndex:(long long)arg1 desc:(id)arg2;
- (void)zoomEffectsForSelection:(BOOL)arg1;
- (id)actionPopUpMenu:(BOOL)arg1;
- (unsigned long long)numberOfVisibleItemsForDisplay:(unsigned long long *)arg1;
- (id)visibleItems;
- (id)containingDirectoryOfFile:(id)arg1;
- (id)containingDirectory;
- (BOOL)hasCustomContainingDirectory;
- (void)setNewRequestAndViewOptions:(id)arg1 params:(id)arg2;
- (void)removeItemsFromDisplay:(id)arg1;
- (void)setServerItemFilter:(id)arg1;
- (void)setItemFilter:(id)arg1;
- (id)itemFilter;
- (void)removeAllRequests;
- (id)rootServerRequest;
- (id)serverRequest;
- (void)addListRequest:(id)arg1;
- (void)viewControllerHasBeenDeleted;
- (id)initWithBrowserID:(id)arg1 viewController:(id)arg2;
- (void)dealloc;
- (BOOL)menuCommandMgr_isDesktop;
- (BOOL)menuCommandMgr_isDirectorySelected:(BOOL)arg1;
- (BOOL)menuCommandMgr_isImageOrMediaSelected;
- (BOOL)menuCommandMgr_isImageSelected;
- (id)menuCommandMgr_containingDirectory;
- (BOOL)menuCommandMgr_onlyEjectableSelected;
- (BOOL)menuCommandMgr_isVolumeSelected;
- (id)menuCommandMgr_selectedDescs:(BOOL)arg1;
- (id)menuCommandMgr_firstSelectedDesc:(BOOL)arg1;
- (BOOL)menuCommandMgr_treatPackagesAsFolders;
- (BOOL)menuCommandMgr_showInvisibles;
- (BOOL)menuCommandMgr_isPackageSelected:(BOOL)arg1;
- (BOOL)menuCommandMgr_onlyNoAliasSelected;
- (BOOL)menuCommandMgr_onlyAliasSelected;
- (unsigned long long)menuCommandMgr_numItemsSelected;
- (BOOL)isMovableItemSelected;
- (BOOL)isWritableItemSelected;
- (BOOL)isImageOrMediaSelected;
- (BOOL)isImageSelected;
- (BOOL)isParentDirectoryOfSelectedItemWritable;
- (BOOL)isParentDirectoryOfSelectedItemModifiable;
- (BOOL)isParentDirectoryOfSelectedItemSupportSymlinks;
- (BOOL)isDirectorySelected:(BOOL)arg1;
- (BOOL)isFileSelected:(BOOL)arg1;
- (BOOL)isPackageSelected:(BOOL)arg1;
- (unsigned long long)numItemsSelected;
- (id)afterSelectionItem;
- (id)firstSelectedItem;
- (id)selectedItems;
- (id)selectedDescs:(BOOL)arg1;
- (id)firstSelectedDesc:(BOOL)arg1;
- (void)selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectDescs:(id)arg1 byExtendingSelection:(BOOL)arg2 selectOnReload:(BOOL)arg3 compareNames:(BOOL)arg4;
- (void)selectDescs:(id)arg1 byExtendingSelection:(BOOL)arg2 selectOnReload:(BOOL)arg3;
- (id)itemWithDesc:(id)arg1;
- (void)scrollToSelection;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)isValidRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)draggedOperation:(unsigned long long)arg1;
- (BOOL)acceptDrop:(id)arg1 inDirectory:(id)arg2;
- (id)dropDestinationForDesc:(id)arg1 dragInfo:(id)arg2;
- (BOOL)validateSpringLoad:(id)arg1 proposedDesc:(id)arg2;
- (unsigned long long)validateDrop:(id)arg1 proposedDesc:(id)arg2;
- (void)springLoadFolder:(id)arg1;
- (void)serverRequestChanged:(id)arg1;
- (void)sortOrderChanged;
- (void)totalDisplayedItemsChanged;
- (void)selectionChanged;
- (void)sendDoubleClick;
- (void)decompressNotification:(id)arg1;
- (void)setAttributePluginNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)disallowSelectOnDecompress;
- (id)renamer;
- (id)sheetWindow;
- (id)window;

@end

@interface NTKeyDownSearchItem : NSObject
{
    unsigned long long index;
    NTRawString *compareName;
    NTFileDesc *desc;
}

+ (id)keySearchItem:(id)arg1 index:(unsigned long long)arg2;
@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
@property(retain, nonatomic) NTRawString *compareName; // @synthesize compareName;
@property(nonatomic) unsigned long long index; // @synthesize index;
- (id)description;
- (long long)compareByName:(id)arg1;
- (void)dealloc;

@end

@interface NTBrowserViewController : NSObject <BrowserViewProtocol, NTSharedActionDelegateProtocol, NTBrowserKeyEventHandlerDelegate>
{
    NTCommonViewOptionsModel *mViewOptionsModel;
    BOOL _hasCustomSortSettings;
    BOOL _syncingSortSettings;
    BOOL _navigationKeysEnabled;
    BOOL _rejectDropsToContainingDirectory;
    BOOL _delayedNumItemsChangedNotificationInProgress;
    BOOL _previousArrangeDirection;
    BOOL _previousSortDirection;
    BOOL _previousSmartSort;
    int _previousArrangeOrder;
    int _previousSortOrder;
    NSString *_browserID;
    BrowserActions *_browserActions;
    BrowserModel *_browserModel;
    NTIconPositionMapStore *_mapStore;
    NTBaseViewDataMgr *_dataMgr;
    id <NTBrowserViewControllerImplementationProtocol> _implemenation;
    unsigned long long _numberOfVisibleItemsForDisplay;
    NTCommonViewOptionsModel *_pendingViewOptionsModel;
    NTBrowserKeyEventHandler *_keyEventHandler;
}

@property(nonatomic) BOOL previousSmartSort; // @synthesize previousSmartSort=_previousSmartSort;
@property(nonatomic) BOOL previousSortDirection; // @synthesize previousSortDirection=_previousSortDirection;
@property(nonatomic) int previousSortOrder; // @synthesize previousSortOrder=_previousSortOrder;
@property(nonatomic) BOOL previousArrangeDirection; // @synthesize previousArrangeDirection=_previousArrangeDirection;
@property(nonatomic) int previousArrangeOrder; // @synthesize previousArrangeOrder=_previousArrangeOrder;
@property(retain, nonatomic) NTBrowserKeyEventHandler *keyEventHandler; // @synthesize keyEventHandler=_keyEventHandler;
@property(retain, nonatomic) NTCommonViewOptionsModel *pendingViewOptionsModel; // @synthesize pendingViewOptionsModel=_pendingViewOptionsModel;
@property(nonatomic) unsigned long long numberOfVisibleItemsForDisplay; // @synthesize numberOfVisibleItemsForDisplay=_numberOfVisibleItemsForDisplay;
@property(nonatomic) BOOL delayedNumItemsChangedNotificationInProgress; // @synthesize delayedNumItemsChangedNotificationInProgress=_delayedNumItemsChangedNotificationInProgress;
@property id <NTBrowserViewControllerImplementationProtocol> implemenation; // @synthesize implemenation=_implemenation;
@property(retain, nonatomic) NTBaseViewDataMgr *dataMgr; // @synthesize dataMgr=_dataMgr;
@property(nonatomic) BOOL rejectDropsToContainingDirectory; // @synthesize rejectDropsToContainingDirectory=_rejectDropsToContainingDirectory;
@property(nonatomic) BOOL navigationKeysEnabled; // @synthesize navigationKeysEnabled=_navigationKeysEnabled;
@property(nonatomic) BOOL syncingSortSettings; // @synthesize syncingSortSettings=_syncingSortSettings;
@property(nonatomic) BOOL hasCustomSortSettings; // @synthesize hasCustomSortSettings=_hasCustomSortSettings;
@property(retain, nonatomic) NTIconPositionMapStore *mapStore; // @synthesize mapStore=_mapStore;
@property(retain, nonatomic) BrowserModel *browserModel; // @synthesize browserModel=_browserModel;
@property(retain, nonatomic) BrowserActions *browserActions; // @synthesize browserActions=_browserActions;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
- (void)switchToDirectoryViewOptions;
- (id)actionTargetInSelectedDirectory;
- (id)actionTargetDirectory;
- (id)createSortDescriptors:(id)arg1;
- (id)sortDescriptorsForArrangeOrder:(long long)arg1 arrangeAscending:(BOOL)arg2 sortOrder:(long long)arg3 sortAscending:(BOOL)arg4;
- (void)updateToSortDescriptors:(id)arg1 syncUI:(BOOL)arg2;
- (BOOL)controllerSupportsThemes;
- (void)selectionSetOnKeyMatch:(BOOL)arg1;
- (id)currentContainingDirectory;
- (BOOL)treatPackagesAsFolderOnDoubleClick;
- (void)removeItemsFromDisplay:(id)arg1;
- (void)removeAllRequests;
- (void)addListRequest:(id)arg1;
- (void)setNewRequestAndViewOptions:(id)arg1 params:(id)arg2;
- (void)setServerItemFilter:(id)arg1;
- (void)setItemFilter:(id)arg1;
- (id)itemFilter;
- (id)rootServerRequest;
- (id)serverRequest;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (void)appendIconPositionMap:(id)arg1;
- (id)iconPositionMapForSelection:(id)arg1;
- (id)sheetWindow;
- (void)showParentDirectory;
- (void)viewResignsFirstResponder;
- (void)viewBecomesFirstResponder;
- (BOOL)expandSelection:(BOOL)arg1;
- (BOOL)contractSelection:(BOOL)arg1;
- (void)scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (void)scrollToSelection;
- (void)selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)numItemsSelected;
- (void)deselectAll;
- (id)afterSelectionItem;
- (id)firstSelectedItem;
- (id)selectedItems;
- (id)firstSelectedDesc:(BOOL)arg1;
- (id)selectedDescs:(BOOL)arg1;
- (struct CGRect)rectForVisibleIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (BOOL)renameSelection;
- (unsigned long long)numberOfVisibleItemsForDisplay:(unsigned long long *)arg1;
- (unsigned long long)numVisibleItemsIgnoringGroups:(BOOL)arg1;
- (id)visibleItems;
- (id)itemWithDesc:(id)arg1;
- (void)renameItem:(id)arg1 to:(id)arg2;
- (void)draggedOperation:(unsigned long long)arg1;
- (BOOL)acceptDrop:(id)arg1 inDirectory:(id)arg2;
- (BOOL)validateSpringLoad:(id)arg1 proposedDesc:(id)arg2;
- (unsigned long long)validateDrop:(id)arg1 proposedDesc:(id)arg2;
- (id)dropDestinationForDesc:(id)arg1 dragInfo:(id)arg2;
- (BOOL)keyDownEvent:(id)arg1;
- (void)renameDidEnd;
- (int)browserStyle;
- (void)setViewOptionsModel:(id)arg1;
- (id)viewOptionsModel;
- (void)dealloc;
- (id)initWithBrowserID:(id)arg1;
- (void)sendDelayedServerRequestChangedNotification:(id)arg1;
- (void)sendDelayedNumItemsChangedNotification;
- (void)sendDelayedSortOrderChangedNotification;
- (void)renameNextIfPending;
- (id)modifyAttributeNotificationName_SAD;
- (void)clearFileFilter_SAD;
- (id)containingDirectory_SAD;
- (id)actionTargetInSelectedDirectory_SAD;
- (id)actionTargetDirectory_SAD;
- (BOOL)treatPackagesAsFolders_SAD;
- (id)window_SAD;
- (unsigned long long)numItemsSelected_SAD;
- (id)firstSelectedDesc_SAD:(BOOL)arg1;
- (id)selectedDescs_SAD:(BOOL)arg1;
- (id)serverRequest_SAD;
- (void)stop;
- (void)setServerRequest:(id)arg1 params:(id)arg2;
- (id)window;
- (id)model;
- (id)responderView;
- (id)containingView;
- (void)restoreViewVisibleRectWithRect:(struct CGRect)arg1;
- (BOOL)restoreAdditionalState:(id)arg1;
- (id)saveAdditionalState;
- (BOOL)restoreSelectionState:(id)arg1;
- (id)saveSelectionState;
- (BOOL)restoreViewState:(id)arg1;
- (id)saveViewState;
- (void)syncUISortSettings:(id)arg1;
- (void)handleDefaultColorOptionsChanged;
- (id)fileServerSettingsFromViewOptions:(id)arg1;
- (void)handleViewOptionsNotification:(id)arg1;
- (void)flushPendingViewOptionsModel;
- (void)icloudConfigChanged:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)labelsChanged:(id)arg1;
- (void)defaultColorsChanged:(id)arg1;
- (void)viewOptionsNotification:(id)arg1;
- (void)initWithPreferences;
- (id)key_selection:(BOOL)arg1;
- (id)key_firstSelectedDesc:(BOOL)arg1;
- (id)key_serverRequest;
- (void)key_sendDoubleClick;
- (unsigned long long)key_numItemsSelected;
- (id)key_visibleItems;
- (void)key_deselectAll;
- (BOOL)key_smartSort;
- (BOOL)key_sortAscending;
- (int)key_sortOrder;
- (BOOL)key_arrangeAscending;
- (int)key_arrangeOrder;
- (void)key_scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (unsigned long long)key_numVisibleItems;
- (BOOL)key_renameSelection;
- (void)key_scrollToSelection;
- (void)key_selectVisibleIndex:(unsigned long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)doSendNumItemsChangedNotification:(id)arg1;
- (void)doSendServerRequestChangedNotification:(id)arg1;

@end

@interface NTCombiBrowser : Browser
{
}

- (void)setBrowserStyle:(int)arg1;
- (int)browserStyle;
- (void)setToIconBrowser;
- (BOOL)isIconBrowser;
- (void)setToColumnBrowser;
- (BOOL)isColumnBrowser;
- (void)setToListBrowser;
- (BOOL)isListBrowser;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;

@end

@interface NTPathFinderRemoteHost : NSObject <NTPathFinderProtocol, PFPathFinderDOProtocol>
{
}

+ (id)activatePathFinderRemoteHost;
- (oneway void)selectPath:(bycopy id)arg1 byExtendingSelection:(BOOL)arg2;
- (oneway void)showInfoForPath:(bycopy id)arg1;
- (oneway void)showPath:(bycopy id)arg1 inNewWindow:(BOOL)arg2;
- (bycopy id)selectedPaths;
- (bycopy id)selectedFilenames;
- (oneway void)rename:(oneway id)arg1 newName:(id)arg2;
- (oneway void)makeAlias:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)move:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)copy:(oneway id)arg1 destination:(oneway id)arg2;
- (oneway void)duplicate:(oneway id)arg1;
- (oneway void)moveToTrash:(oneway id)arg1;
- (oneway void)ejectVolume:(oneway id)arg1;
- (oneway void)showGetInfo:(oneway id)arg1;
- (oneway void)selectPaths:(oneway id)arg1 byExtendingSelection:(oneway char)arg2;
- (oneway void)revealPaths:(oneway id)arg1 behavior:(oneway int)arg2;
- (bycopy id)currentDirectory;
- (bycopy id)directoryListing:(oneway id)arg1 visibleItemsOnly:(BOOL)arg2;
- (bycopy id)volumes;
- (bycopy id)selection;
- (oneway void)activate;
- (BOOL)parseDestionationPath:(id)arg1 source:(id)arg2 outDestination:(id *)arg3 outName:(id *)arg4;

@end

@interface NTTrashManager : NTSingletonObject <NTPathEventClientDelegate, NTMessageProxyProtocol>
{
    BOOL _sentDelayedScanMessage;
    unsigned long long _trashItemCount;
    NSArray *_trashEntries;
    NTPathEventClient *_pathEventClient;
    NTMessageProxy *_selfProxy;
    NTTrashScannerThread *_thread;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NTTrashScannerThread *thread; // @synthesize thread=_thread;
@property(retain) NTMessageProxy *selfProxy; // @synthesize selfProxy=_selfProxy;
@property(retain, nonatomic) NTPathEventClient *pathEventClient; // @synthesize pathEventClient=_pathEventClient;
@property(nonatomic) BOOL sentDelayedScanMessage; // @synthesize sentDelayedScanMessage=_sentDelayedScanMessage;
@property(retain, nonatomic) NSArray *trashEntries; // @synthesize trashEntries=_trashEntries;
@property unsigned long long trashItemCount; // @synthesize trashItemCount=_trashItemCount;
- (id)trashMenu;
- (id)trashDescs;
- (void)emptyTrashAtDesc:(id)arg1 secure:(BOOL)arg2;
- (id)emptyTrash:(BOOL)arg1;
- (BOOL)trashIsEmpty;
- (void)dealloc;
- (id)init;
- (void)updateDockTrashCan:(BOOL)arg1;
- (BOOL)userConfirmedEmptyTrash:(BOOL)arg1;
- (void)doEmptyTrashAtDescs:(id)arg1 secure:(BOOL)arg2 actionToken:(id)arg3;
- (void)doEmptyTrashAtDesc:(id)arg1 secure:(BOOL)arg2 actionToken:(id)arg3;
- (void)sendTrashNotification;
- (void)updateTrashItemCount:(unsigned long long)arg1;
- (void)startTrashScannerThread:(double)arg1;
- (void)startTrashScannerThreadAfterDelay;
- (void)volumeListChangedNotification:(id)arg1;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (void)pathEventClientEvent:(id)arg1;

@end

@interface NTDesktopWindow : NTUserWindow
{
}

- (BOOL)accessibilityIsIgnored;
- (BOOL)isMovableByWindowBackground;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface NTDesktopWindowController : NSWindowController <NSWindowDelegate, NTCBMWindowDelegate, NTBSMWindowDelegate>
{
    DesktopIconBrowser *_browser;
    NSString *_browserID;
    NTCurrentBrowserMgr *_browserMgr;
    NSView *_iconView;
}

+ (id)controllerWithScreen:(id)arg1 participatesInCycle:(BOOL)arg2;
@property(retain, nonatomic) NSView *iconView; // @synthesize iconView=_iconView;
@property(retain, nonatomic) NTCurrentBrowserMgr *browserMgr; // @synthesize browserMgr=_browserMgr;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
@property(retain, nonatomic) DesktopIconBrowser *browser; // @synthesize browser=_browser;
- (id)filteredFiles;
- (void)unfilterFiles:(id)arg1;
- (void)filterFiles:(id)arg1;
- (void)filterItems:(id)arg1;
- (id)initWithScreen:(id)arg1;
- (void)dealloc;
- (void)setupServerRequest;
- (void)setupIconViewWithScreen:(id)arg1;
- (void)removeIconView;
- (void)installIconView;
- (id)windowForScreen:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)CBM_browserWithID:(id)arg1;
- (id)CBM_currentBrowser;
- (id)CBM_currentBrowserMgr;
- (id)currentStateNofication_displayedItems:(id)arg1;
- (struct CGRect)currentStateNofication_frame:(id)arg1 forDesc:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 fileServerRequest:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 selection:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (id)currentStateNofication_rootFileServerRequest:(id)arg1;
- (id)currentStateNofication_fileServerRequest:(id)arg1;
- (id)currentStateNofication_selection:(id)arg1;
- (id)currentStateNofication_browserID;
- (void)activeDesktopChanged:(id)arg1;
- (void)viewOptionsChanged:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;

@end

@interface NTDesktopViewController : NTBrowserViewController <NTIconViewDataMgrDelegate>
{
    NTDesktopView *_iconView;
    NSView *_containingView;
}

@property(retain, nonatomic) NSView *containingView; // @synthesize containingView=_containingView;
@property(retain, nonatomic) NTDesktopView *iconView; // @synthesize iconView=_iconView;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;
- (void)dealloc;
- (id)sortDescriptorsForArrangeOrder:(long long)arg1 arrangeAscending:(BOOL)arg2 sortOrder:(long long)arg3 sortAscending:(BOOL)arg4;
- (BOOL)controllerSupportsThemes;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (id)iconPositionMapForSelection:(id)arg1;
- (BOOL)renameSelection;
- (void)scrollToSelection;
- (void)scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (void)deselectAll;
- (void)selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)numItemsSelected;
- (id)afterSelectionItem;
- (id)firstSelectedItem;
- (id)selectedDescs:(BOOL)arg1;
- (id)selectedItems;
- (struct CGRect)rectForVisibleIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (unsigned long long)numVisibleItemsIgnoringGroups:(BOOL)arg1;
- (id)visibleItems;
- (id)responderView;
- (void)handleDefaultColorOptionsChanged;
- (void)handleViewOptionsNotification:(id)arg1;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (BOOL)dataMgr_shouldUpdate;
- (void)reloadRequest:(id)arg1;
- (void)createIconView:(struct CGRect)arg1;

@end

@interface NTDesktopViewDataMgr : NTIconViewDataMgr
{
}

- (void)doReloadRequest:(id)arg1;
- (void)reloadRequest:(id)arg1;

@end

@interface NTIconViewCell : IKImageBrowserCell
{
    NTIconViewItemImager *_itemImager;
}

+ (id)itemCellWithImager:(id)arg1;
@property(retain, nonatomic) NTIconViewItemImager *itemImager; // @synthesize itemImager=_itemImager;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)layerForType:(id)arg1;
- (struct CGRect)selectionFrame;
- (struct CGRect)imageFrame;
- (void)dealloc;

@end

@interface NTTrashView : NTView
{
    NSImage *_trashImage;
    NSImage *_highlightedTrashImage;
    NSImage *_fullTrashImage;
    NSImage *_highlightedFullTrashImage;
    NSImage *_ejectImage;
    NSImage *_highlightedEjectImage;
    unsigned long long _iconSize;
    BOOL _mouseWasDragged;
    struct CGRect _canRect;
    NTGlyphBlitter *_trashText;
    BOOL _hilight;
    BOOL _eject;
    NTGlyphBlitter *_ejectText;
    BOOL _hideTrashCanMenuItem;
    BOOL _highlightIfMouseOverViewBounds;
    BOOL _revealTrashInNewWindow;
    BOOL _drawDragDropFrame;
    BOOL _drawTrashLabel;
    BOOL _thisViewIsDragging;
    NTDragInfo *_dragInfo;
    BOOL _drawShadowedText;
    NSDictionary *_attributes;
    BOOL mEntireViewClickable;
    NTCountBadge *countBadge;
}

@property(retain) NTCountBadge *countBadge; // @synthesize countBadge;
- (id)contextualMenu:(BOOL)arg1;
- (void)setTextAttributes:(id)arg1 drawShadowedText:(BOOL)arg2;
- (void)rightMouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setDrawTrashLabel:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setRevealTrashInNewWindow:(BOOL)arg1;
- (void)setHighlightIfMouseOverViewBounds:(BOOL)arg1;
- (void)setHideTrashCanMenuItem:(BOOL)arg1;
- (BOOL)isFlipped;
- (void)setIconSize:(unsigned long long)arg1;
- (unsigned long long)iconSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 trashWindow:(BOOL)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setEntireViewClickable:(BOOL)arg1;
- (BOOL)entireViewClickable;
- (void)rebuildGlyphBlitters;
- (id)ejectBlitter;
- (id)trashBlitter;
- (struct CGRect)textBounds;
- (void)redrawNow;
- (id)imageWithCircle:(id)arg1;
- (id)sharedEjectImage:(unsigned long long)arg1 highlighted:(BOOL)arg2;
- (id)sharedTrashImage:(unsigned long long)arg1 highlighted:(BOOL)arg2 trashFull:(BOOL)arg3;
- (id)highlightedFullTrashImage;
- (id)highlightedTrashImage;
- (id)highlightedEjectImage;
- (id)ejectImage;
- (id)fullTrashImage;
- (id)trashImage;
- (void)releaseImages;
- (void)hilight:(BOOL)arg1;
- (void)setToEjectImage:(BOOL)arg1;
- (void)trashStatusUpdated:(id)arg1;
- (id)dragInfo:(id)arg1;
- (void)drawDragDropRect;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)delayedDeleteFromPasteboard:(id)arg1;

@end

@interface NTIconFindResultsView : NTView <NSMenuDelegate, NTBrowserKeyEventHandlerDelegate>
{
    NTCommonViewOptionsModel *_viewOptionsModel;
    BOOL _needsUpdate;
    BOOL _updating;
    BOOL _hasCustomSortSettings;
    NTView *_containerView;
    NTIconView *_iconView;
    NTFindUIAccess *_findUIAccess;
    NSMenu *_contextualMenu;
    NTCachedSelection *_cachedSelection;
    NTDropHandler *_dropHandler;
    NTBrowserKeyEventHandler *_keyEventHandler;
    NSArray *_fileItems;
    NSArray *_iconItems;
    NSArray *_iconGroups;
}

@property(nonatomic) BOOL hasCustomSortSettings; // @synthesize hasCustomSortSettings=_hasCustomSortSettings;
@property(nonatomic) BOOL updating; // @synthesize updating=_updating;
@property(nonatomic) BOOL needsUpdate; // @synthesize needsUpdate=_needsUpdate;
@property(retain, nonatomic) NSArray *iconGroups; // @synthesize iconGroups=_iconGroups;
@property(retain, nonatomic) NSArray *iconItems; // @synthesize iconItems=_iconItems;
@property(retain, nonatomic) NSArray *fileItems; // @synthesize fileItems=_fileItems;
@property(retain, nonatomic) NTBrowserKeyEventHandler *keyEventHandler; // @synthesize keyEventHandler=_keyEventHandler;
@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler=_dropHandler;
@property(retain, nonatomic) NTCachedSelection *cachedSelection; // @synthesize cachedSelection=_cachedSelection;
@property(retain, nonatomic) NSMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
@property(retain, nonatomic) NTFindUIAccess *findUIAccess; // @synthesize findUIAccess=_findUIAccess;
@property(retain, nonatomic) NTIconView *iconView; // @synthesize iconView=_iconView;
@property(retain, nonatomic) NTView *containerView; // @synthesize containerView=_containerView;
- (id)sortDescriptorsForArrangeOrder:(long long)arg1 arrangeAscending:(BOOL)arg2 sortOrder:(long long)arg3 sortAscending:(BOOL)arg4;
- (void)updateToSortDescriptors:(id)arg1;
- (struct CGRect)screenRectForIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (void)switchToDirectoryViewOptions;
- (void)viewOptionsChanged:(id)arg1;
- (void)itemsNeedRefresh:(id)arg1;
- (void)reloadData;
- (void)deselectAll;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (unsigned long long)numberOfSelectedItems;
- (id)selectedIndexes;
- (id)selectedItems;
- (unsigned long long)indexOfResult:(id)arg1;
- (unsigned long long)numberOfItemsIgnoringGroups:(BOOL)arg1;
- (BOOL)keyDownEvent:(id)arg1;
- (void)setupWithController:(id)arg1;
@property(retain, nonatomic) NTCommonViewOptionsModel *viewOptionsModel;
- (void)dealloc;
- (id)imageBrowser:(id)arg1 groupAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfGroupsInImageBrowser:(id)arg1;
- (id)imageBrowser:(id)arg1 itemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfItemsInImageBrowser:(id)arg1;
- (void)imageBrowser:(id)arg1 cellWasRightClickedAtIndex:(unsigned long long)arg2 withEvent:(id)arg3;
- (void)imageBrowser:(id)arg1 cellWasDoubleClickedAtIndex:(unsigned long long)arg2;
- (void)imageBrowserSelectionDidChange:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (id)key_selection:(BOOL)arg1;
- (id)key_firstSelectedDesc:(BOOL)arg1;
- (id)key_serverRequest;
- (void)key_sendDoubleClick;
- (unsigned long long)key_numItemsSelected;
- (id)key_visibleItems;
- (void)key_deselectAll;
- (BOOL)key_smartSort;
- (BOOL)key_sortAscending;
- (int)key_sortOrder;
- (BOOL)key_arrangeAscending;
- (int)key_arrangeOrder;
- (void)key_scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (unsigned long long)key_numVisibleItems;
- (BOOL)key_renameSelection;
- (void)key_scrollToSelection;
- (void)key_selectVisibleIndex:(unsigned long long)arg1 byExtendingSelection:(BOOL)arg2;
- (BOOL)controllerSupportsThemes;
- (void)defaultColorsChanged:(id)arg1;
- (id)fileServerSettingsFromViewOptions:(id)arg1;
- (id)createSortDescriptors:(id)arg1;
- (id)newSelection:(id)arg1 newItems:(id)arg2 previousItems:(id)arg3;
- (void)startUpdate;
- (void)setupIconView;
- (void)update;

@end

@interface ListBrowser : Browser
{
}

- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;

@end

@interface IconBrowser : Browser
{
}

- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;

@end

@interface NTCombiView : NSTabView <NSTabViewDelegate, BrowserViewProtocol>
{
    NSString *browserID;
}

@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
- (void)setBrowserStyle:(int)arg1;
- (int)browserStyle;
- (void)setToIconBrowser;
- (BOOL)isIconBrowser;
- (void)setToColumnBrowser;
- (BOOL)isColumnBrowser;
- (void)setToListBrowser;
- (BOOL)isListBrowser;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)notifyOfBrowserStyleChange;
- (id)currentListRequest;
- (id)activeBrowser;
- (void)setToColumnBrowser:(id)arg1;
- (void)setToIconBrowser:(id)arg1;
- (void)setToListBrowser:(id)arg1;
- (void)switchToBrowserViewStyle:(int)arg1 request:(id)arg2;
- (id)window;
- (id)responderView;
- (id)containingView;
- (void)stop;
- (void)setServerRequest:(id)arg1 params:(id)arg2;
- (id)model;

@end

@interface NTBrowserTabViewItem : NSTabViewItem
{
    Browser *browser;
    NSString *browserID;
}

+ (id)tabViewItem:(id)arg1 browserID:(id)arg2;
@property(retain, nonatomic) Browser *browser; // @synthesize browser;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
- (void)setupView;
- (void)dealloc;

@end

@interface Browser : NSObject
{
    NSString *_browserID;
    id <BrowserViewProtocol> _browserView;
}

@property(retain, nonatomic) id <BrowserViewProtocol> browserView; // @synthesize browserView=_browserView;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
- (struct CGRect)screenRectForItemWithDesc:(id)arg1 outIconRect:(struct CGRect *)arg2;
- (unsigned long long)numberOfVisibleItemsForDisplay:(unsigned long long *)arg1;
- (id)visibleItems;
- (void)scrollToSelection;
- (void)selectDescs:(id)arg1 byExtendingSelection:(BOOL)arg2 selectOnReload:(BOOL)arg3;
- (id)firstSelectedItem;
- (id)selectedItems;
- (id)firstSelectedDesc:(BOOL)arg1;
- (id)selectedDescs:(BOOL)arg1;
- (unsigned long long)numItemsSelected;
- (BOOL)isBusy;
- (void)stop;
- (void)setCustomContainingDirectory:(id)arg1;
- (id)containingDirectory;
- (void)removeItemsFromDisplay:(id)arg1;
- (void)setServerItemFilter:(id)arg1;
- (void)setItemFilter:(id)arg1;
- (id)itemFilter;
- (void)removeAllRequests;
- (void)addListRequest:(id)arg1;
- (id)rootServerRequest;
- (void)setServerRequest:(id)arg1 params:(id)arg2;
- (void)setServerRequest:(id)arg1;
- (id)serverRequest;
- (id)browserModel;
- (id)responderView;
- (id)containingView;
- (id)undoManager;
- (id)window;
- (id)initWithBrowserID:(id)arg1;
- (void)dealloc;

@end

@interface NTFindFilePanel : NSObject
{
    id window;
    id cancelButton;
    id findButton;
    id findEditField;
    id findText;
    NSPopUpButton *searchPopup;
    id searchText;
    SEL _selector;
    id _target;
    BOOL _runningAsSheet;
    NTPrefsBoxMgr *_prefsBoxMgr;
}

+ (void)showFindPanel:(id)arg1 defaultText:(id)arg2 target:(id)arg3 selector:(SEL)arg4 directory:(id)arg5 parentWindow:(id)arg6;
- (void)searchPopupAction:(id)arg1;
- (void)locateButtonAction:(id)arg1;
- (void)findButtonAction:(id)arg1;
- (void)cancelButtonAction:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 defaultText:(id)arg2 target:(id)arg3 selector:(SEL)arg4 directory:(id)arg5 parentWindow:(id)arg6;
- (void)initFindComboBox;
- (void)buildSearchPopup:(id)arg1;
- (void)selectSearchPopupFromPrefs;
- (id)searchDescs;
- (id)searchPopupValue;
- (void)doClose:(BOOL)arg1;

@end

@interface NTBlockPaginator : NSObject <NTPaginatorProtocol>
{
    BOOL _reverseBlockLayout;
    BOOL _paginateToFixedRects;
    int _layoutDirection;
    NSMutableArray *_blocks;
    NTRectArray *_paginationArea;
    NTRectArray *_screenArea;
    unsigned long long _numItems;
    unsigned long long _windowWidth;
    unsigned long long _maxWidth;
    struct CGSize _itemSize;
    struct CGSize _itemMargin;
    struct CGSize _documentMargin;
    struct CGRect _enclosingRect;
}

@property(nonatomic) int layoutDirection; // @synthesize layoutDirection=_layoutDirection;
@property(nonatomic) BOOL paginateToFixedRects; // @synthesize paginateToFixedRects=_paginateToFixedRects;
@property(nonatomic) BOOL reverseBlockLayout; // @synthesize reverseBlockLayout=_reverseBlockLayout;
@property(nonatomic) struct CGSize documentMargin; // @synthesize documentMargin=_documentMargin;
@property(nonatomic) struct CGSize itemMargin; // @synthesize itemMargin=_itemMargin;
@property(nonatomic) unsigned long long maxWidth; // @synthesize maxWidth=_maxWidth;
@property(nonatomic) unsigned long long windowWidth; // @synthesize windowWidth=_windowWidth;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(nonatomic) unsigned long long numItems; // @synthesize numItems=_numItems;
@property(retain, nonatomic) NTRectArray *screenArea; // @synthesize screenArea=_screenArea;
@property(retain, nonatomic) NTRectArray *paginationArea; // @synthesize paginationArea=_paginationArea;
@property(nonatomic) struct CGRect enclosingRect; // @synthesize enclosingRect=_enclosingRect;
@property(retain, nonatomic) NSMutableArray *blocks; // @synthesize blocks=_blocks;
- (void)paginateItems:(id)arg1 inView:(id)arg2 positionStore:(id)arg3;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1;
- (struct CGRect)itemRect:(unsigned long long)arg1;
- (struct CGSize)size;
- (void)setAreasForScreen:(id)arg1;
- (void)setPaginationArea:(id)arg1 screenArea:(id)arg2 fixedRects:(BOOL)arg3;
- (id)init;
- (void)dealloc;
- (void)paginate;
- (void)setDirty;
- (id)blockForIndex:(long long)arg1;
- (long long)numRows:(struct CGRect)arg1;
- (long long)numColumns:(struct CGRect)arg1;

@end

@interface NTBlockItem : NSObject
{
    struct CGRect _itemRect;
}

+ (id)itemWithRect:(struct CGRect)arg1;
@property(nonatomic) struct CGRect itemRect; // @synthesize itemRect=_itemRect;

@end

@interface NTBlock : NSObject
{
    BOOL _horizontal;
    NSMutableArray *_itemRects;
    struct _NSRange _range;
    struct CGSize _itemSize;
    struct CGSize _itemMargin;
    struct CGRect _rect;
}

+ (id)blockWithRect:(struct CGRect)arg1 range:(struct _NSRange)arg2 itemSize:(struct CGSize)arg3 itemMargin:(struct CGSize)arg4 horizontal:(BOOL)arg5;
@property(retain, nonatomic) NSMutableArray *itemRects; // @synthesize itemRects=_itemRects;
@property(nonatomic) BOOL horizontal; // @synthesize horizontal=_horizontal;
@property(nonatomic) struct CGSize itemMargin; // @synthesize itemMargin=_itemMargin;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (long long)itemIntersectingPoint:(struct CGPoint)arg1;
- (struct CGRect)itemRect:(unsigned long long)arg1;
- (void)dealloc;
- (void)buildRectCache;

@end

@interface DesktopIconBrowser : Browser
{
}

- (id)undoManager;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;

@end

@interface NTTrashWindowController : NTSingletonObject <NSWindowDelegate>
{
    NTTrashWindow *mv_trashWindow;
    BOOL mSentSaveAfterDelay;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)setSize:(unsigned long long)arg1;
- (unsigned long long)size;
- (void)setFloating:(BOOL)arg1;
- (BOOL)isFloating;
- (void)setVisible:(BOOL)arg1;
- (BOOL)isVisible;
- (void)dealloc;
- (id)init;
- (void)preferencesModified:(id)arg1;
- (void)setTrashWindow:(id)arg1;
- (id)trashWindow;
- (void)viewOptionsNotification:(id)arg1;
- (void)screensChanged:(id)arg1;
- (void)saveAfterDelay;
- (void)windowDidMove:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)doSetSize:(unsigned long long)arg1;
- (void)doSetFloating:(BOOL)arg1;
- (void)syncWithPrefs;
- (void)createWindow;
- (void)saveTrashWindowRectToPrefs;
- (struct CGRect)trashWindowRectFromPrefs;
- (id)prefsKey;
- (void)adjustWindowRectForScreens;
- (struct CGRect)defaultWindowRect;
- (void)setSentSaveAfterDelay:(BOOL)arg1;
- (BOOL)sentSaveAfterDelay;

@end

@interface NTTrashScannerThread : NTDispatchThread
{
    BOOL _entriesUpdated;
    NSArray *_trashEntries;
    unsigned long long _trashItemCount;
    NSArray *_trashPaths;
}

+ (id)thread:(id)arg1 delegateProxy:(id)arg2;
@property(retain, nonatomic) NSArray *trashPaths; // @synthesize trashPaths=_trashPaths;
@property(nonatomic) BOOL entriesUpdated; // @synthesize entriesUpdated=_entriesUpdated;
@property(nonatomic) unsigned long long trashItemCount; // @synthesize trashItemCount=_trashItemCount;
@property(retain, nonatomic) NSArray *trashEntries; // @synthesize trashEntries=_trashEntries;
- (void)dealloc;
- (BOOL)threadMethod;
- (id)trashPathsArray;
- (id)makeNewEntries:(id)arg1;
- (unsigned long long)totalTrashItemCount;

@end

@interface NSButtonCellHack : NSObject
{
}

+ (void)install;
- (BOOL)hack_trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

@end

@interface WebHTMLViewHack : NSObject
{
}

+ (void)install;
+ (Class)theClass;
- (BOOL)hack_validateUserInterfaceItem:(id)arg1;
- (void)hack_performFindPanelAction:(id)arg1;

@end

@interface NTWebViewScrollViewHack : NSObject
{
}

+ (void)install;
- (void)hack_setHasHorizontalScroller:(BOOL)arg1;
- (void)hack_setHasVerticalScroller:(BOOL)arg1;

@end

@interface NSTableHeaderViewHack : NSObject
{
}

+ (void)install;
- (void)hack_mouseDown:(id)arg1;

@end

@interface NSBrowserScrollViewHack : NSObject
{
}

+ (void)install;
- (BOOL)hack_accessoryViewMightInterfereWithOverlayScrollers:(id)arg1;

@end

@interface TrashToolbarItem : ActiveToolbarItem <NSCopying>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithID:(id)arg1 name:(id)arg2 path:(id)arg3 clickAction:(SEL)arg4 dropAction:(SEL)arg5 dropAsAlias:(BOOL)arg6;
- (void)trashStatusUpdated:(id)arg1;

@end

@interface StandardDragDropButton : NSButton
{
    NSString *path;
    NSString *itemIdentifier;
    BOOL dropAsAlias;
    SEL dropAction;
    NTDragInfo *dragInfo;
    NSDate *springLoadedStartTime;
    long long springIncrement;
}

@property(nonatomic) SEL dropAction; // @synthesize dropAction;
@property(nonatomic) BOOL dropAsAlias; // @synthesize dropAsAlias;
@property(retain, nonatomic) NSString *itemIdentifier; // @synthesize itemIdentifier;
@property(retain, nonatomic) NSString *path; // @synthesize path;
@property(nonatomic) long long springIncrement; // @synthesize springIncrement;
@property(retain, nonatomic) NSDate *springLoadedStartTime; // @synthesize springLoadedStartTime;
@property(retain, nonatomic) NTDragInfo *dragInfo; // @synthesize dragInfo;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)dragInfo:(id)arg1;
- (void)clearSpringLoadedStartTime;
- (BOOL)isDropOK;
- (BOOL)isTrashPath;
- (BOOL)isSpecialPath;

@end

@interface NTRevealer : NSObject
{
}

+ (id)browserDocuments;
+ (id)getInfoWindows;
+ (id)browserWindows:(BOOL)arg1;
+ (int)behaviorForDesktop:(int)arg1;
+ (int)behaviorForEvent:(int)arg1;
+ (int)behaviorFromUserDefaults;
+ (id)activeBrowserDocument;
+ (id)activeBrowser:(BOOL)arg1;
+ (void)openItems:(id)arg1 params:(id)arg2 sheetWindow:(id)arg3 behavior:(int)arg4;
+ (void)openItem:(id)arg1 params:(id)arg2 sheetWindow:(id)arg3 behavior:(int)arg4;
+ (void)revealItem:(id)arg1 params:(id)arg2 behavior:(int)arg3;
+ (void)revealItem:(id)arg1 params:(id)arg2 inWindow:(id)arg3;
+ (void)revealParentAndSelectItem:(id)arg1 params:(id)arg2 inWindow:(id)arg3 behavior:(int)arg4;
+ (void)revealParentAndSelectItems:(id)arg1 params:(id)arg2 inWindow:(id)arg3 behavior:(int)arg4;
+ (void)revealParentAndSelectItem:(id)arg1 params:(id)arg2 inWindow:(id)arg3;
+ (void)showParentAndSelectItem:(id)arg1 browserID:(id)arg2 inWindow:(id)arg3 selectionOptional:(BOOL)arg4;
+ (id)documentWithWindow:(id)arg1;
+ (BOOL)isTabSelected:(id)arg1 activeWindowOnly:(BOOL)arg2 selectDescs:(id)arg3;
+ (void)doRevealItem:(id)arg1 selectDescs:(id)arg2 inWindow:(id)arg3 params:(id)arg4 behavior:(int)arg5;
+ (void)revealItem:(id)arg1 params:(id)arg2 inWindow:(id)arg3 behavior:(int)arg4;

@end

@interface NTOpener : NSObject
{
    NSWindow *sheetWindow;
    NTRevealParameters *params;
    NSArray *descs;
    int behavior;
}

+ (void)openItems:(id)arg1 params:(id)arg2 sheetWindow:(id)arg3 behavior:(int)arg4;
@property int behavior; // @synthesize behavior;
@property(retain) NSArray *descs; // @synthesize descs;
@property(retain) NTRevealParameters *params; // @synthesize params;
@property(retain) NSWindow *sheetWindow; // @synthesize sheetWindow;
- (void)dealloc;
- (void)doOpenItems:(id)arg1;
- (void)openItemsPanelSelector:(id)arg1;
- (void)startOpenItems;

@end

@interface NTTextDocument : NSDocument <NSTextViewDelegate, NSLayoutManagerDelegate>
{
    BOOL _ignoreRTF;
    BOOL _ignoreHTML;
    BOOL _updatingPageNumberAfterDelay;
    BOOL _saveToNewFile;
    unsigned long long _encoding;
    id _textBoxView;
    id _pageNumberText;
    NSURL *_originalFileURL;
    NTEncodingAccessory *_panelAccessory;
    NTZoomScrollView *_textScrollView;
    NSTextStorage *_textStorage;
    NSDictionary *_readDocumentAttributes;
    NSString *_fakeDisplayName;
    id _toolbarController;
    NTLayoutManager *_layoutManager;
    NTWindowSaveHelper *_windowSaveHelper;
    id _authOpenReadNotificationObj;
    NTFileDesc *_authOpenReadDesc;
    id _authOpenWriteNotificationObj;
    NTFileDesc *_authOpenWriteDesc;
    SEL _cw1Selector;
    id _cw1Target;
    SEL _cw2Selector;
    id _cw2Target;
}

+ (id)documentWithString:(id)arg1;
+ (id)documentWithString:(id)arg1 wrapToPage:(BOOL)arg2;
@property(retain, nonatomic) id cw2Target; // @synthesize cw2Target=_cw2Target;
@property(nonatomic) SEL cw2Selector; // @synthesize cw2Selector=_cw2Selector;
@property(retain, nonatomic) id cw1Target; // @synthesize cw1Target=_cw1Target;
@property(nonatomic) SEL cw1Selector; // @synthesize cw1Selector=_cw1Selector;
@property(retain, nonatomic) NTFileDesc *authOpenWriteDesc; // @synthesize authOpenWriteDesc=_authOpenWriteDesc;
@property(retain, nonatomic) id authOpenWriteNotificationObj; // @synthesize authOpenWriteNotificationObj=_authOpenWriteNotificationObj;
@property(retain, nonatomic) NTFileDesc *authOpenReadDesc; // @synthesize authOpenReadDesc=_authOpenReadDesc;
@property(retain, nonatomic) id authOpenReadNotificationObj; // @synthesize authOpenReadNotificationObj=_authOpenReadNotificationObj;
@property(retain, nonatomic) NTWindowSaveHelper *windowSaveHelper; // @synthesize windowSaveHelper=_windowSaveHelper;
@property(retain, nonatomic) NTLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(retain, nonatomic) id toolbarController; // @synthesize toolbarController=_toolbarController;
@property(retain, nonatomic) NSString *fakeDisplayName; // @synthesize fakeDisplayName=_fakeDisplayName;
@property(nonatomic) BOOL saveToNewFile; // @synthesize saveToNewFile=_saveToNewFile;
@property(nonatomic) BOOL updatingPageNumberAfterDelay; // @synthesize updatingPageNumberAfterDelay=_updatingPageNumberAfterDelay;
@property(nonatomic) BOOL ignoreHTML; // @synthesize ignoreHTML=_ignoreHTML;
@property(nonatomic) BOOL ignoreRTF; // @synthesize ignoreRTF=_ignoreRTF;
@property(retain, nonatomic) NSDictionary *readDocumentAttributes; // @synthesize readDocumentAttributes=_readDocumentAttributes;
@property(retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(retain, nonatomic) NTZoomScrollView *textScrollView; // @synthesize textScrollView=_textScrollView;
@property(retain, nonatomic) NTEncodingAccessory *panelAccessory; // @synthesize panelAccessory=_panelAccessory;
@property(retain, nonatomic) NSURL *originalFileURL; // @synthesize originalFileURL=_originalFileURL;
@property(retain, nonatomic) id pageNumberText; // @synthesize pageNumberText=_pageNumberText;
@property(retain, nonatomic) id textBoxView; // @synthesize textBoxView=_textBoxView;
@property(nonatomic) unsigned long long encoding; // @synthesize encoding=_encoding;
- (void)detachFileFromDocument:(id)arg1;
- (void)setPaperSize:(struct CGSize)arg1;
- (struct CGSize)paperSize;
- (void)setViewSize:(struct CGSize)arg1;
- (struct CGSize)viewSize;
- (BOOL)isWrapToPage;
- (void)setWrapToPage:(BOOL)arg1;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)arg1;
- (BOOL)isReadOnly;
- (void)setReadOnly:(BOOL)arg1;
- (BOOL)showsControlCharacters;
- (void)setShowsControlCharacters:(BOOL)arg1;
- (BOOL)showsInvisibleCharacters;
- (void)setShowsInvisibleCharacters:(BOOL)arg1;
- (double)hyphenationFactor;
- (void)setHyphenationFactor:(double)arg1;
- (void)windowControllerDidLoadNib:(id)arg1;
- (void)makeWindowControllers;
- (id)windowNibName;
- (void)setString:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setPrintInfo:(id)arg1;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)saveDocument:(id)arg1;
- (void)activateURLsAction:(id)arg1;
- (void)summarizeTextAction:(id)arg1;
- (void)gotoPageAction:(id)arg1;
- (void)zoomValueAction:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)toggleWrapToPage:(id)arg1;
- (void)didEndToggleRichSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)toggleRichText:(id)arg1;
- (void)toggleShowControlCharacters:(id)arg1;
- (void)toggleShowInvisibleCharacters:(id)arg1;
- (void)toggleHyphenation:(id)arg1;
- (void)toggleReadOnly:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)backgroundColorAction:(id)arg1;
- (void)cw2Action:(id)arg1;
- (void)cw1Action:(id)arg1;
- (void)doToggleRichText;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (BOOL)prepareSavePanel:(id)arg1;
- (void)runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (id)attributesDictionary;
- (BOOL)setAttributesFromLoadedFile;
- (id)displayName;
- (void)setFileURL:(id)arg1;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)savedUsingAuthOpen;
- (void)authOpenNotification:(id)arg1;
- (BOOL)doReadFromFile:(id)arg1 data:(id)arg2;
- (id)buildReadOptions:(id)arg1 encoding:(unsigned long long)arg2 strict:(BOOL)arg3;
- (void)addBackgroundColorWell;
- (BOOL)keyFilter_handleKeyEvent:(id)arg1;
- (id)textEditorView;
- (unsigned long long)automaticEncodingForSave;
- (void)initPrintInfo;
- (void)setInitialTextViewState;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)viewScrolledNotification:(id)arg1;
- (void)updatePageNumber;
- (void)applyDefaultTextAttributes;
- (void)printInfoUpdated;
- (id)textView;
- (id)window;
- (id)fileDesc;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)removeAttachments;
- (double)defaultTextPadding;
- (id)undoManagerForTextView:(id)arg1;
- (void)setupEditorView:(BOOL)arg1;
- (void)removePage;
- (void)addPage;
- (unsigned long long)numberOfPages;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (void)updatePageNumberAfterDelay:(id)arg1;
- (void)doUpdatePageNumber;
- (void)windowPopUpMenuAction:(id)arg1;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;

@end

@interface NTTextDocumentToolbar : NSObject <NSToolbarDelegate>
{
    NSWindow *_window;
    NTTextDocument *_textDocument;
    NSToolbar *_toolbar;
}

- (void)gotoTextFieldAction:(id)arg1;
- (void)searchTextFieldAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1 document:(id)arg2;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;

@end

@interface TextToolbarItemCache : NSObject
{
    NSMutableDictionary *_items;
}

+ (id)sharedInstance;
- (void)addSearchTextField;
- (id)encodingMenu;
- (id)getToolbarInfo;
- (void)addEncodingPopUp;
- (void)addGotoPageTextField;
- (void)addToolbarItem:(id)arg1;
- (id)allKeys;
- (id)itemForIdentifier:(id)arg1 target:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface NTTextEditorView : NSView
{
    NSColor *lineColor;
    NSColor *marginColor;
    unsigned long long numPages;
    NTTextDocument *textDocument;
}

@property NTTextDocument *textDocument; // @synthesize textDocument;
@property(nonatomic) unsigned long long numPages; // @synthesize numPages;
@property(retain, nonatomic) NSColor *marginColor; // @synthesize marginColor;
@property(retain, nonatomic) NSColor *lineColor; // @synthesize lineColor;
- (struct CGRect)rectForPage:(long long)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawPageNumbers:(struct CGRect)arg1;
- (void)drawVisualPageGuides:(struct CGRect)arg1;
- (void)gotoPage:(unsigned long long)arg1;
- (struct CGRect)pageRectForPageNumber:(unsigned long long)arg1;
- (struct CGRect)documentRectForPageNumber:(unsigned long long)arg1;
- (struct CGSize)documentSizeInPage;
- (double)pageSeparatorHeight;
- (long long)currentPage;
- (long long)pageAtPoint:(struct CGPoint)arg1;
- (long long)doBinPageSearch:(struct CGPoint)arg1 lowIndex:(long long)arg2 highIndex:(long long)arg3;
- (unsigned long long)numberOfPages;
- (void)setNumberOfPages:(unsigned long long)arg1;
- (void)updateForNewPageSize;
- (void)updateFrame;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (double)defaultTextPadding;
- (id)initWithDocument:(id)arg1;
- (void)dealloc;

@end

@interface NTDropStackToolbarButton : NSButton <NSPopoverDelegate, NSCoding>
{
    NSPopover *_popover;
}

+ (id)buttonInWindow:(id)arg1;
+ (id)button;
@property(retain, nonatomic) NSPopover *popover; // @synthesize popover=_popover;
- (void)togglePopOver;
- (id)toolbarMenuItem;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)popoverDidClose:(id)arg1;
- (void)destroyPopover;
- (void)createPopover;
- (void)returnButtonNotification:(id)arg1;

@end

@interface NTFavoritesMenuMgr : NTSingletonObject <NTFSWatcherDelegate>
{
    NTMenu *mv_favoritesNTMenu;
    unsigned long long mv_buildID;
    BOOL mv_threadIsRunning;
    NTFSWatcher *watcher;
    NTFSWatcherDelegateProxy *watcherProxy;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NTFSWatcher *watcher; // @synthesize watcher;
@property(retain) NTFSWatcherDelegateProxy *watcherProxy; // @synthesize watcherProxy;
- (unsigned long long)buildID;
- (id)favoritesNTMenu;
- (id)favoritesMenu:(SEL)arg1 smallFont:(BOOL)arg2;
- (void)dealloc;
- (id)init;
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;
- (void)setThreadIsRunning:(BOOL)arg1;
- (BOOL)threadIsRunning;
- (void)setFavoritesNTMenu:(id)arg1;
- (void)runThread;
- (void)setBuildID:(unsigned long long)arg1;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;

@end

@interface ASContainer : ASItem
{
}

- (id)valueInFsFilesWithName:(id)arg1;
- (id)valueInFsFilesAtIndex:(unsigned long long)arg1;
- (id)fsFiles;
- (id)valueInFsFoldersWithName:(id)arg1;
- (id)valueInFsFoldersAtIndex:(unsigned long long)arg1;
- (id)fsFolders;
- (id)valueInContainersWithName:(id)arg1;
- (id)valueInContainersAtIndex:(unsigned long long)arg1;
- (id)containers;
- (id)valueInFsItemsWithName:(id)arg1;
- (id)valueInFsItemsAtIndex:(unsigned long long)arg1;
- (id)fsItems;
- (id)returnFsItemWithName:(id)arg1 fromItems:(id)arg2;
- (id)directoryContents:(id)arg1 includeFiles:(BOOL)arg2 includeFolders:(BOOL)arg3;
- (id)initWithDesc:(id)arg1;

@end

@interface ASUtilities : NSObject
{
}

+ (id)convertHFSPathToPOSIXPath:(id)arg1;
+ (id)ASItemWithDesc:(id)arg1;
+ (void)initializeAppleScript;

@end

@interface NSGetCommandHack : NSObject
{
}

+ (void)install;
- (id)hack_performDefaultImplementation;

@end

@interface ASDisk : ASContainer
{
}

- (BOOL)bootDisk;
- (BOOL)localVolume;
- (BOOL)ejectable;
- (id)freeSpace;
- (id)capacity;
- (id)initWithDesc:(id)arg1;

@end

@interface ASFile : ASItem
{
}

- (void)setCreator:(id)arg1;
- (id)creator;
- (void)setType:(id)arg1;
- (id)type;
- (id)initWithDesc:(id)arg1;

@end

@interface ASFolder : ASContainer
{
}

- (id)initWithDesc:(id)arg1;

@end

@interface NTHackInstaller : NSObject
{
}

+ (void)install;

@end

@interface ASItem : NSObject
{
    NTFileDesc *desc;
}

@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
- (id)objectSpecifier;
- (void)setOtherPermissions:(id)arg1;
- (id)otherPermissions;
- (void)setGroupPermissions:(id)arg1;
- (id)groupPermissions;
- (void)setOwnerPermissions:(id)arg1;
- (id)ownerPermissions;
- (BOOL)extensionHidden;
- (unsigned int)labelIndex;
- (id)disk;
- (id)creationDate;
- (id)modificationDate;
- (BOOL)locked;
- (id)physicalSize;
- (id)logicalSize;
- (id)POSIXPath;
- (id)path;
- (id)URL;
- (id)owner;
- (id)group;
- (id)kind;
- (id)extension;
- (id)container;
- (id)infoWindow;
- (id)displayedName;
- (id)name;
- (id)description;
- (void)dealloc;
- (id)initWithDesc:(id)arg1;
- (id)doPFInfoCommand:(id)arg1;
- (id)doPFOpenCommand:(id)arg1;
- (id)doAddToFavoritesCommand:(id)arg1;
- (id)doEjectCommand:(id)arg1;
- (id)doDeleteCommand:(id)arg1;
- (id)doExistsCommand:(id)arg1;
- (id)doSelectCommand:(id)arg1;
- (id)doRevealCommand:(id)arg1;

@end

@interface NTDocumentController : NSDocumentController
{
    BOOL ignoreRTF_flag;
    BOOL ignoreHTML_flag;
    BOOL inOpenDocument;
    BOOL forceOpenInTextEditor;
    unsigned long long documentEncoding_flag;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
@property(nonatomic) BOOL forceOpenInTextEditor; // @synthesize forceOpenInTextEditor;
@property(nonatomic) BOOL inOpenDocument; // @synthesize inOpenDocument;
@property(nonatomic) BOOL ignoreHTML_flag; // @synthesize ignoreHTML_flag;
@property(nonatomic) BOOL ignoreRTF_flag; // @synthesize ignoreRTF_flag;
@property(nonatomic) unsigned long long documentEncoding_flag; // @synthesize documentEncoding_flag;
- (BOOL)ignoreHTML;
- (BOOL)ignoreRTF;
- (unsigned long long)documentEncoding;
- (long long)runModalOpenPanel:(id)arg1 forTypes:(id)arg2;
- (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)displayNameForType:(id)arg1;
- (Class)documentClassForType:(id)arg1;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3 forceOpenInTextEditor:(BOOL)arg4;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (void)openDocument:(id)arg1;

@end

@interface NTFindIconView : NTIconView
{
}

- (id)resultView;
- (id)previewMgrItems:(id)arg1;
- (void)syncInlinePreviewOption;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NTRecentMenu : NSObject <NSMenuDelegate>
{
    NSMenu *mRecentsMenu;
    BOOL needsRebuild;
    unsigned long long menuItemTag;
}

+ (void)install;
@property unsigned long long menuItemTag; // @synthesize menuItemTag;
@property BOOL needsRebuild; // @synthesize needsRebuild;
- (void)dealloc;
- (id)init;
- (void)recentsUpdated:(id)arg1;
- (void)setRecentsMenu:(id)arg1;
- (id)recentsMenu;
- (void)clearMenuAction:(id)arg1;
- (void)rebuildRecentsMenu;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface ASFinderWindow : ASWindow
{
}

- (id)objectSpecifier;
- (void)setTarget:(id)arg1;
- (id)target;
- (id)currentView;
- (void)setCurrentView:(id)arg1;
- (id)browser;

@end

@interface NTFreeformPaginator : NSObject <NTPaginatorProtocol>
{
    NTRectArray *_paginationArea;
    NTRectArray *_screenArea;
    NTFreeformPagination *_pagination;
    NTFreeformFreespaceMgr *_freespaceMgr;
    NSDictionary *_dragPositions;
    struct CGSize _itemSize;
    struct CGRect _screenRect;
}

@property(nonatomic) struct CGRect screenRect; // @synthesize screenRect=_screenRect;
@property(retain, nonatomic) NSDictionary *dragPositions; // @synthesize dragPositions=_dragPositions;
@property(retain, nonatomic) NTFreeformFreespaceMgr *freespaceMgr; // @synthesize freespaceMgr=_freespaceMgr;
@property(retain, nonatomic) NTFreeformPagination *pagination; // @synthesize pagination=_pagination;
@property(retain, nonatomic) NTRectArray *screenArea; // @synthesize screenArea=_screenArea;
@property(retain, nonatomic) NTRectArray *paginationArea; // @synthesize paginationArea=_paginationArea;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
- (void)paginateItems:(id)arg1 inView:(id)arg2 positionStore:(id)arg3;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1;
- (struct CGRect)itemRect:(unsigned long long)arg1;
- (void)setReverseBlockLayout:(BOOL)arg1;
- (BOOL)reverseBlockLayout;
- (void)setLayoutDirection:(int)arg1;
- (int)layoutDirection;
- (void)setMaxWidth:(unsigned long long)arg1;
- (void)setDocumentMargin:(struct CGSize)arg1;
- (void)setItemMargin:(struct CGSize)arg1;
- (void)setNumItems:(unsigned long long)arg1;
- (struct CGSize)size;
- (void)setWindowWidth:(unsigned long long)arg1;
- (void)setPaginationArea:(id)arg1 screenArea:(id)arg2 fixedRects:(BOOL)arg3;
- (void)setAreasForScreen:(id)arg1;
- (void)updateDragPositions:(id)arg1;
- (void)addUsedRect:(struct CGRect)arg1;
- (void)removeUsedRect:(struct CGRect)arg1;
- (struct CGPoint)snapPointToGrid:(struct CGPoint)arg1;
- (void)dealloc;
- (struct CGPoint)iconCenterPointForDesc:(id)arg1 inView:(id)arg2 positionStore:(id)arg3 guessed:(char *)arg4;
- (BOOL)itemRectIsWithinScreenArea:(struct CGRect)arg1;
- (struct CGRect)findFreeSnappedRectForRect:(struct CGRect)arg1;
- (void)paginateItemIndexesInFreeSpace:(id)arg1 items:(id)arg2;
- (void)paginateItemIndexes:(id)arg1 items:(id)arg2 inView:(id)arg3 positionStore:(id)arg4 outVolumes:(id)arg5 outNonVolumes:(id)arg6 forceFreeSpace:(BOOL)arg7;

@end

@interface NTCocoaPluginHost : NSObject <NTPathFinderPluginHostProtocol, NTPluginHostDelegateProtocol, NTFileListMonitorDelegate>
{
    NTPluginDelegateProxy *mDelegateProxy;
    NSMutableDictionary *mToolResults;
    NTFileListMonitor *mStaticSelection;
    NSString *modifyAttributeNotificationName;
    int mModuleLocation;
    NSString *mModulePrefKey;
    NTProxyArray *modulePlugins;
    NSDictionary *pluginParams;
    NTMenuPluginInstance *menuPlugin;
    NTActionToken *renameActionToken;
}

+ (id)menuHost;
+ (id)moduleHostWithSelection:(int)arg1 staticSelection:(id)arg2 modulePrefKey:(id)arg3 pluginParams:(id)arg4;
+ (id)moduleHost:(int)arg1 modulePrefKey:(id)arg2 pluginParams:(id)arg3;
+ (id)host:(int)arg1 staticSelection:(id)arg2 modulePrefKey:(id)arg3 pluginParams:(id)arg4;
@property(retain, nonatomic) NSString *modifyAttributeNotificationName; // @synthesize modifyAttributeNotificationName;
@property(retain, nonatomic) NTActionToken *renameActionToken; // @synthesize renameActionToken;
@property(retain, nonatomic) NTMenuPluginInstance *menuPlugin; // @synthesize menuPlugin;
@property(retain) NTProxyArray *modulePlugins; // @synthesize modulePlugins;
@property(retain) NSDictionary *pluginParams; // @synthesize pluginParams;
- (void)updateStaticSelection:(id)arg1;
- (void)sendBrowserEventToPlugins:(unsigned long long)arg1 browserID:(id)arg2;
- (void)addModulePlugin:(id)arg1;
- (void)removeModulePlugin:(id)arg1;
- (void)dealloc;
- (id)syncToBrowserID;
- (id)pluginParameters;
- (id)localize:(id)arg1 table:(id)arg2;
- (void)reportForItems:(id)arg1;
- (id)imageWithName:(id)arg1;
- (id)iconForType:(unsigned int)arg1 size:(unsigned long long)arg2;
- (id)processItems:(id)arg1 parameter:(id)arg2 pluginID:(id)arg3;
- (void)applyDirectoriesAttributesToContents:(id)arg1;
- (void)toggleAttributeID:(int)arg1 items:(id)arg2;
- (void)set:(id)arg1 attributeID:(int)arg2 items:(id)arg3;
- (void)askUserAlertSelector:(id)arg1;
- (void)askUser:(id)arg1 message:(id)arg2 okButton:(id)arg3 cancelButton:(id)arg4 window:(id)arg5 context:(id)arg6;
- (void)openTerminal:(id)arg1;
- (id)runTool:(id)arg1 directory:(id)arg2 arguments:(id)arg3 target:(id)arg4 setUID:(BOOL)arg5;
- (void)showGetInfoWindows:(id)arg1;
- (void)textDocumentWithString:(id)arg1;
- (id)displayedItems:(id)arg1 browserID:(id)arg2;
- (struct CGRect)frameForItem:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (void)rename:(id)arg1 withName:(id)arg2;
- (void)openItems:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (void)revealItem:(id)arg1 window:(id)arg2 browserID:(id)arg3;
- (void)setCurrentDirectory:(id)arg1 inWindow:(id)arg2 browserID:(id)arg3;
- (id)savedSearchFile:(id)arg1 browserID:(id)arg2;
- (id)currentRootDirectory:(id)arg1 browserID:(id)arg2;
- (id)currentDirectory:(id)arg1 browserID:(id)arg2;
- (id)sheetWindow:(id)arg1;
- (void)selectItems:(id)arg1 byExtendingSelection:(BOOL)arg2 inWindow:(id)arg3 browserID:(id)arg4;
- (id)selection:(id)arg1 browserID:(id)arg2;
- (id)makeFSItems:(id)arg1;
- (id)makeFSItem:(id)arg1;
- (BOOL)inspectorModule;
- (BOOL)infoModule;
- (void)setModulePrefKey:(id)arg1;
- (void)setModuleLocation:(int)arg1;
- (id)modulePrefKey;
- (int)moduleLocation;
- (unsigned long long)version;
- (void)fileListMonitor_updated:(id)arg1;
- (void)pluginFinished:(id)arg1;
- (void)plugin:(id)arg1 output:(id)arg2;
- (void)pluginConnected:(id)arg1;
- (void)setAttributePluginNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)keyWindowChanged:(id)arg1;
- (void)initialDelayedRefresh;
- (void)browserStateChangedNotification:(id)arg1;
- (void)setStaticSelection:(id)arg1;
- (id)staticSelection;
- (void)setToolResults:(id)arg1;
- (id)toolResults;
- (id)modulePluginsWindow;
- (void)setDelegateProxy:(id)arg1;
- (id)delegateProxy;

@end

@interface NTPluginManager : NTSingletonObject
{
    NSArray *plugins;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NSArray *plugins; // @synthesize plugins;
- (id)pluginWithID:(id)arg1;
- (id)burnMenuPlugin;
- (id)imageEditorPlugin;
- (id)diskImagePlugin;
- (id)hexViewPlugin;
- (id)init;
- (void)instantiateFilePlugins;
- (void)dealloc;
- (void)buildPluginsMenu;

@end

@interface NTDoubleClickDelegate : NSObject <NTDoubleClickDelegateProtocol>
{
}

- (void)handleDoubleClick:(id)arg1 startRect:(struct CGRect)arg2 window:(id)arg3 params:(id)arg4;
- (struct CGRect)endZoomRect:(struct CGRect)arg1;

@end

@interface ASInfoWindow : ASWindow
{
}

- (id)objectSpecifier;
- (id)item;

@end

@interface ASWindow : NSObject
{
    NSWindow *window;
}

+ (id)windowWithWindow:(id)arg1;
@property(retain, nonatomic) NSWindow *window; // @synthesize window;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)handleOpenScriptCommand:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface NTApplicationsMgr : NTSingletonObject <NTMessageProxyProtocol>
{
    NTMenu *mv_runningApplicationsCTMenu;
    NTApplicationsList *applicationsList;
    NTMessageProxy *proxy;
    NSArray *eventClients;
    NSMutableSet *updatedPathsSet;
    BOOL asyncOperationRunning;
    BOOL sentUpdateInstalledApplications;
    unsigned long long mv_runningAppsMenuBuildID;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NTMessageProxy *proxy; // @synthesize proxy;
@property(nonatomic) BOOL asyncOperationRunning; // @synthesize asyncOperationRunning;
@property(nonatomic) BOOL sentUpdateInstalledApplications; // @synthesize sentUpdateInstalledApplications;
@property(retain, nonatomic) NSMutableSet *updatedPathsSet; // @synthesize updatedPathsSet;
@property(retain) NTApplicationsList *applicationsList; // @synthesize applicationsList;
@property(retain, nonatomic) NSArray *eventClients; // @synthesize eventClients;
- (id)runningApplicationsCTMenu;
- (unsigned long long)runningApplicationsMenuBuildID;
- (id)openWithNTMenuForFile:(id)arg1;
- (id)applicationsForFile:(id)arg1;
- (id)openWithMenuForFile:(id)arg1 withSelector:(SEL)arg2 target:(id)arg3 smallFont:(BOOL)arg4;
- (id)applicationsMenu:(SEL)arg1 target:(id)arg2 smallFont:(BOOL)arg3;
- (id)installedApplications;
- (void)dealloc;
- (id)init;
- (void)applicationLaunchedNotification:(id)arg1;
- (void)setRunningApplicationsCTMenu:(id)arg1;
- (void)watchDirectories:(id)arg1;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (id)dictionaryForDescs:(id)arg1;
- (id)defaultSearchLocations;
- (void)updateInstalledApplicationsAfterDelay;
- (void)updateInstalledApplications;
- (void)findApps_result:(id)arg1;
- (id)findApps_worker:(id)arg1;
- (void)updateApps_result:(id)arg1;
- (id)updateApps_worker:(id)arg1;

@end

@interface NTLocateTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTTaskController *_locateTask;
    NSMutableString *_output;
}

+ (void)locate:(id)arg1;
- (void)dealloc;
- (void)startWithString:(id)arg1;
- (void)disposeTask;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NTOutlineView : NTFileOutlineView <NTDragDropIndicatorClientProtocol>
{
    BOOL drawDragTargetIndexSelected;
    NTDragDropIndicatorClient *dragDropIndicatorClient;
    unsigned long long dragTargetIndex;
    NTSpringLoadedHelper *springLoadedHelper;
    NSColor *_alternatingRowColor;
    NTStripeCompositor *_stripeCompositor;
}

@property(retain, nonatomic) NTStripeCompositor *stripeCompositor; // @synthesize stripeCompositor=_stripeCompositor;
@property(retain, nonatomic) NSColor *alternatingRowColor; // @synthesize alternatingRowColor=_alternatingRowColor;
@property(retain, nonatomic) NTSpringLoadedHelper *springLoadedHelper; // @synthesize springLoadedHelper;
@property(nonatomic) BOOL drawDragTargetIndexSelected; // @synthesize drawDragTargetIndexSelected;
@property(nonatomic) unsigned long long dragTargetIndex; // @synthesize dragTargetIndex;
@property(retain, nonatomic) NTDragDropIndicatorClient *dragDropIndicatorClient; // @synthesize dragDropIndicatorClient;
- (void)moveToBeginning:(BOOL)arg1 extendSelection:(BOOL)arg2;
- (void)scrollToSelection;
- (void)moveToEnd:(BOOL)arg1 extendSelection:(BOOL)arg2;
- (id)window;
- (struct CGRect)dragDropIndicatorRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonNTOutlineViewInit;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)springLoadFolderAtRow:(long long)arg1;
- (BOOL)canSpringLoadRowIndex:(long long)arg1 dragInfo:(id)arg2;
- (void)doAcceptDrop:(id)arg1;
- (unsigned long long)dropInfo:(id)arg1 isValidOnIndex:(long long)arg2;
- (long long)dropIndexUnderMouse:(struct CGPoint)arg1;
- (BOOL)shouldStartDragAndDropForEvent:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (long long)parentRowForRow:(long long)arg1;
- (void)redrawDragDropHighlightOnRow:(long long)arg1;
- (void)setInvertDragSelection:(BOOL)arg1;
- (void)clearDragSelection;
- (void)setDragSelection:(long long)arg1;
- (void)performSpringLoadedFolder;

@end

@interface NTFileBrowserView : NTView
{
    NTBrowserUndoManager *_undoManager;
    BOOL _hasSetupSplitView;
    BOOL _showTabBarForDragEvent;
    BOOL _pathBarPositionedAtBottom;
    NSString *_browserID;
    NTPathBar *_pathBar;
    NTTabBarContainer *_tabBar;
    NTTabBarDelegateMgr *_tabBarDelegateMgr;
    NTBoxView *_browserBox;
    NTTabbedBrowserViewMgr *_browserTabMgr;
    NTBrowserOptionsModel *_documentOptions;
    NTModule *_coverFlowModule;
    NSSplitView *_coverflowSplitView;
    NTSplitViewDelegate *_coverflowSplitViewDelegate;
    NSString *_coverflowNotificationName;
    NSString *_coverflowClickNotificationName;
    NTInstalledViewInfo *_viewInfo;
    NTBrowserStatusBar *_statusBar;
    NSView *_sharedFolderBar;
    NSView *_cloudDriveView;
}

+ (id)browserView:(struct CGRect)arg1 documentOptions:(id)arg2 browserID:(id)arg3;
@property(retain, nonatomic) NSView *cloudDriveView; // @synthesize cloudDriveView=_cloudDriveView;
@property(retain, nonatomic) NSView *sharedFolderBar; // @synthesize sharedFolderBar=_sharedFolderBar;
@property(nonatomic) BOOL pathBarPositionedAtBottom; // @synthesize pathBarPositionedAtBottom=_pathBarPositionedAtBottom;
@property(retain, nonatomic) NTBrowserStatusBar *statusBar; // @synthesize statusBar=_statusBar;
@property(retain, nonatomic) NTInstalledViewInfo *viewInfo; // @synthesize viewInfo=_viewInfo;
@property(nonatomic) BOOL showTabBarForDragEvent; // @synthesize showTabBarForDragEvent=_showTabBarForDragEvent;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NSString *coverflowClickNotificationName; // @synthesize coverflowClickNotificationName=_coverflowClickNotificationName;
@property(retain, nonatomic) NSString *coverflowNotificationName; // @synthesize coverflowNotificationName=_coverflowNotificationName;
@property(retain, nonatomic) NTSplitViewDelegate *coverflowSplitViewDelegate; // @synthesize coverflowSplitViewDelegate=_coverflowSplitViewDelegate;
@property(retain, nonatomic) NSSplitView *coverflowSplitView; // @synthesize coverflowSplitView=_coverflowSplitView;
@property(retain, nonatomic) NTModule *coverFlowModule; // @synthesize coverFlowModule=_coverFlowModule;
@property(retain, nonatomic) NTBrowserOptionsModel *documentOptions; // @synthesize documentOptions=_documentOptions;
@property(retain, nonatomic) NTTabbedBrowserViewMgr *browserTabMgr; // @synthesize browserTabMgr=_browserTabMgr;
@property(retain, nonatomic) NTBoxView *browserBox; // @synthesize browserBox=_browserBox;
@property(retain, nonatomic) NTTabBarDelegateMgr *tabBarDelegateMgr; // @synthesize tabBarDelegateMgr=_tabBarDelegateMgr;
@property(retain, nonatomic) NTTabBarContainer *tabBar; // @synthesize tabBar=_tabBar;
@property(retain, nonatomic) NTPathBar *pathBar; // @synthesize pathBar=_pathBar;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
- (void)switchFirstResponder;
- (void)setPathBarEditable:(BOOL)arg1;
- (id)browserTabModels;
- (id)tabSet:(id)arg1;
- (void)setTabSet:(id)arg1;
- (id)recentRequestManager;
- (unsigned long long)numberOfTabs;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)selectTabAtIndex:(unsigned long long)arg1;
- (void)selectPreviousTab;
- (void)selectNextTab;
- (id)addBrowser:(id)arg1;
- (void)showTab:(id)arg1 selectDescs:(id)arg2 selectExisting:(BOOL)arg3;
- (BOOL)selectTab:(id)arg1 selectDescs:(id)arg2;
- (id)browserTabModels:(unsigned long long *)arg1;
- (id)undoManager;
- (id)browser;
- (void)dealloc;
- (void)CBMNotification:(id)arg1;
- (void)preferencesModified:(id)arg1;
- (void)coverFlowResizeNotification:(id)arg1;
- (void)coverFlowClickNotification:(id)arg1;
- (void)releaseSplitView;
- (void)setupInstalledViews;
- (void)browserDocumentOptionsNotification:(id)arg1;
- (void)syncWithBrowserDocumentOptions;
- (void)frameDidChange;
- (void)viewWillDraw;
- (void)repositionViews;
- (void)appearanceMgrChangedNotification:(id)arg1;
- (void)tabBarModifiedNotification:(id)arg1;
- (void)tabBarDragEventNotification:(id)arg1;
- (void)createViews;
- (void)showCloudDriveView:(BOOL)arg1;
- (void)showSharedFolderBar:(BOOL)arg1;
- (void)showStatusBar:(BOOL)arg1;
- (BOOL)hasStatusBar;
- (void)setUndoManager:(id)arg1;

@end

@interface NTShelfView : NTBoxView
{
    NTShelfGrid *_shelfView;
    NSScrollView *_scrollView;
    PFShelfModule *mDelegate;
}

- (id)shelfName;
- (void)setShelfWithName:(id)arg1;
- (void)setShelfSet:(id)arg1;
- (id)shelfSet;
- (BOOL)validateMenuItem:(id)arg1;
- (id)popUpMenu;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setDataSet:(id)arg1;
- (void)setup;
- (void)switchShelfAction:(id)arg1;
- (void)doRemoveShelf:(id)arg1;
- (void)removeShelfAction:(id)arg1;
- (void)newShelf_message:(id)arg1;
- (void)newShelfAction:(id)arg1;
- (void)viewAsListAction:(id)arg1;
- (void)viewAsIconsAction:(id)arg1;

@end

@interface NTDropStackModule : NTBoxView <NTKVObserverProxyDelegate>
{
    NTDropStack *_dropStack;
    NSMutableDictionary *_model;
    NTKVObserverProxy *_observerProxy;
}

+ (id)dropStackInWindow:(id)arg1;
+ (id)dropStack:(id)arg1;
@property(retain) NTKVObserverProxy *observerProxy; // @synthesize observerProxy=_observerProxy;
@property(retain) NSMutableDictionary *model; // @synthesize model=_model;
@property(retain) NTDropStack *dropStack; // @synthesize dropStack=_dropStack;
- (id)stackViewController;
- (unsigned long long)height;
- (void)dealloc;
- (void)frameDidChange;
- (void)setup;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)returnModuleNotification:(id)arg1;

@end

@interface NTDropStack : NTBackgroundView
{
    NTDropStackHeaderView *_headerView;
    NTDropStackView *_stackView;
    NSMutableDictionary *_model;
    NTDropStackDataMgr *_dropStackDataMgr;
    NTKVObserverProxy *_observerProxy;
}

+ (id)dragTypes;
+ (id)dropStack:(id)arg1;
@property(retain) NTKVObserverProxy *observerProxy; // @synthesize observerProxy=_observerProxy;
@property(retain) NTDropStackDataMgr *dropStackDataMgr; // @synthesize dropStackDataMgr=_dropStackDataMgr;
@property(retain) NSMutableDictionary *model; // @synthesize model=_model;
@property(retain) NTDropStackView *stackView; // @synthesize stackView=_stackView;
@property(retain) NTDropStackHeaderView *headerView; // @synthesize headerView=_headerView;
- (id)stackViewController;
- (unsigned long long)height;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)allowsVibrancy;
- (BOOL)isOpaque;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)setKVObserver;
- (void)arrangeSubviews:(BOOL)arg1;
- (void)frameDidChange;
- (void)windowStateChanged:(id)arg1;
- (void)addToDropStack:(id)arg1;

@end

@interface PFShelfModule : NTSubmodule
{
    NTShelfView *mShelfView;
}

+ (id)module:(id)arg1 modulePrefsKey:(id)arg2;
- (void)dealloc;
- (void)defaultColorsChanged:(id)arg1;
- (id)menu;
- (void)frameDidChange;
- (void)arrangeSubviews;
- (void)createViews;
- (void)setShelfView:(id)arg1;
- (id)shelfView;
- (void)shelfDataSetWasChanged;

@end

@interface PFGlobalHotKey : NTSingletonObject
{
    struct OpaqueEventHotKeyRef *revealInPathFinderHotKeyRef;
    struct OpaqueEventHotKeyRef *applicationLauncherHotKeyRef;
    NSString *doubleTapLaunchNotificationName;
    NSString *doubleTapRevealNotificationName;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NSString *doubleTapRevealNotificationName; // @synthesize doubleTapRevealNotificationName;
@property(retain) NSString *doubleTapLaunchNotificationName; // @synthesize doubleTapLaunchNotificationName;
@property struct OpaqueEventHotKeyRef *applicationLauncherHotKeyRef; // @synthesize applicationLauncherHotKeyRef;
@property struct OpaqueEventHotKeyRef *revealInPathFinderHotKeyRef; // @synthesize revealInPathFinderHotKeyRef;
- (void)dealloc;
- (id)init;
- (void)syncWithPrefs;
- (void)hotKeyNotification:(id)arg1;
- (void)doubleTapLaunchNotification:(id)arg1;
- (void)doubleTapRevealNotification:(id)arg1;
- (void)doLaunchPanelCommand;
- (void)doRevealCommand;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)addKVObserver;
- (id)prefKeys;

@end

@interface NTShelfGrid : NTGrid
{
}

- (void)shelfManagerModifiedShelfNotification:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFShelfDelegate : NTGridDelegate <NTGridDelegateProtocol, NTGridDragSupport>
{
    NTDropHandler *mDropHandler;
    id mClickedObject;
}

+ (id)delegate;
- (id)gridColorForGrid:(id)arg1;
- (id)tooltipForObject:(id)arg1 grid:(id)arg2 shortFormat:(BOOL)arg3 itemRect:(struct CGRect)arg4 mouse:(struct CGPoint)arg5;
- (BOOL)performDrop:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (unsigned long long)acceptsDragInfo:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)startDragOnObject:(id)arg1 fromGrid:(id)arg2 image:(id)arg3 atPoint:(struct CGPoint)arg4 event:(id)arg5 pasteboardHelper:(id)arg6;
- (id)dragImageInGrid:(id)arg1 forObject:(id)arg2 withSize:(struct CGSize)arg3;
- (id)objectsFromPropertyList:(id)arg1 ofType:(id)arg2;
- (id)acceptedPasteboardTypes;
- (id)contextualMenuForGrid:(id)arg1;
- (id)drawObject:(id)arg1 inRect:(struct CGRect)arg2 coordinate:(struct NTCoordinate)arg3 ofGrid:(id)arg4 style:(int)arg5 dragging:(BOOL)arg6 drawingCache:(id)arg7;
- (void)drawBackground:(struct CGRect)arg1 ofGrid:(id)arg2;
- (void)gridContentsChanged:(id)arg1;
- (void)performSpringAction:(id)arg1 onObject:(id)arg2;
- (BOOL)canPerformSpringAction:(id)arg1 grid:(id)arg2 onObject:(id)arg3;
- (void)gridDoubleClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (void)gridClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (void)clearClickedObjectAfterDelay;
- (BOOL)mouseIntersectsObject:(id)arg1 grid:(id)arg2 mousePoint:(struct CGPoint)arg3 itemRect:(struct CGRect)arg4;
- (void)dealloc;
- (id)init;
- (void)setClickedObject:(id)arg1;
- (id)clickedObject;
- (void)setDropHandler:(id)arg1;
- (id)dropHandler;
- (void)browserStateChangedNotification:(id)arg1;
- (id)iconForAlias:(id)arg1 size:(unsigned long long)arg2;
- (void)openObject:(id)arg1 grid:(id)arg2 itemRect:(struct CGRect)arg3;
- (void)contextualMenuAction:(id)arg1;
- (void)openInTabAction:(id)arg1;
- (id)buildContextualMenu:(id)arg1 grid:(id)arg2;

@end

@interface NTShelfSet : NTGridDataSet <NSCoding>
{
    BOOL mIsDeleted;
}

- (void)setIsDeleted:(BOOL)arg1;
- (BOOL)isDeleted;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)verifyData;

@end

@interface NTShelfSetMgr : NTSingletonObject
{
    NSMutableArray *mShelfSets;
    BOOL mSavePending;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)setDefaultShelfName:(id)arg1 location:(id)arg2;
- (id)defaultShelfName:(id)arg1;
- (void)removeShelfWithName:(id)arg1;
- (id)makeShelfWithName:(id)arg1;
- (id)defaultShelf:(id)arg1;
- (id)shelfWithName:(id)arg1;
- (id)shelfAtIndex:(unsigned long long)arg1;
- (unsigned long long)numShelves;
- (void)setShelfChanged;
- (void)dealloc;
- (id)init;
- (void)addStandardToSet:(id)arg1;
- (void)addArray:(id)arg1 toSet:(id)arg2;
- (void)addedOrDeletedShelf;
- (void)setShelfSets:(id)arg1;
- (id)shelfSets;
- (void)setSavePending:(BOOL)arg1;
- (BOOL)savePending;
- (void)doSaveToPreferencesAfterDelay:(id)arg1;
- (void)loadFromPrefs;
- (void)saveToPreferences;

@end

@interface NTOldShelfSetMgrClass : NSObject <NSCoding>
{
    id mResult;
}

- (void)setResult:(id)arg1;
- (id)result;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NTTrashDrop : NSView
{
    NSImage *normalImage;
    NSImage *dimmedImage;
    NSBezierPath *roundRectPath;
    NTTrashView *trashView;
    struct CGSize cachedSize;
}

@property(retain) NTTrashView *trashView; // @synthesize trashView;
@property struct CGSize cachedSize; // @synthesize cachedSize;
@property(retain) NSBezierPath *roundRectPath; // @synthesize roundRectPath;
@property(retain) NSImage *dimmedImage; // @synthesize dimmedImage;
@property(retain) NSImage *normalImage; // @synthesize normalImage;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)contextualMenu:(BOOL)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)borderImageForSize:(struct CGSize)arg1 rimWidth:(unsigned long long)arg2;
- (id)createBezelBitmapRep:(struct CGSize)arg1 rimWidth:(unsigned long long)arg2;
- (id)createImage:(struct CGSize)arg1;
- (void)windowStateChangedNotification:(id)arg1;

@end

@interface NTTrashDropModule : NTBoxView <NSMenuDelegate>
{
    NTTrashDrop *trashDrop;
    NTPopUpHeaderView *headerControl;
}

@property(retain, nonatomic) NTPopUpHeaderView *headerControl; // @synthesize headerControl;
@property(retain, nonatomic) NTTrashDrop *trashDrop; // @synthesize trashDrop;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)menuNeedsUpdate:(id)arg1;
- (void)frameDidChange;
- (void)setup;
- (void)appearanceMgrChangedNotification:(id)arg1;

@end

@interface NTCommandHandler : NSObject
{
}

+ (void)compareItem:(id)arg1 toItem:(id)arg2;
+ (id)opendiffToolPath:(BOOL)arg1;
+ (void)fileMenuAction:(id)arg1;
+ (void)revealInPathFinder;
+ (void)addDescFavorites:(id)arg1;
+ (void)revealInFinder:(id)arg1;
+ (void)copyNameAction:(id)arg1;
+ (void)copyURLPathAction:(id)arg1;
+ (void)copyWindowsPathAction:(id)arg1;
+ (void)copyHFSPathAction:(id)arg1;
+ (void)copyUnixPathAction:(id)arg1;
+ (void)copyTerminalPathAction:(id)arg1;
+ (void)getInfoForDesc:(id)arg1 screenRect:(struct CGRect)arg2 window:(id)arg3;
+ (void)getInfoForDescs:(id)arg1 screenRects:(id)arg2 window:(id)arg3 summary:(BOOL)arg4;
+ (void)doGetInfoForDescs:(id)arg1 screenRects:(id)arg2 window:(id)arg3 summary:(BOOL)arg4;
+ (void)getInfoSheetSelector:(id)arg1;

@end

@interface FreeformSpace : NSObject
{
    NTRectArray *_rects;
    NTMutableRectArray *_freeRects;
    NTMutableRectArray *_usedRects;
    struct CGRect _rect;
}

+ (id)spaceWithRect:(struct CGRect)arg1 itemSize:(struct CGSize)arg2;
@property(retain, nonatomic) NTMutableRectArray *usedRects; // @synthesize usedRects=_usedRects;
@property(retain, nonatomic) NTMutableRectArray *freeRects; // @synthesize freeRects=_freeRects;
@property(retain, nonatomic) NTRectArray *rects; // @synthesize rects=_rects;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (struct CGRect)rectForRect:(struct CGRect)arg1;
- (void)removeUsedRect:(struct CGRect)arg1;
- (void)addUsedRect:(struct CGRect)arg1;
- (BOOL)intersectsSpace:(struct CGRect)arg1;
- (BOOL)isRectFree:(struct CGRect)arg1;
- (struct CGRect)nextFreeRect;
- (struct CGRect)rectAtIndex:(long long)arg1;
- (long long)numRects;
- (void)dealloc;

@end

@interface NTFreeformFreespaceMgr : NSObject
{
    NSMutableArray *_areas;
    struct CGSize _itemMargin;
    struct CGSize _itemSize;
    struct CGSize _documentMargin;
}

@property(nonatomic) struct CGSize documentMargin; // @synthesize documentMargin=_documentMargin;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(nonatomic) struct CGSize itemMargin; // @synthesize itemMargin=_itemMargin;
@property(retain, nonatomic) NSMutableArray *areas; // @synthesize areas=_areas;
- (struct CGRect)rectFromCenterPoint:(struct CGPoint)arg1;
- (void)removeUsedRect:(struct CGRect)arg1;
- (void)addUsedRect:(struct CGRect)arg1;
- (BOOL)isRectFree:(struct CGRect)arg1;
- (struct CGRect)nextFreeRect;
- (struct CGRect)rectForRect:(struct CGRect)arg1;
- (struct CGRect)rectAtIndex:(long long)arg1;
- (long long)numRects;
- (id)initWithRegion:(id)arg1 itemSize:(struct CGSize)arg2;
- (void)dealloc;

@end

@interface NTFreeformPagination : NSObject
{
    NTRectArray *_region;
    NSMutableDictionary *_itemRects;
    NSMutableArray *_intersectionCheckers;
}

+ (id)paginationWithRegion:(id)arg1;
@property(retain, nonatomic) NSMutableArray *intersectionCheckers; // @synthesize intersectionCheckers=_intersectionCheckers;
@property(retain, nonatomic) NSMutableDictionary *itemRects; // @synthesize itemRects=_itemRects;
@property(retain, nonatomic) NTRectArray *region; // @synthesize region=_region;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1;
- (struct CGRect)rectForID:(id)arg1;
- (void)setRect:(struct CGRect)arg1 forID:(id)arg2;
- (void)dealloc;

@end

@interface NTTextSummarizeController : NSWindowController
{
    id sentencesRadioMatrix;
    id summarizeSlider;
    id summaryTextView;
    NTTextSummary *summary;
}

+ (void)show:(id)arg1 parentWindow:(id)arg2;
@property(retain, nonatomic) NTTextSummary *summary; // @synthesize summary;
- (void)closeButtonAction:(id)arg1;
- (void)summarizeSliderAction:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)radioMatrixAction:(id)arg1;
- (void)dealloc;
- (unsigned long long)numSentences:(BOOL)arg1;
- (BOOL)displayParagraphs;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)displaySummary:(BOOL)arg1 count:(unsigned long long)arg2;

@end

@interface NTBackForwardButton : NSSegmentedControl <NSMenuDelegate, NSCoding>
{
}

+ (Class)cellClass;
- (void)postMouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setForwardButtonEnabled:(BOOL)arg1;
- (void)setBackButtonEnabled:(BOOL)arg1;
- (id)init;
- (void)menuNeedsUpdate:(id)arg1;
- (id)buttonMenu:(BOOL)arg1;

@end

@interface NTMenuCommandMgr : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (id)kopyPathMenu:(id)arg1 representedObject:(id)arg2;
- (id)stuffIt:(id)arg1;
- (id)changeDesktopBackground:(id)arg1;
- (id)viewOptions:(id)arg1;
- (id)makeTextFile:(id)arg1;
- (id)makeFile:(id)arg1;
- (id)shareDropboxFolder:(id)arg1;
- (id)viewPreviousDropboxVersions:(id)arg1;
- (id)viewOnDropbox:(id)arg1;
- (id)shareDropboxLink:(id)arg1;
- (id)makeFolderWithSelection:(id)arg1;
- (id)makeFolder:(id)arg1;
- (id)convertImage:(id)arg1;
- (id)viewHex:(id)arg1;
- (id)alwaysOpenWith:(id)arg1 target:(id)arg2;
- (id)openWith:(id)arg1 target:(id)arg2;
- (id)open:(id)arg1;
- (id)openWithTextEditor:(id)arg1 selectedDesc:(id)arg2;
- (id)label:(id)arg1;
- (id)showInspector;
- (id)getSummaryInfo:(id)arg1;
- (id)getInfo:(id)arg1 representedObject:(id)arg2;
- (id)openInTab:(id)arg1 representedObject:(id)arg2;
- (id)eject:(id)arg1;
- (id)contents:(id)arg1 useDisplayName:(BOOL)arg2 showInvisibles:(BOOL)arg3;
- (id)contents:(id)arg1;
- (id)slideshow;
- (id)showPackageContents:(id)arg1;
- (id)kopyPath:(id)arg1 representedObject:(id)arg2;
- (id)showInNewWindow:(id)arg1 representedObject:(id)arg2;
- (id)revealInFinder:(id)arg1 representedObject:(id)arg2;
- (id)pasteItem:(id)arg1;
- (id)paste:(id)arg1;
- (id)kopy:(id)arg1;
- (id)cut:(id)arg1;
- (id)kopyTo:(id)arg1;
- (id)moveTo:(id)arg1;
- (id)duplicate:(id)arg1;
- (id)rename:(id)arg1;
- (id)showOriginal:(id)arg1;
- (id)makeSymbolicLink:(id)arg1;
- (id)makeAlias:(id)arg1;
- (id)volumesReport:(id)arg1;
- (id)directoryListingReport:(id)arg1;
- (id)report:(id)arg1;
- (id)openInTerminal:(id)arg1 representedObject:(id)arg2;
- (id)compressAndEmail:(id)arg1;
- (id)email:(id)arg1;
- (id)compress:(id)arg1;
- (id)verifyArchive:(id)arg1;
- (id)decompress:(id)arg1;
- (id)touch:(id)arg1;
- (id)addToFavorites:(id)arg1;
- (id)editContextualMenu;
- (id)addToDropStack:(id)arg1;
- (id)burn:(id)arg1;
- (id)moveToTrash:(id)arg1;
- (id)quickLook:(id)arg1;
- (id)delete:(id)arg1;
- (id)secureDelete:(id)arg1;
- (id)findContextualMenu:(BOOL)arg1 selection:(id)arg2 actionPopUp:(BOOL)arg3 destinationMenu:(id)arg4;
- (id)pathNavigatorMenu:(id)arg1 target:(id)arg2 representedObject:(id)arg3;
- (id)tabBarMenu:(id)arg1 target:(id)arg2 representedObject:(id)arg3;
- (id)contextualMenu:(id)arg1 target:(id)arg2 optionKey:(BOOL)arg3 actionPopUp:(BOOL)arg4 destinationMenu:(id)arg5;
- (id)contextualMenu:(id)arg1 target:(id)arg2 optionKey:(BOOL)arg3 actionPopUp:(BOOL)arg4;
- (void)dealloc;
- (id)buttonBarMenu:(BOOL)arg1 directory:(id)arg2 target:(id)arg3 representedObject:(id)arg4;
- (id)menuItemsForIdentifier:(id)arg1 delegate:(id)arg2 firstSelected:(id)arg3 target:(id)arg4;
- (void)addMenuItems:(id)arg1 toMenu:(id)arg2 delegate:(id)arg3 target:(id)arg4;
- (void)directoryContents:(id)arg1 showInvisibles:(BOOL)arg2 target:(id)arg3 toMenu:(id)arg4;
- (id)openWithMenu:(id)arg1 action:(SEL)arg2 target:(id)arg3;
- (void)addSyncFoldersItem:(id)arg1 toMenu:(id)arg2 delegate:(id)arg3;
- (void)addCompareItem:(id)arg1 toMenu:(id)arg2;
- (void)editContextualMenuAction:(id)arg1;

@end

@interface NTFindSplitView : NTBoxView
{
    BOOL _hasSetupSplitView;
    NSSplitView *_splitView;
    NTSplitViewDelegate *_splitViewDelegate;
    NSView *_leftView;
    NTFindRightView *_rightView;
}

@property(retain, nonatomic) NTFindRightView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) NSView *leftView; // @synthesize leftView=_leftView;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
- (void)installMainView:(id)arg1;
- (void)dealloc;
- (void)viewWillDraw;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)toggleLeftView:(id)arg1;
- (void)createViews;
- (void)splitViewCollapseStateChanged:(id)arg1;

@end

@interface ListViewOutlineViewDelegate : NSObject <NTFileOutlineHelperProtocol, NSOutlineViewDelegate, NSOutlineViewDataSource>
{
    NTFileServerRequest *_savedServerRequest;
    ListView *_listView;
}

@property ListView *listView; // @synthesize listView=_listView;
@property(retain) NTFileServerRequest *savedServerRequest; // @synthesize savedServerRequest=_savedServerRequest;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)dealloc;
- (id)initWithListView:(id)arg1;
- (void)tableHelper_dragEnded;
- (void)tableHelper_dragStarted;
- (BOOL)tableHelper_shouldTrackIconButton;
- (BOOL)tableHelper_shouldTrackActionButton;
- (id)tableHelper_selection:(BOOL)arg1;
- (void)tableHelper_performDraggedOperation:(unsigned long long)arg1;
- (void)tableHelper_performIconButtonClick;
- (void)tableHelper_performActionButtonClick;
- (void)tableHelper_sendSelectionChangedNotification;

@end

@interface NTCompressAndEmailer : NSObject
{
    NSString *mv_to;
    NSString *mv_subject;
    NSString *mv_message;
    NSString *mv_notificationName;
}

+ (void)compressAndEmail:(id)arg1 subject:(id)arg2 message:(id)arg3 to:(id)arg4;
+ (void)compressAndEmail:(id)arg1;
+ (id)uniqueNotificationName;
- (void)compressCompleteNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setNotificationName:(id)arg1;
- (id)notificationName;
- (void)setMessage:(id)arg1;
- (id)message;
- (void)setSubject:(id)arg1;
- (id)subject;
- (void)setTo:(id)arg1;
- (id)to;
- (void)compressAndEmail:(id)arg1;

@end

@interface NTLaunchApplicationPanel : NSWindowController
{
    id applicationTable;
    id textField;
    id pathText;
    id nameText;
    id applicationCountText;
    NSString *_textString;
    NSMutableArray *_matchingArray;
    BOOL _runningAsSheet;
    NSArray *_files;
}

+ (void)launchApplication:(id)arg1 files:(id)arg2;
- (void)otherButtonAction:(id)arg1;
- (void)launchApplicationAction:(id)arg1;
- (void)closeButtonAction:(id)arg1;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)update;
- (void)controlTextDidChange:(id)arg1;
- (void)rebuildMatchingArray;
- (id)matchingArray;
- (id)applicationsArray;
- (id)selectedApplication;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)run:(id)arg1 files:(id)arg2;
- (void)doLaunchApplication:(id)arg1;
- (void)chooseApplicationSelector:(id)arg1;

@end

@interface NTClassDumpTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTFileDesc *mv_desc;
    NTTaskController *mTask;
    NTProgressBar *_progressBar;
    NSMutableString *_output;
    NSMutableString *_errors;
}

+ (void)classDump:(id)arg1 title:(id)arg2;
- (void)dealloc;
- (id)initWithDesc:(id)arg1 title:(id)arg2;
- (void)setDesc:(id)arg1;
- (id)desc;
- (void)disposeTask;
- (void)disposeProgressBar;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NTSymbolTableTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTFileDesc *mv_desc;
    NTTaskController *_systemProfileTask;
    NTProgressBar *_progressBar;
    NSMutableString *_output;
    NSMutableString *_errors;
}

+ (void)symbolTable:(id)arg1 title:(id)arg2;
- (void)dealloc;
- (id)initWithDesc:(id)arg1 title:(id)arg2;
- (void)setDesc:(id)arg1;
- (id)desc;
- (void)disposeTask;
- (void)disposeProgressBar;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NTPercentageIndicator : NSView
{
    double value;
    NSShadow *barShadow;
    NSColor *fillColor;
    NSColor *barColor;
    NSColor *dimmedFillColor;
    NSColor *dimmedBarColor;
}

@property(retain) NSShadow *barShadow; // @synthesize barShadow;
@property(retain) NSColor *dimmedBarColor; // @synthesize dimmedBarColor;
@property(retain) NSColor *dimmedFillColor; // @synthesize dimmedFillColor;
@property(retain) NSColor *barColor; // @synthesize barColor;
@property(retain) NSColor *fillColor; // @synthesize fillColor;
@property double value; // @synthesize value;
- (void)windowKeyStatusChanged:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NTHotspotCell : NTBaseCell
{
    NSImage *_image;
    NSImage *_highlightedImage;
}

+ (id)sharedInstance;
- (void)doDrawWithFrame:(struct CGRect)arg1 inView:(id)arg2 highlight:(BOOL)arg3;
- (void)dealloc;
- (id)createImage:(BOOL)arg1;
- (id)highlightedImage;
- (id)normalImage;

@end

@interface NTBrowserUndoManager : NTSharedUndoManager
{
    NSMutableArray *_actionTokens;
}

@property(retain, nonatomic) NSMutableArray *actionTokens; // @synthesize actionTokens=_actionTokens;
- (id)closeTabActionTokens;
- (void)undoClosedTab:(id)arg1;
- (void)registerUndoAction:(id)arg1;
- (id)activeManager;
- (id)init;
- (void)dealloc;
- (void)sharedUndoActionRemoved:(id)arg1;
- (void)sharedUndoActionAdded:(id)arg1;
- (void)doUndo:(id)arg1;

@end

@interface BrowserActions : NSObject
{
    BrowserModel *browserModel;
    NTBrowserViewController *viewController;
    NTSharedActionHandler *sharedActionHandler;
    NTActionToken *moveToTrashActionToken;
    NTActionToken *deleteActionToken;
    NTActionToken *duplicateActionToken;
    NTActionToken *createNewFileActionToken;
    NTActionToken *makeAliasActionToken;
    NTFileServerItem *afterSelectionItem;
    NSArray *newlyFolderSelection;
}

@property(retain, nonatomic) NSArray *newlyFolderSelection; // @synthesize newlyFolderSelection;
@property(retain, nonatomic) NTFileServerItem *afterSelectionItem; // @synthesize afterSelectionItem;
@property(retain, nonatomic) NTActionToken *makeAliasActionToken; // @synthesize makeAliasActionToken;
@property(retain, nonatomic) NTActionToken *createNewFileActionToken; // @synthesize createNewFileActionToken;
@property(retain, nonatomic) NTActionToken *duplicateActionToken; // @synthesize duplicateActionToken;
@property(retain, nonatomic) NTActionToken *deleteActionToken; // @synthesize deleteActionToken;
@property(retain, nonatomic) NTActionToken *moveToTrashActionToken; // @synthesize moveToTrashActionToken;
@property(retain, nonatomic) NTSharedActionHandler *sharedActionHandler; // @synthesize sharedActionHandler;
@property NTBrowserViewController *viewController; // @synthesize viewController;
@property BrowserModel *browserModel; // @synthesize browserModel;
- (void)quickLookAction:(id)arg1;
- (void)addToSidebar:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)putBackAction:(id)arg1;
- (void)openSelectionAction:(id)arg1;
- (void)invertSelection:(id)arg1;
- (void)selectionPanelAction:(id)arg1;
- (void)iconSizeAction:(id)arg1;
- (void)smartSortAction:(id)arg1;
- (void)treatPackagesAsFoldersAction:(id)arg1;
- (void)showInvisiblesAction:(id)arg1;
- (void)parentDirectoryAction:(id)arg1;
- (void)openDocument:(id)arg1;
- (void)newFileAction:(id)arg1;
- (void)newFolderWithSelectionAction:(id)arg1;
- (void)newFolderAction:(id)arg1;
- (void)makeSymbolicLinkAction:(id)arg1;
- (void)makeAliasAction:(id)arg1;
- (void)duplicateAction:(id)arg1;
- (void)moveAction:(id)arg1;
- (void)copyAction:(id)arg1;
- (void)convertGraphicAction:(id)arg1;
- (void)changeExtensionAction:(id)arg1;
- (void)renameAction:(id)arg1;
- (void)reloadAction:(id)arg1;
- (void)sortAscendingAction:(id)arg1;
- (void)sortByAction:(id)arg1;
- (void)arrangeAscendingAction:(id)arg1;
- (void)arrangeByAction:(id)arg1;
- (void)secureDeleteAction:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)moveToTrashAction:(id)arg1;
- (void)showOriginalAction:(id)arg1;
- (void)openInNewWindowAction:(id)arg1;
- (void)localizedStringsReport:(id)arg1;
- (void)directoryListingReportAction:(id)arg1;
- (void)sizeBrowserAction:(id)arg1;
- (void)showGetSummaryInfoPanelAction:(id)arg1;
- (void)showGetInfoPanelAction:(id)arg1;
- (void)showPackageContentsAction:(id)arg1;
- (void)openAsRoot:(id)arg1;
- (void)ejectAction:(id)arg1;
- (void)openInTabAction:(id)arg1;
- (void)dealloc;
- (id)initWithBrowserModel:(id)arg1 viewController:(id)arg2;
- (void)shareDropboxFolderAction:(id)arg1;
- (void)viewPreviousDropboxVersionsAction:(id)arg1;
- (void)viewOnDropboxAction:(id)arg1;
- (void)copyPublicDropboxLinkAction:(id)arg1;
- (void)shareDropboxLinkAction:(id)arg1;
- (void)terminalAction:(id)arg1;
- (void)burnAction:(id)arg1;
- (void)selectionReportAction:(id)arg1;
- (void)disassembleReportAction:(id)arg1;
- (void)symbolTableReportAction:(id)arg1;
- (void)classDumpReportAction:(id)arg1;
- (void)addToDropStackAction:(id)arg1;
- (void)emailAction:(id)arg1;
- (void)compressAndEmailAction:(id)arg1;
- (void)openWithApplicationPanelAction:(id)arg1;
- (void)alwaysOpenInApplicationAction:(id)arg1;
- (void)openInApplicationAction:(id)arg1;
- (void)openInTextEditAction:(id)arg1;
- (void)openTextDocument:(id)arg1;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)showInFinderAction:(id)arg1;
- (void)addToFavoritesAction:(id)arg1;
- (void)groupAction:(id)arg1;
- (void)ownerAction:(id)arg1;
- (void)hideExtensionAction:(id)arg1;
- (void)invisibleAction:(id)arg1;
- (void)lockedAction:(id)arg1;
- (void)labelAction:(id)arg1;
- (void)labelViewAction:(id)arg1;
- (void)touchAction:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)convertImageToICNSAction:(id)arg1;
- (void)stripFrameworkTo64:(id)arg1;
- (void)renameUnitTestAction:(id)arg1;
- (void)showSubversionDirectories:(id)arg1;
- (void)showSizeCalculator:(id)arg1;
- (void)deleteSubversionDirectories:(id)arg1;
- (void)selectDescs:(id)arg1;
- (void)lhaItAction:(id)arg1;
- (void)unixCompressAction:(id)arg1;
- (void)gZipAction:(id)arg1;
- (void)bZipAction:(id)arg1;
- (void)tarAction:(id)arg1;
- (void)appleSingleItAction:(id)arg1;
- (void)uuItAction:(id)arg1;
- (void)macBinaryItAction:(id)arg1;
- (void)binHexItAction:(id)arg1;
- (void)zipItWithUUAction:(id)arg1;
- (void)zipItWithPasswordAction:(id)arg1;
- (void)zipItAction:(id)arg1;
- (void)stuffItAndMacBinaryAction:(id)arg1;
- (void)stuffItAndBinHexAction:(id)arg1;
- (void)stuffItWithPasswordAction:(id)arg1;
- (void)stuffItAction:(id)arg1;
- (void)decompressAction:(id)arg1;
- (void)verifyArchiveAction:(id)arg1;
- (void)compressAction:(id)arg1;
- (void)doCompressAction:(int)arg1 archiveWithPassword:(BOOL)arg2;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)viewControllerForFirstResponder:(id)arg1;
- (void)trashCanceledNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)deleteSheetSelector:(id)arg1;
- (id)sheetWindow;
- (void)doMakeAliasAction:(int)arg1;
- (void)newFile_message:(id)arg1;
- (void)newFolderWithSelection_message:(id)arg1;
- (void)newFolder_message:(id)arg1;
- (id)destFolderForNewFile:(BOOL)arg1;
- (void)moveItemsSelector:(id)arg1;
- (void)copyItemsSelector:(id)arg1;
- (void)changeExtention_message:(id)arg1;
- (void)renameFileDesc_message:(id)arg1;
- (void)syncFoldersAction:(id)arg1;
- (void)compareItemsAction:(id)arg1;
- (BOOL)doLocalizedStringsReport:(id)arg1;
- (id)hideSelectedItemsFromUser:(BOOL)arg1;

@end

@interface NTBlurredScrollHack : NSObject
{
}

+ (void)install;
- (void)hack_setBoundsOrigin:(struct CGPoint)arg1;
- (void)hack_setBoundsSize:(struct CGSize)arg1;
- (void)hack_setFrameOrigin:(struct CGPoint)arg1;
- (void)hack_setFrameSize:(struct CGSize)arg1;

@end

@interface NSSegmentedCellHack : NSObject
{
}

+ (BOOL)hack_performKeyEquivalentOnAllCells:(id)arg1;
+ (void)install;

@end

@interface NSToolbarViewHack : NSObject
{
}

+ (void)install;
+ (Class)toolbarViewClass;
- (id)hack_menuForEvent:(id)arg1;

@end

@interface NTSamplerWindowController : NSWindowController
{
    NSPopUpButton *applicationPopUp;
    NSPopUpButton *durationPopUp;
    NSWindow *_parentWindow;
    BOOL _runningAsSheet;
    NTFileDesc *processDesc;
}

+ (void)sampleProcess:(id)arg1 parentWindow:(id)arg2;
@property(retain, nonatomic) NTFileDesc *processDesc; // @synthesize processDesc;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)run;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithProcess:(id)arg1 parentWindow:(id)arg2;
- (void)cancelButtonAction:(id)arg1;
- (void)sampleButtonAction:(id)arg1;
- (void)buildDurationPopUp;
- (void)buildProcessPopUp;
- (void)displaySampleReport:(long long)arg1;

@end

@interface NTFindWindow : NTUserWindow
{
}

@end

@interface NTFindWindowController : NTWindowController <NSWindowDelegate, NTBSMWindowDelegate, NTFindUIAccessDelegate, NTFileServerDelegateProtocol, NTSharedActionDelegateProtocol, NSMenuDelegate>
{
    NTSearchLocationsBar *_searchLocationsBar;
    NTFindParametersView *_findParametersView;
    NTFindSplitView *_splitView;
    NTSpotlightPredicateEditor *_spotlightPredicateEditor;
    NTFlippedView *_searchInstallView;
    NSTextField *_nameTextField;
    NSPopUpButton *_nameMatchSpecifierPopUp;
    NSTextField *_extensionTextField;
    NSPopUpButton *_kindPopUp;
    NTFourCharacterTextField *_typeTextField;
    NTFourCharacterTextField *_creatorTextField;
    NSPopUpButton *_sizeSpecifierPopUp;
    NSTextField *_sizeTextField;
    NSPopUpButton *_sizeUnitPopUp;
    NSPopUpButton *_labelPopUp;
    NSPopUpButton *_createdPopUp;
    NSPopUpButton *_modifiedPopUp;
    NSPopUpButton *_visibilityPopUp;
    NSPopUpButton *_ownerPopUp;
    NSPopUpButton *_groupPopUp;
    NSPopUpButton *_accessPopUp;
    NSButton *_searchInsidePackagesSwitch;
    NSButton *_searchInsideSystemFolderSwitch;
    NSView *_saveSearchAccessoryView;
    NSButton *_addToSidebarButton;
    NTFindWindowToolbar *_toolbarController;
    NTSplitViewDelegate *_splitViewDelegate;
    NTFindResultsView *_resultsView;
    NTFindStatusBar *_statusBar;
    NSMenu *_ownerMenu;
    NSMenu *_groupMenu;
    NTFileServer *_fileServer;
    NTFindUIAccess *_findUIAccess;
    NTSharedActionHandler *_sharedActionHandler;
    NTActionToken *_moveToTrashActionToken;
}

+ (BOOL)isOpen;
+ (void)find:(id)arg1;
@property(retain, nonatomic) NTActionToken *moveToTrashActionToken; // @synthesize moveToTrashActionToken=_moveToTrashActionToken;
@property(retain, nonatomic) NTSharedActionHandler *sharedActionHandler; // @synthesize sharedActionHandler=_sharedActionHandler;
@property(retain, nonatomic) NTFindUIAccess *findUIAccess; // @synthesize findUIAccess=_findUIAccess;
@property(retain, nonatomic) NTFileServer *fileServer; // @synthesize fileServer=_fileServer;
@property(retain, nonatomic) NSMenu *groupMenu; // @synthesize groupMenu=_groupMenu;
@property(retain, nonatomic) NSMenu *ownerMenu; // @synthesize ownerMenu=_ownerMenu;
@property(retain, nonatomic) NTFindStatusBar *statusBar; // @synthesize statusBar=_statusBar;
@property(retain, nonatomic) NTFindResultsView *resultsView; // @synthesize resultsView=_resultsView;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NTFindWindowToolbar *toolbarController; // @synthesize toolbarController=_toolbarController;
@property(retain, nonatomic) NSButton *addToSidebarButton; // @synthesize addToSidebarButton=_addToSidebarButton;
@property(retain, nonatomic) NSView *saveSearchAccessoryView; // @synthesize saveSearchAccessoryView=_saveSearchAccessoryView;
@property(retain, nonatomic) NSButton *searchInsideSystemFolderSwitch; // @synthesize searchInsideSystemFolderSwitch=_searchInsideSystemFolderSwitch;
@property(retain, nonatomic) NSButton *searchInsidePackagesSwitch; // @synthesize searchInsidePackagesSwitch=_searchInsidePackagesSwitch;
@property(retain, nonatomic) NSPopUpButton *accessPopUp; // @synthesize accessPopUp=_accessPopUp;
@property(retain, nonatomic) NSPopUpButton *groupPopUp; // @synthesize groupPopUp=_groupPopUp;
@property(retain, nonatomic) NSPopUpButton *ownerPopUp; // @synthesize ownerPopUp=_ownerPopUp;
@property(retain, nonatomic) NSPopUpButton *visibilityPopUp; // @synthesize visibilityPopUp=_visibilityPopUp;
@property(retain, nonatomic) NSPopUpButton *modifiedPopUp; // @synthesize modifiedPopUp=_modifiedPopUp;
@property(retain, nonatomic) NSPopUpButton *createdPopUp; // @synthesize createdPopUp=_createdPopUp;
@property(retain, nonatomic) NSPopUpButton *labelPopUp; // @synthesize labelPopUp=_labelPopUp;
@property(retain, nonatomic) NSPopUpButton *sizeUnitPopUp; // @synthesize sizeUnitPopUp=_sizeUnitPopUp;
@property(retain, nonatomic) NSTextField *sizeTextField; // @synthesize sizeTextField=_sizeTextField;
@property(retain, nonatomic) NSPopUpButton *sizeSpecifierPopUp; // @synthesize sizeSpecifierPopUp=_sizeSpecifierPopUp;
@property(retain, nonatomic) NTFourCharacterTextField *creatorTextField; // @synthesize creatorTextField=_creatorTextField;
@property(retain, nonatomic) NTFourCharacterTextField *typeTextField; // @synthesize typeTextField=_typeTextField;
@property(retain, nonatomic) NSPopUpButton *kindPopUp; // @synthesize kindPopUp=_kindPopUp;
@property(retain, nonatomic) NSTextField *extensionTextField; // @synthesize extensionTextField=_extensionTextField;
@property(retain, nonatomic) NSPopUpButton *nameMatchSpecifierPopUp; // @synthesize nameMatchSpecifierPopUp=_nameMatchSpecifierPopUp;
@property(retain, nonatomic) NSTextField *nameTextField; // @synthesize nameTextField=_nameTextField;
@property(retain, nonatomic) NTFlippedView *searchInstallView; // @synthesize searchInstallView=_searchInstallView;
@property(retain, nonatomic) NTSpotlightPredicateEditor *spotlightPredicateEditor; // @synthesize spotlightPredicateEditor=_spotlightPredicateEditor;
@property(retain, nonatomic) NTFindSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) NTFindParametersView *findParametersView; // @synthesize findParametersView=_findParametersView;
@property(retain, nonatomic) NTSearchLocationsBar *searchLocationsBar; // @synthesize searchLocationsBar=_searchLocationsBar;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (id)browserStyle;
- (void)setViewOptionsModel:(id)arg1;
- (id)viewOptionsModel;
- (void)openSelectionAction:(id)arg1;
- (void)openDocument:(id)arg1;
- (void)checkboxAction:(id)arg1;
- (void)iconSizeAction:(id)arg1;
- (void)dragToTrashAction:(id)arg1;
- (void)moveToTrashAction:(id)arg1;
- (void)showGetSummaryInfoPanelAction:(id)arg1;
- (void)showGetInfoPanelAction:(id)arg1;
- (void)openInNewWindowAction:(id)arg1;
- (void)revealItemAction:(id)arg1;
- (void)deleteSearch:(id)arg1;
- (void)selectSavedSearch:(id)arg1;
- (void)saveSearch:(id)arg1;
- (void)saveSearchFile:(id)arg1;
- (void)toggleRightShelfAction:(id)arg1;
- (void)toggleLeftShelfAction:(id)arg1;
- (void)smartSortAction:(id)arg1;
- (void)sortAscendingAction:(id)arg1;
- (void)sortByAction:(id)arg1;
- (void)arrangeAscendingAction:(id)arg1;
- (void)arrangeByAction:(id)arg1;
- (void)showInvisiblesAction:(id)arg1;
- (void)listViewAction:(id)arg1;
- (void)iconViewAction:(id)arg1;
- (void)viewTypeAction:(id)arg1;
- (void)searchAction:(id)arg1;
- (void)spotlightAction:(id)arg1;
- (void)findTypeAction:(id)arg1;
- (void)findAction:(id)arg1;
- (void)secureDeleteAction:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)burnAction:(id)arg1;
- (void)selectionReportAction:(id)arg1;
- (void)addToFavoritesAction:(id)arg1;
- (void)quickLookAction:(id)arg1;
- (void)disassembleReportAction:(id)arg1;
- (void)symbolTableReportAction:(id)arg1;
- (void)classDumpReportAction:(id)arg1;
- (void)emailAction:(id)arg1;
- (void)compressAndEmailAction:(id)arg1;
- (void)openWithApplicationPanelAction:(id)arg1;
- (void)alwaysOpenInApplicationAction:(id)arg1;
- (void)openInApplicationAction:(id)arg1;
- (void)openInTextEditAction:(id)arg1;
- (void)openTextDocument:(id)arg1;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)copy:(id)arg1;
- (void)terminalAction:(id)arg1;
- (void)showInFinderAction:(id)arg1;
- (id)popUpMenuFirstSelectedDesc;
- (unsigned long long)popUpMenuNumSelected;
- (id)currentActionPopUpMenu;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)newSavedSearch_message:(id)arg1;
- (id)savedSearchNames;
- (void)actionTokenNotification:(id)arg1;
- (id)findList;
- (void)openSelection;
- (void)handleSelectionChanged;
- (void)buildAccessPopUpMenu;
- (void)refreshAllViewsNotification:(id)arg1;
- (id)accessMenu;
- (id)modeBitsArray;
- (void)buildLabelPopUpMenu;
- (void)buildGroupPopUpMenu;
- (void)buildOwnerPopUpMenu;
- (id)contextualMenu:(BOOL)arg1 actionPopUp:(BOOL)arg2;
- (void)zoomEffectsForRow:(long long)arg1 desc:(id)arg2;
- (void)zoomEffectsForSelection;
- (void)dataChanged:(BOOL)arg1;
- (void)removeSelectedItems;
- (void)removeItemsFromList:(id)arg1;
- (unsigned long long)indexOfResult:(id)arg1;
- (void)updateStatusBar;
- (void)clearResults;
- (BOOL)treatPackagesAsFolders;
- (void)stopFind;
- (BOOL)isFindInProgress;
- (void)doSpotlight:(id)arg1;
- (void)doSearch;
- (void)doFind:(id)arg1;
- (BOOL)windowSupportsThemes;
- (void)doShowWindow;
- (void)editorResults:(id)arg1;
- (id)currentStateNofication_displayedItems:(id)arg1;
- (struct CGRect)currentStateNofication_frame:(id)arg1 forDesc:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 fileServerRequest:(id)arg2;
- (void)currentStateNofication_set:(id)arg1 selection:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (id)currentStateNofication_rootFileServerRequest:(id)arg1;
- (id)currentStateNofication_fileServerRequest:(id)arg1;
- (id)currentStateNofication_selection:(id)arg1;
- (id)currentStateNofication_browserID;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)findUIAccess_zoomEffectsForSelection;
- (id)findUIAccess_fileServer;
- (void)menuNeedsUpdate:(id)arg1;
- (void)findUIAccess_doubleClick;
- (void)findUIAccess_actionButtonClick;
- (void)findUIAccess_handleSelectionChanged;
- (id)findUIAccess_selectedItems;
- (void)findUIAccess_removeItems:(id)arg1;
- (void)findUIAccess_copy:(id)arg1;
- (id)findUIAccess_findList;
- (id)modifyAttributeNotificationName_SAD;
- (void)clearFileFilter_SAD;
- (id)containingDirectory_SAD;
- (id)actionTargetInSelectedDirectory_SAD;
- (id)actionTargetDirectory_SAD;
- (BOOL)treatPackagesAsFolders_SAD;
- (id)window_SAD;
- (unsigned long long)numItemsSelected_SAD;
- (id)firstSelectedDesc_SAD:(BOOL)arg1;
- (id)selectedDescs_SAD:(BOOL)arg1;
- (id)serverRequest_SAD;
- (void)fileServer_Error;
- (void)fileServer_isBusy:(BOOL)arg1;
- (void)fileServer_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)fileServer_didUpdateRequest:(id)arg1 savedState:(id)arg2;
- (id)fileServer_willUpdateRequest:(id)arg1;
- (BOOL)fileServer_shouldUpdate;

@end

@interface NTFindWindowToolbarItemCache : NSObject
{
    NSMutableDictionary *_items;
}

@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
- (void)addBrowserViewItem;
- (void)addFindViewsItem;
- (void)addPopUpButton:(id)arg1 label:(id)arg2 action:(SEL)arg3 menu:(id)arg4;
- (void)addSimpleButton:(id)arg1 label:(id)arg2 action:(SEL)arg3;
- (id)allKeys;
- (id)itemForIdentifier:(id)arg1 target:(id)arg2;
- (id)init;
- (void)dealloc;

@end

@interface NTFindWindowToolbar : NSObject <NSToolbarDelegate>
{
    NSToolbar *_toolbar;
    NTFindWindowToolbarItemCache *_cache;
}

@property(retain, nonatomic) NTFindWindowToolbarItemCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
- (void)updateFindButton:(BOOL)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)initWithWindow:(id)arg1;
- (void)dealloc;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;

@end

@interface NTFindParametersView : NTBoxView
{
    NSTabView *tabView;
    double searchDividerPosition;
}

@property(nonatomic) double searchDividerPosition; // @synthesize searchDividerPosition;
@property(retain, nonatomic) NSTabView *tabView; // @synthesize tabView;
- (void)installFindView:(id)arg1 spotlightView:(id)arg2;
- (long long)currentTabIndex;
- (void)switchToTab:(long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)adjustToFitSpotlightEditor:(id)arg1;
- (void)frameDidChange;
- (void)setup;

@end

@interface NTSharedFolderBar : NTView
{
    NSMutableAttributedString *_label;
    NSMutableDictionary *_labelAttributes;
    NSShadow *_labelShadow;
}

@property(retain, nonatomic) NSShadow *labelShadow; // @synthesize labelShadow=_labelShadow;
@property(retain, nonatomic) NSMutableDictionary *labelAttributes; // @synthesize labelAttributes=_labelAttributes;
@property(retain, nonatomic) NSMutableAttributedString *label; // @synthesize label=_label;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface NTFileListViewDelegate : NTGridDelegate <NTGridDelegateProtocol, NTGridDragSupport>
{
    NTDropHandler *mDropHandler;
    NTEjectButtonCell *_ejectButton;
    NTFileDesc *_ejectDesc;
    BOOL mv_showEjectButton;
}

+ (id)delegate;
- (id)gridColorForGrid:(id)arg1;
- (id)tooltipForObject:(id)arg1 grid:(id)arg2 shortFormat:(BOOL)arg3 itemRect:(struct CGRect)arg4 mouse:(struct CGPoint)arg5;
- (BOOL)performDrop:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (unsigned long long)acceptsDragInfo:(id)arg1 onObject:(id)arg2 grid:(id)arg3;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)startDragOnObject:(id)arg1 fromGrid:(id)arg2 image:(id)arg3 atPoint:(struct CGPoint)arg4 event:(id)arg5 pasteboardHelper:(id)arg6;
- (id)dragImageInGrid:(id)arg1 forObject:(id)arg2 withSize:(struct CGSize)arg3;
- (id)objectsFromPropertyList:(id)arg1 ofType:(id)arg2;
- (id)acceptedPasteboardTypes;
- (void)contextualMenuAction:(id)arg1;
- (void)openInTabAction:(id)arg1;
- (id)contextualMenuForGrid:(id)arg1;
- (id)drawObject:(id)arg1 inRect:(struct CGRect)arg2 coordinate:(struct NTCoordinate)arg3 ofGrid:(id)arg4 style:(int)arg5 dragging:(BOOL)arg6 drawingCache:(id)arg7;
- (void)drawBackground:(struct CGRect)arg1 ofGrid:(id)arg2;
- (void)gridContentsChanged:(id)arg1;
- (void)performSpringAction:(id)arg1 onObject:(id)arg2;
- (BOOL)canPerformSpringAction:(id)arg1 grid:(id)arg2 onObject:(id)arg3;
- (void)gridDoubleClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (void)gridClick:(id)arg1 mousePoint:(struct CGPoint)arg2 onObject:(id)arg3 itemRect:(struct CGRect)arg4;
- (BOOL)mouseIntersectsObject:(id)arg1 grid:(id)arg2 mousePoint:(struct CGPoint)arg3 itemRect:(struct CGRect)arg4;
- (void)setShowEjectButton:(BOOL)arg1;
- (BOOL)showEjectButton;
- (void)ejectButtonCellAction:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)descFromObject:(id)arg1 verify:(BOOL)arg2;
- (BOOL)needsEjectMenuItemForDesc:(id)arg1;
- (BOOL)needsEjectButtonForDesc:(id)arg1 width:(long long)arg2;
- (void)openObject:(id)arg1 grid:(id)arg2 itemRect:(struct CGRect)arg3;
- (void)setDropHandler:(id)arg1;
- (id)dropHandler;

@end

@interface NTFindLeftColumn : NTBoxView
{
    NTDefaultsClient *defaultsClient;
    NTModule *filePathModule;
    NTTrashDropModule *trashModule;
}

@property(retain, nonatomic) NTTrashDropModule *trashModule; // @synthesize trashModule;
@property(retain, nonatomic) NTModule *filePathModule; // @synthesize filePathModule;
@property(retain, nonatomic) NTDefaultsClient *defaultsClient; // @synthesize defaultsClient;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)frameDidChange;
- (void)setup;
- (void)createSubviews;

@end

@interface NTFileTableCell : NSCell
{
    BOOL _drawIconSelected;
    BOOL _drawBackgroundHighlightColor;
    BOOL _drawForDragImage;
    BOOL _firstColumn;
    BOOL _lastColumn;
    BOOL _disableTextDrawing;
    BOOL _groupCell;
    BOOL _firstGroupCell;
    int _actionButtonStyle;
    int _dropTargetDrawState;
    unsigned long long _iconSize;
    unsigned long long _label;
    NTIconImager *_iconImager;
    NTStringImager *_textImage;
}

@property(nonatomic, getter=isFirstGroupCell) BOOL firstGroupCell; // @synthesize firstGroupCell=_firstGroupCell;
@property(nonatomic, getter=isGroupCell) BOOL groupCell; // @synthesize groupCell=_groupCell;
@property(nonatomic) BOOL disableTextDrawing; // @synthesize disableTextDrawing=_disableTextDrawing;
@property(nonatomic) BOOL lastColumn; // @synthesize lastColumn=_lastColumn;
@property(nonatomic) BOOL firstColumn; // @synthesize firstColumn=_firstColumn;
@property(nonatomic) int dropTargetDrawState; // @synthesize dropTargetDrawState=_dropTargetDrawState;
@property(nonatomic) BOOL drawForDragImage; // @synthesize drawForDragImage=_drawForDragImage;
@property(nonatomic) BOOL drawBackgroundHighlightColor; // @synthesize drawBackgroundHighlightColor=_drawBackgroundHighlightColor;
@property(nonatomic) int actionButtonStyle; // @synthesize actionButtonStyle=_actionButtonStyle;
@property(nonatomic) BOOL drawIconSelected; // @synthesize drawIconSelected=_drawIconSelected;
@property(retain, nonatomic) NTStringImager *textImage; // @synthesize textImage=_textImage;
@property(retain, nonatomic) NTIconImager *iconImager; // @synthesize iconImager=_iconImager;
@property(nonatomic) unsigned long long label; // @synthesize label=_label;
@property(nonatomic) unsigned long long iconSize; // @synthesize iconSize=_iconSize;
- (void)trackActionButton:(id)arg1 inRect:(struct CGRect)arg2 inView:(id)arg3 action:(SEL)arg4 target:(id)arg5;
- (struct CGRect)actionButtonRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)minimumTitleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setPlaceholderString:(id)arg1;
- (id)placeholderString;
- (void)dealloc;
- (id)sharedIconCell;
- (void)rectsForBounds:(struct CGRect)arg1 imageRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3 actionButtonRect:(struct CGRect *)arg4;
- (unsigned long long)requiredTextWidth;
- (unsigned long long)requiredImageWidth;
- (unsigned long long)requiredActionButtonWidth:(unsigned long long)arg1;
- (void)drawMagnifyGlassInCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawIconInCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawHotspotInCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTextInRect:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)_drawHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NTFileOutlineView : NSOutlineView <NTFileOutlineProtocol>
{
    NTFileOutlineHelper *helper_storage;
}

+ (BOOL)handledLoopAroundKeyDown:(id)arg1 tableView:(id)arg2 outResult:(long long *)arg3;
- (void)setHelper_storage:(id)arg1;
- (id)helper_storage;
- (void)keyDown:(id)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)sizeLastColumnToFit;
- (void)_doUserExpandOrCollapseOfItem:(id)arg1 isExpand:(BOOL)arg2 optionKeyWasDown:(BOOL)arg3;
- (void)quickLookWithEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitNTFileOutlineView;
- (void)dealloc;
- (void)superMouseDown:(id)arg1;
- (id)helper;

@end

@interface NTFileOutlineHelper : NSObject
{
    NSOutlineView<NTFileOutlineProtocol> *outlineView;
    NTRubberbandSelector *mRubberband;
    BOOL _drawCellsForDragImage;
    unsigned long long _nameColumnIndex;
}

@property NSOutlineView<NTFileOutlineProtocol> *outlineView; // @synthesize outlineView;
- (void)setDrawCellsForDragImage:(BOOL)arg1;
- (BOOL)drawCellsForDragImage;
- (unsigned long long)nameColumnIndex;
- (void)handleMouseDownEvent:(id)arg1;
- (void)findClickedItem:(struct CGPoint)arg1 row:(long long *)arg2 col:(long long *)arg3 intersectsIcon:(char *)arg4 intersectsText:(char *)arg5 intersectsActionButton:(char *)arg6;
- (void)performRubberbandDrag:(struct CGPoint)arg1 clickState:(id)arg2;
- (void)toggleSelections:(id)arg1;
- (void)toggleSelections:(id)arg1 newSelection:(id)arg2;
- (void)drawSelectionRect:(BOOL)arg1 inRect:(struct CGRect)arg2;
- (id)positionsIntersectingRect:(struct CGRect)arg1;
- (void)rectsForRow:(long long)arg1 column:(long long)arg2 iconRect:(struct CGRect *)arg3 textRect:(struct CGRect *)arg4 minimalTextRect:(BOOL)arg5 actionButtonRect:(struct CGRect *)arg6;
- (void)rectsForRow:(long long)arg1 column:(long long)arg2 iconRect:(struct CGRect *)arg3 textRect:(struct CGRect *)arg4 minimalTextRect:(BOOL)arg5;
- (void)rectsForRow:(long long)arg1 column:(long long)arg2 iconRect:(struct CGRect *)arg3 textRect:(struct CGRect *)arg4 actionButtonRect:(struct CGRect *)arg5;
- (void)rectForRow:(long long)arg1 column:(long long)arg2 iconRect:(struct CGRect *)arg3 textRect:(struct CGRect *)arg4;
- (void)setOutlineViewToNil;
- (void)dealloc;
- (id)initWithOutlineView:(id)arg1;
- (void)setRubberband:(id)arg1;
- (id)rubberband;
- (void)resetColumnIndexes;
- (BOOL)shouldTrackIconButton;
- (BOOL)shouldTrackActionButton;
- (void)handleClick:(id)arg1 onRow:(long long)arg2 onColumn:(long long)arg3;
- (BOOL)writeSelectionToDragPasteboard:(id)arg1;
- (void)columnDidMove:(id)arg1;
- (void)selectionChanged:(id)arg1;
- (void)registerForNotifications;
- (void)fileTableIconButtonAction:(id)arg1;
- (void)fileTableActionButtonAction:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (void)performDragOnRow:(long long)arg1 withClick:(id)arg2;

@end

@interface NTIconCell : NTBaseCell
{
    NTIconImager *iconImager;
}

@property(retain, nonatomic) NTIconImager *iconImager; // @synthesize iconImager;
- (void)doDrawWithFrame:(struct CGRect)arg1 inView:(id)arg2 highlight:(BOOL)arg3;
- (void)dealloc;

@end

@interface NTMagnifyGlassCell : NTBaseCell
{
}

+ (id)sharedInstance;
+ (id)createMagnifyImage:(BOOL)arg1;
+ (id)lineColor:(BOOL)arg1;
+ (id)fillColor:(BOOL)arg1;
+ (id)selectedImage;
+ (id)normalImage;
+ (struct CGRect)buttonRect;
- (id)init;

@end

@interface NTBaseCell : NSButtonCell
{
    struct CGRect _trackedCellFrame;
    id _trackedCellView;
}

- (void)doDrawWithFrame:(struct CGRect)arg1 inView:(id)arg2 highlight:(BOOL)arg3;
- (BOOL)shouldSendActionForEvent:(id)arg1 inRect:(struct CGRect)arg2 inView:(id)arg3;
- (void)doTrackButton:(id)arg1 inRect:(struct CGRect)arg2 inView:(id)arg3 action:(SEL)arg4 target:(id)arg5;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)commonInit;

@end

@interface NTFindStatusBar : NTBoxView
{
    BOOL _updateInProgress;
    NTFindResultsView *_resultsView;
    NTSpinningWheel *_progressBar;
    NTStringView *_messageTextField;
    NTTemplateButton *_stopButton;
    NSSlider *_iconSlider;
    long long _progressBusyCounter;
    long long _cachedNumItems;
    long long _cachedNumSelected;
}

+ (id)statusBarWithResultsView:(id)arg1;
@property(nonatomic) BOOL updateInProgress; // @synthesize updateInProgress=_updateInProgress;
@property(nonatomic) long long cachedNumSelected; // @synthesize cachedNumSelected=_cachedNumSelected;
@property(nonatomic) long long cachedNumItems; // @synthesize cachedNumItems=_cachedNumItems;
@property(nonatomic) long long progressBusyCounter; // @synthesize progressBusyCounter=_progressBusyCounter;
@property(retain, nonatomic) NSSlider *iconSlider; // @synthesize iconSlider=_iconSlider;
@property(retain, nonatomic) NTTemplateButton *stopButton; // @synthesize stopButton=_stopButton;
@property(retain, nonatomic) NTStringView *messageTextField; // @synthesize messageTextField=_messageTextField;
@property(retain, nonatomic) NTSpinningWheel *progressBar; // @synthesize progressBar=_progressBar;
@property(nonatomic) NTFindResultsView *resultsView; // @synthesize resultsView=_resultsView;
- (void)startProgressAnimation:(id)arg1;
- (void)updateProgress:(BOOL)arg1;
- (void)updateNumItems:(long long)arg1 numSelected:(long long)arg2;
- (void)frameDidChange;
- (BOOL)isOpaque;
- (void)viewDidMoveToWindow;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isIconView;
- (void)setupIconSlider;
- (struct CGRect)rectForText:(struct CGRect)arg1;
- (BOOL)setMessageText:(id)arg1;
- (void)positionViews;
- (void)createViews;
- (void)doUpdate;
- (void)iconSliderValueChanged:(id)arg1;
- (void)viewOptionsChanged:(id)arg1;
- (void)browserStyleChanged:(id)arg1;

@end

@interface NTStandardMenus : NSObject
{
}

+ (id)sortByMenu:(id)arg1;
+ (id)sortMenu:(id)arg1;
+ (id)arrangeByMenu:(id)arg1;
+ (id)arrangeMenu:(id)arg1;
+ (id)sortAscendingMenu:(id)arg1;
+ (id)arrangeAscendingMenu:(id)arg1;

@end

@interface NTIconPointMatch : NSObject
{
    BOOL _intersectsIcon;
    BOOL _intersectsText;
    unsigned long long _index;
}

+ (id)match:(unsigned long long)arg1 intersectsIcon:(BOOL)arg2 intersectsText:(BOOL)arg3;
@property(nonatomic) BOOL intersectsText; // @synthesize intersectsText=_intersectsText;
@property(nonatomic) BOOL intersectsIcon; // @synthesize intersectsIcon=_intersectsIcon;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;

@end

@interface NTCompareWindowController : NSWindowController <NTCompareProtocol>
{
    id itemForm;
    id outputTextView;
    NSFont *_displayFont;
}

+ (void)compare:(id)arg1 two:(id)arg2;
- (void)compareOuput:(id)arg1;
- (void)awakeFromNib;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithOne:(id)arg1 two:(id)arg2;
- (void)displayText:(id)arg1;
- (void)okButtonAction:(id)arg1;

@end

@interface NTCompareThread : NSObject
{
    id <NTCompareProtocol> _delegate;
    NTFileDesc *_itemOne;
    NTFileDesc *_itemTwo;
}

+ (id)compareItem:(id)arg1 withItem:(id)arg2 delegate:(id)arg3;
- (void)dealloc;
- (id)initWithItem:(id)arg1 withItem:(id)arg2 delegate:(id)arg3;
- (void)sendOutputToDelegate:(id)arg1 itemOne:(id)arg2 itemTwo:(id)arg3;
- (BOOL)compareItem:(id)arg1 withItem:(id)arg2;
- (void)recursiveCompare:(id)arg1 withItem:(id)arg2;

@end

@interface NTServerRecentsPopUpButton : NSSegmentedControl
{
}

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)buildButtonImage;
- (id)arrowImage;

@end

@interface NTAddDeleteSegmentedControl : NSSegmentedControl
{
}

- (void)dealloc;
- (void)enableSubtractButton:(BOOL)arg1;
- (void)enableAddButton:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NTConnectToServerController : NTWindowController <NSTextFieldDelegate>
{
    BOOL _runningAsSheet;
    BOOL _isAddressEmpty;
    BOOL _isSelectionEmpty;
    int _serverType;
    NSTextField *_addressTextField;
    NSTableView *_serversTableView;
    NSObjectController *_objectController;
    NSArrayController *_arrayController;
    NSWindow *_parentWindow;
    NSArray *_servers;
    NSArray *_sharedServers;
    NSArray *_remoteServers;
    NTSharedFileListItem *_sharedItem;
    long long _sharedType;
}

+ (void)connectToServer:(id)arg1;
@property(nonatomic) BOOL isSelectionEmpty; // @synthesize isSelectionEmpty=_isSelectionEmpty;
@property(nonatomic) BOOL isAddressEmpty; // @synthesize isAddressEmpty=_isAddressEmpty;
@property(nonatomic) int serverType; // @synthesize serverType=_serverType;
@property(nonatomic) long long sharedType; // @synthesize sharedType=_sharedType;
@property(retain, nonatomic) NTSharedFileListItem *sharedItem; // @synthesize sharedItem=_sharedItem;
@property(retain, nonatomic) NSArray *remoteServers; // @synthesize remoteServers=_remoteServers;
@property(retain, nonatomic) NSArray *sharedServers; // @synthesize sharedServers=_sharedServers;
@property(nonatomic) NSArray *servers; // @synthesize servers=_servers;
@property(nonatomic) BOOL runningAsSheet; // @synthesize runningAsSheet=_runningAsSheet;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(retain, nonatomic) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(retain, nonatomic) NSObjectController *objectController; // @synthesize objectController=_objectController;
@property(retain, nonatomic) NSTableView *serversTableView; // @synthesize serversTableView=_serversTableView;
@property(retain, nonatomic) NSTextField *addressTextField; // @synthesize addressTextField=_addressTextField;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)addURLAction:(id)arg1;
- (void)recentsPopUpAction:(id)arg1;
- (void)removeButtonAction:(id)arg1;
- (void)connectButtonAction:(id)arg1;
- (void)cancelButtonAction:(id)arg1;
- (void)windowDidLoad;
- (id)initWithParentWindow:(id)arg1;
- (void)dealloc;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)resolveURLAsync:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)finish:(long long)arg1;
- (void)update:(id)arg1 type:(long long)arg2;
- (void)mountURL;
- (void)run;
- (void)sharedServersListModified:(id)arg1;
- (void)remoteServersListModified:(id)arg1;

@end

@interface NTDisplayURL : NSURL
{
    NSString *_displayName;
    NTFileDesc *_desc;
    NSImage *_iconImage;
}

+ (id)urlWithDesc:(id)arg1;
- (id)iconImage;
- (id)displayName;
- (id)desc;
- (void)dealloc;
- (id)initWithString:(id)arg1 desc:(id)arg2;
- (void)setDisplayName:(id)arg1;

@end

@interface NTChooseManPagePanel : NSWindowController
{
    id applicationTable;
    id textField;
    id pathText;
    id nameText;
    id applicationCountText;
    NSString *_textString;
    NSArray *mManPagesArray;
    NSMutableArray *_matchingArray;
    BOOL _runningAsSheet;
    BOOL mBuildingManPageList;
}

+ (void)chooseManPage:(id)arg1;
- (void)launchApplicationAction:(id)arg1;
- (void)closeButtonAction:(id)arg1;
- (void)windowDidLoad;
- (void)windowWillLoad;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)buildManPagesArray;
- (void)setBuildingManPageList:(BOOL)arg1;
- (BOOL)buildingManPageList;
- (void)createManPageAtPath:(id)arg1;
- (void)update;
- (void)controlTextDidChange:(id)arg1;
- (void)rebuildMatchingArray;
- (id)matchingArray;
- (void)setManPagesArray:(id)arg1;
- (id)manPagesArray;
- (id)selectedApplication;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)run:(id)arg1;

@end

@interface NTRecentServersMgr : NSObject
{
}

+ (void)saveFavoriteServerURL:(id)arg1 name:(id)arg2;
+ (void)saveFileWithURL:(id)arg1 name:(id)arg2 folder:(id)arg3;

@end

@interface NTNetworkDirListParam : NSObject
{
    NTFileDesc *_desc;
    NSArray *_directoryList;
}

+ (id)paramWithDesc:(id)arg1;
- (id)directoryList;
- (void)setDirectoryList:(id)arg1;
- (id)desc;
- (void)dealloc;
- (id)initWithDesc:(id)arg1;

@end

@interface NSSplitViewHack : NSObject
{
}

+ (void)install;
- (double)hack_dividerThickness;
- (id)hack_dividerColor;

@end

@interface NTSharedActionHandler : NSObject
{
    id <NTSharedActionDelegateProtocol> delegate;
    NTActionToken *pasteActionToken;
    NSString *pasteboardNotificationName;
}

@property(retain) NSString *pasteboardNotificationName; // @synthesize pasteboardNotificationName;
@property id <NTSharedActionDelegateProtocol> delegate; // @synthesize delegate;
@property(retain) NTActionToken *pasteActionToken; // @synthesize pasteActionToken;
- (void)shareDropboxFolderAction:(id)arg1;
- (void)viewPreviousDropboxVersionsAction:(id)arg1;
- (void)viewOnDropboxAction:(id)arg1;
- (void)copyPublicDropboxLinkAction:(id)arg1;
- (void)shareDropboxLinkAction:(id)arg1;
- (void)addToDropStackAction:(id)arg1;
- (void)groupAction:(id)arg1;
- (void)ownerAction:(id)arg1;
- (void)hideExtensionAction:(id)arg1;
- (void)invisibleAction:(id)arg1;
- (void)lockedAction:(id)arg1;
- (void)labelAction:(id)arg1;
- (void)labelViewAction:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)touchAction:(id)arg1;
- (void)addToFavoritesAction:(id)arg1;
- (void)showInFinderAction:(id)arg1;
- (void)terminalAction:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)quickLookAction:(id)arg1;
- (void)burnAction:(id)arg1;
- (void)secureDeleteAction:(id)arg1;
- (void)deleteSheetSelector:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)selectionReportAction:(id)arg1;
- (void)disassembleReportAction:(id)arg1;
- (void)symbolTableReportAction:(id)arg1;
- (void)classDumpReportAction:(id)arg1;
- (void)emailAction:(id)arg1;
- (void)compressAndEmailAction:(id)arg1;
- (void)openWithApplicationPanelAction:(id)arg1;
- (void)alwaysOpenInApplicationAction:(id)arg1;
- (void)openInApplicationAction:(id)arg1;
- (void)openInTextEditAction:(id)arg1;
- (void)openTextDocument:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1 handled:(char *)arg2;
- (BOOL)validateMenuItem:(id)arg1 handled:(char *)arg2;
- (long long)invisibleSelectionState;
- (long long)hideExtensionSelectionState;
- (long long)lockedSelectionState;
- (id)selectedLabels;
- (BOOL)isLabelSelected:(long long *)arg1;
- (BOOL)isFileSelected:(BOOL)arg1;
- (BOOL)isVolumeWritableSelected;
- (BOOL)isDestination:(id)arg1 inPastedItems:(id)arg2 pastedDesc:(id *)arg3;
- (void)doOpenTextDocument:(BOOL)arg1;
- (id)sheetWindow;
- (void)doCopy:(BOOL)arg1;
- (void)pasteboardNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)doPaste:(BOOL)arg1;
- (id)destFolderForPaste:(BOOL)arg1;

@end

@interface NTLayoutManager : NSLayoutManager
{
    BOOL showInvisibles;
    BOOL printInvisibles;
    NSColor *inVisibleColor;
}

@property(retain, nonatomic) NSColor *inVisibleColor; // @synthesize inVisibleColor;
@property(nonatomic) BOOL printInvisibles; // @synthesize printInvisibles;
@property(nonatomic) BOOL showInvisibles; // @synthesize showInvisibles;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)showsInvisibleCharacters;
- (void)setShowsInvisibleCharacters:(BOOL)arg1;
- (id)init;
- (void)dealloc;

@end

@interface NTTabbedBrowserViewMgr : NSObject <NTTabBarDelegateProtocol, NTTabBarItemDelegateProtocol, NTCurrentBrowserMgrProtocol, NSTabViewDelegate>
{
    NSMutableDictionary *tabbedBrowserViews;
    NSTabView *tabView;
    NTBrowserOptionsModel *documentOptions;
    NTTabBarDelegateMgr *tabBarDelegateMgr;
    NTDropHandler *dropHandler;
    NSString *browserID;
    NSArray *mButtonBarItems;
    BOOL restoring;
    BOOL reorderingTabs;
}

@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler;
@property(retain, nonatomic) NSTabView *tabView; // @synthesize tabView;
@property(nonatomic) BOOL reorderingTabs; // @synthesize reorderingTabs;
@property(nonatomic) BOOL restoring; // @synthesize restoring;
@property(retain, nonatomic) NTBrowserOptionsModel *documentOptions; // @synthesize documentOptions;
@property(retain, nonatomic) NSMutableDictionary *tabbedBrowserViews; // @synthesize tabbedBrowserViews;
@property(retain, nonatomic) NTTabBarDelegateMgr *tabBarDelegateMgr; // @synthesize tabBarDelegateMgr;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
- (unsigned long long)numberOfTabs;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)selectTabAtIndex:(unsigned long long)arg1;
- (void)selectPreviousTab;
- (void)selectNextTab;
- (id)insertBrowser:(unsigned long long)arg1 tabModel:(id)arg2;
- (id)addBrowser:(id)arg1;
- (BOOL)selectBrowser:(id)arg1;
- (id)browserTabModels:(unsigned long long *)arg1;
- (id)recentRequestManager;
- (id)currentBrowser;
- (void)removeBrowser:(id)arg1;
- (id)tabIdentifiers;
- (id)addBrowser;
- (id)containingView;
- (void)dealloc;
- (id)initWithTabBarMgr:(id)arg1 documentOptions:(id)arg2 browserID:(id)arg3;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)CBMNotification:(id)arg1;
- (id)tabbItem_dragObject:(id)arg1;
- (BOOL)tabbItem_canSpringLoad:(id)arg1 onItem:(id)arg2;
- (void)tabbItem_handleDrop:(id)arg1 onItem:(id)arg2;
- (unsigned long long)tabbItem_dragOperation:(id)arg1 onItem:(id)arg2;
- (id)tabbItem_contextualMenuForItem:(id)arg1;
- (id)tabbItem_tooltipForItem:(id)arg1;
- (id)tabbItem_titleForItem:(id)arg1;
- (void)tabbItem_removedOtherItems:(id)arg1;
- (void)tabbItem_itemWasRemoved:(id)arg1;
- (BOOL)tabbItem_itemIsRemovable:(id)arg1;
- (void)tabbItem_itemWasClicked:(id)arg1;
- (BOOL)tabBar_buttonBarDrawInactive:(id)arg1;
- (void)setTabBar:(id)arg1;
- (void)tabBar_activateOnMouseDown:(id)arg1;
- (void)tabBar_doubleClickOnBar:(id)arg1;
- (void)tabBar_reorder:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)tabBar_performDrop:(id)arg1 dragObject:(id)arg2 insertIndex:(unsigned long long)arg3;
- (void)tabBar_performDrop:(id)arg1 descs:(id)arg2 insertIndex:(unsigned long long)arg3;
- (id)tabBar_itemArray:(id)arg1 selectedItem:(id *)arg2;
- (BOOL)dualBrowser;
- (void)serverRequestUpdatedNotification:(id)arg1;
- (void)setButtonBarItems:(id)arg1;
- (id)buttonBarItems;
- (id)directoryForItem:(id)arg1;
- (void)updateForSelectedTab;
- (void)restoreFromTabModels:(id)arg1 selectIndex:(long long)arg2;
- (id)currentTabbedBrowserView;
- (void)openInTabAction:(id)arg1;
- (void)openInNewWindowAction:(id)arg1;
- (void)showInFinderAction:(id)arg1;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)showGetInfoPanelAction:(id)arg1;
- (void)terminalAction:(id)arg1;

@end

@interface NTTabbedBrowserView : NTView
{
    BOOL viewsHaveBeenBuilt;
    Browser *browser;
    NSString *browserID;
    NTBrowserTabSpec *tabSpec;
    id browserViewIdentifier;
    NTRecentListRequestManager *recentRequestManager;
}

+ (id)view:(struct CGRect)arg1 tabSpec:(id)arg2 browserID:(id)arg3;
@property(retain, nonatomic) NTRecentListRequestManager *recentRequestManager; // @synthesize recentRequestManager;
@property(nonatomic) BOOL viewsHaveBeenBuilt; // @synthesize viewsHaveBeenBuilt;
@property(retain, nonatomic) id browserViewIdentifier; // @synthesize browserViewIdentifier;
@property(retain, nonatomic) NTBrowserTabSpec *tabSpec; // @synthesize tabSpec;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
@property(retain, nonatomic) Browser *browser; // @synthesize browser;
- (void)verifyRequest;
- (id)browserTabSpec;
- (id)serverRequest;
- (void)setServerRequest:(id)arg1;
- (int)browserStyle;
- (void)dealloc;
- (void)setViewsUsingTabState;
- (BOOL)isOpaque;
- (void)initializeBrowser;
- (void)setServerRequest:(id)arg1 params:(id)arg2;
- (void)fileSystemNotificationMgrNotification:(id)arg1;
- (void)verifyRequestAsync_result:(id)arg1;
- (id)verifyRequestAsync_thread:(id)arg1;
- (void)verifyRequestAsync:(id)arg1 isCurrentRequest:(BOOL)arg2;

@end

@interface NTBrowserWindow : NTUserWindow
{
    NTDragDropWindowActivator *activator;
    NTMetalWindowTheme *windowTheme;
}

+ (id)window;
@property(retain, nonatomic) NTMetalWindowTheme *windowTheme; // @synthesize windowTheme;
@property(retain, nonatomic) NTDragDropWindowActivator *activator; // @synthesize activator;
- (void)swipeWithEvent:(id)arg1;
- (BOOL)isThemeInstalled_Imp;
- (void)dealloc;
- (id)_findDragTargetFrom:(id)arg1;
- (void)colorStoreUpdatedNotification:(id)arg1;
- (void)preferencesModified:(id)arg1;
- (void)syncWithPreference;

@end

@interface NTBookmarksBarDelegate : NSObject <NTBookmarksBarDelegateProtocol>
{
    NTBookmarksBar *bookmarksBar;
    NSMutableArray *bookmarks;
    NTDropHandler *dropHandler;
}

@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler;
@property(retain, nonatomic) NSMutableArray *bookmarks; // @synthesize bookmarks;
@property(retain, nonatomic) NTBookmarksBar *bookmarksBar; // @synthesize bookmarksBar;
- (id)bookmarksBar_itemsForDragInfo:(id)arg1;
- (void)bookmarksBar_removeItem:(id)arg1;
- (BOOL)bookmarksBar_validateSpringLoad:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (unsigned long long)bookmarksBar_validateDrop:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (void)bookmarksBar_droppedOn:(id)arg1 info:(id)arg2 onItem:(id)arg3;
- (void)bookmarksBar_droppedOnBar:(id)arg1 insertIndex:(long long)arg2;
- (id)bookmarksBar_items:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)bookmarksNeedRefreshNotification:(id)arg1;
- (void)bookmarksBarAction:(id)arg1;
- (id)bookmarksBarItemWithAlias:(id)arg1;
- (void)saveToPrefs;

@end

@interface NTPathBarDelegate : NSObject <NTCurrentBrowserMgrProtocol, NTMessageProxyProtocol, NTFSWatcherDelegate, NTButtonBarItemDelegate, NTButtonBarDelegate, NTPathBarDelegate>
{
    BOOL _sentDelayedRefreshMessage;
    NSArray *_pathBarItems;
    NTFileServerRequest *_serverRequest;
    NSString *_browserID;
    unsigned long long _selectedIndex;
    NSArray *_pathBarComponents;
    NTDropHandler *_dropHandler;
    NTPathBar *_pathBar;
    NTPathBarThread *_pathBarThread;
    NTMessageProxy *_selfProxy;
    NTFSWatcherDelegateProxy *_watcherProxy;
    NTFSWatcher *_watcher;
    NSString *_filteredPath;
    NSArray *_filteredDirContents;
    unsigned long long _filterOptions;
}

@property(nonatomic) unsigned long long filterOptions; // @synthesize filterOptions=_filterOptions;
@property(retain, nonatomic) NSArray *filteredDirContents; // @synthesize filteredDirContents=_filteredDirContents;
@property(retain, nonatomic) NSString *filteredPath; // @synthesize filteredPath=_filteredPath;
@property(retain) NTFSWatcher *watcher; // @synthesize watcher=_watcher;
@property(retain) NTFSWatcherDelegateProxy *watcherProxy; // @synthesize watcherProxy=_watcherProxy;
@property(retain) NTMessageProxy *selfProxy; // @synthesize selfProxy=_selfProxy;
@property(retain) NTPathBarThread *pathBarThread; // @synthesize pathBarThread=_pathBarThread;
@property NTPathBar *pathBar; // @synthesize pathBar=_pathBar;
@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler=_dropHandler;
@property(retain, nonatomic) NSArray *pathBarComponents; // @synthesize pathBarComponents=_pathBarComponents;
@property(nonatomic) BOOL sentDelayedRefreshMessage; // @synthesize sentDelayedRefreshMessage=_sentDelayedRefreshMessage;
@property(nonatomic) unsigned long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
@property(retain, nonatomic) NTFileServerRequest *serverRequest; // @synthesize serverRequest=_serverRequest;
@property(retain, nonatomic) NSArray *pathBarItems; // @synthesize pathBarItems=_pathBarItems;
- (void)setButtonBar:(id)arg1;
- (id)buttonItemContextualMenu:(id)arg1;
- (BOOL)buttonItemIsRemovable:(id)arg1;
- (void)buttonItemWasRemoved:(id)arg1;
- (BOOL)buttonItemCanSpringLoad:(id)arg1 onItem:(id)arg2;
- (void)buttonItemHandleDrop:(id)arg1 onItem:(id)arg2;
- (unsigned long long)buttonItemDragOperation:(id)arg1 onItem:(id)arg2;
- (void)buttonItemWasClicked:(id)arg1;
- (BOOL)buttonBarDrawInactive:(id)arg1;
- (void)buttonBar:(id)arg1 message:(id)arg2;
- (void)buttonBarActivateOnMouseDown:(id)arg1;
- (id)buttonBar:(id)arg1 itemsForDragInfo:(id)arg2;
- (void)buttonBarDoubleClick:(id)arg1;
- (void)buttonBarReorderIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)buttonBarPerformDrop:(id)arg1 descs:(id)arg2 insertIndex:(unsigned long long)arg3;
- (BOOL)buttonBarSupportsDrop:(id)arg1;
- (id)buttonBarItemArray:(id)arg1 selectedItem:(id *)arg2;
- (id)pathBar_completedPathsForPath:(id)arg1;
- (BOOL)pathBar_revealPath:(id)arg1;
- (void)dealloc;
- (id)initWithBrowserID:(id)arg1;
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;
- (void)refreshAfterDelay:(id)arg1;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (void)CBMNotification:(id)arg1;
- (BOOL)dualBrowser;
- (id)currentBrowser;
- (void)updatePathBarItems:(id)arg1;
- (id)currentDirectory;
- (void)rebuildComponents;
- (id)getItemAfterItem:(id)arg1;
- (void)updateServerRequest;
- (id)browser;
- (void)openInTabAction:(id)arg1;
- (void)openInNewWindowAction:(id)arg1;
- (void)showInFinderAction:(id)arg1;
- (void)copyNameAction:(id)arg1;
- (void)copyURLPathAction:(id)arg1;
- (void)copyWindowsPathAction:(id)arg1;
- (void)copyHFSPathAction:(id)arg1;
- (void)copyUnixPathAction:(id)arg1;
- (void)copyTerminalPathAction:(id)arg1;
- (void)showGetInfoPanelAction:(id)arg1;
- (void)terminalAction:(id)arg1;

@end

@interface NTCurrentBrowserMgr : NSObject
{
    Browser *_cachedBrowser;
    NSWindow *_window;
    NSMutableDictionary *_browserEvents;
}

+ (void)removeObserver:(id)arg1;
+ (void)addObserver:(id)arg1;
+ (id)CBM:(id)arg1;
+ (id)browserMgr:(id)arg1;
@property(retain) NSMutableDictionary *browserEvents; // @synthesize browserEvents=_browserEvents;
@property(retain) NSWindow *window; // @synthesize window=_window;
@property(retain) Browser *cachedBrowser; // @synthesize cachedBrowser=_cachedBrowser;
- (void)browserEvent:(int)arg1 browserID:(id)arg2;
- (id)browserWithID:(id)arg1;
- (id)browser;
- (void)dealloc;
- (void)firstResponderDidChangeNotification:(id)arg1;
- (void)sendBrowserEvent:(id)arg1 browserID:(id)arg2;
- (void)delayedBrowserEvent;
- (void)browserEvent:(int)arg1 browserID:(id)arg2 delayed:(BOOL)arg3;

@end

@interface NTTrashMenuMgr : NTSingletonObject
{
    NTMenu *_ntMenu;
    unsigned long long menuBuildID;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(nonatomic) unsigned long long menuBuildID; // @synthesize menuBuildID;
- (void)trashStatusUpdated:(id)arg1;
- (id)ntMenu;
- (void)menu:(BOOL)arg1 includeSettings:(BOOL)arg2 destinationMenu:(id)arg3;
- (id)menu:(BOOL)arg1 includeSettings:(BOOL)arg2;
- (id)trashSizeMenu;
- (void)dealloc;
- (id)init;
- (id)sizeItem:(unsigned long long)arg1;

@end

@interface NTMenuBarTrashMenu : NSObject <NSMenuDelegate>
{
    NSMenu *trashMenu;
    unsigned long long menuBuildID;
}

+ (void)install;
@property(nonatomic) unsigned long long menuBuildID; // @synthesize menuBuildID;
@property(retain, nonatomic) NSMenu *trashMenu; // @synthesize trashMenu;
- (void)dealloc;
- (id)init;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTPathFinderStatusItemMenuMgr : NSObject
{
    NSStatusItem *statusItem;
}

@property(retain) NSStatusItem *statusItem; // @synthesize statusItem;
- (void)removeStatusMenu;
- (void)showStatusMenu:(id)arg1;
- (BOOL)isVisible;
- (void)dealloc;
- (id)createSmallPathFinderIcon:(unsigned long long)arg1;
- (id)createSmallPathFinderIcon;
- (id)bodyImage:(unsigned long long)arg1;

@end

@interface NTBookmarksBarItemMgr : NTSingletonObject <NTFSWatcherDelegate>
{
    NSArray *items;
    NTFSWatcher *watcher;
    NTFSWatcherDelegateProxy *watcherProxy;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NTFSWatcherDelegateProxy *watcherProxy; // @synthesize watcherProxy;
@property(retain) NTFSWatcher *watcher; // @synthesize watcher;
@property(retain, nonatomic) NSArray *items; // @synthesize items;
- (void)setBookmarksBarItems:(id)arg1;
- (id)bookmarksBarItems;
- (id)init;
- (void)dealloc;
- (id)defaultBookmarksBarItems;
- (void)updateItems:(id)arg1;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;

@end

@interface NTSelectionPanelController : NSWindowController <NSMenuDelegate>
{
    NSWindow *_parentWindow;
    BOOL _runningAsSheet;
    NTBrowserViewController *_viewController;
    NTSelectionPanelModel *selectionModel;
    NSPopUpButton *typePopUpButton;
    NSPopUpButton *creatorPopUpButton;
    NSPopUpButton *extensionPopUpButton;
    NSFormCell *typeFormCell;
    NSFormCell *creatorFormCell;
    NSMenu *_creatorMenu;
    NSMenu *_typeMenu;
    NSMenu *_extensionMenu;
}

+ (void)selectionPanel:(id)arg1 browserViewController:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)run;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithParentWindow:(id)arg1 browserViewController:(id)arg2;
- (void)extensionPopUpButtonAction:(id)arg1;
- (void)creatorPopUpButtonAction:(id)arg1;
- (void)typePopUpButtonAction:(id)arg1;
- (void)closeAction:(id)arg1;
- (void)selectAction:(id)arg1;
- (void)deselectAllAction:(id)arg1;
- (void)selectAndCloseAction:(id)arg1;
- (void)selectByTypeCreator;
- (void)selectByKind;
- (void)selectByDate;
- (void)selectByExtension;
- (void)selectByName;
- (void)endPanel:(long long)arg1;
- (void)doSelect;
- (void)updateNumberOfItemsSelected;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)selectByKind_result:(id)arg1;
- (id)selectByKind_worker:(id)arg1;

@end

@interface NTSelectionPanelModel : NSObject <NSCoding>
{
    NSString *_numberOfSelectedItems;
    BOOL _saveToPreferences;
    BOOL _extendSelection;
    NSString *_nameContains;
    NSString *_nameEndsWith;
    NSString *_nameStartsWith;
    BOOL _nameIgnoreCase;
    unsigned long long _selectedTabIndex;
    NSString *_extensionText;
    BOOL _extensionIgnoreCase;
    NSString *_typeTypeText;
    NSString *_typeCreatorText;
    NSArray *selectedLabels;
    NSArray *labels;
    BOOL _kindPDFs;
    BOOL _kindMovies;
    BOOL _kindAudio;
    BOOL _kindImages;
    BOOL _kindAliases;
    BOOL _kindSymbolicLinks;
    BOOL _kindApplications;
    BOOL _kindFiles;
    BOOL _kindFolders;
    BOOL _kindPackages;
    BOOL _kindRTFs;
    BOOL _kindText;
    BOOL mModificationDateEnabled;
    BOOL mCreationDateEnabled;
    NSArray *mDateMenu;
    int mModifiedMenuIndex;
    int mCreatedMenuIndex;
}

+ (id)restoreFromPreferences;
@property(retain, nonatomic) NSArray *labels; // @synthesize labels;
@property(retain, nonatomic) NSArray *selectedLabels; // @synthesize selectedLabels;
- (void)setCreatedMenuIndex:(int)arg1;
- (int)createdMenuIndex;
- (void)setModifiedMenuIndex:(int)arg1;
- (int)modifiedMenuIndex;
- (void)setDateMenu:(id)arg1;
- (id)dateMenu;
- (void)setCreationDateEnabled:(BOOL)arg1;
- (BOOL)creationDateEnabled;
- (void)setModificationDateEnabled:(BOOL)arg1;
- (BOOL)modificationDateEnabled;
- (id)dateForMenuIndex:(int)arg1;
- (void)setKindText:(BOOL)arg1;
- (BOOL)kindText;
- (void)setKindRTFs:(BOOL)arg1;
- (BOOL)kindRTFs;
- (void)setKindPackages:(BOOL)arg1;
- (BOOL)kindPackages;
- (void)setKindFolders:(BOOL)arg1;
- (BOOL)kindFolders;
- (void)setKindFiles:(BOOL)arg1;
- (BOOL)kindFiles;
- (void)setKindApplications:(BOOL)arg1;
- (BOOL)kindApplications;
- (void)setKindSymbolicLinks:(BOOL)arg1;
- (BOOL)kindSymbolicLinks;
- (void)setKindAliases:(BOOL)arg1;
- (BOOL)kindAliases;
- (void)setKindImages:(BOOL)arg1;
- (BOOL)kindImages;
- (void)setKindAudio:(BOOL)arg1;
- (BOOL)kindAudio;
- (void)setKindMovies:(BOOL)arg1;
- (BOOL)kindMovies;
- (void)setKindPDFs:(BOOL)arg1;
- (BOOL)kindPDFs;
- (void)setTypeCreatorText:(id)arg1;
- (id)typeCreatorText;
- (void)setTypeTypeText:(id)arg1;
- (id)typeTypeText;
- (void)setExtensionIgnoreCase:(BOOL)arg1;
- (BOOL)extensionIgnoreCase;
- (void)setExtensionText:(id)arg1;
- (id)extensionText;
- (void)setSelectedTabIndex:(unsigned long long)arg1;
- (unsigned long long)selectedTabIndex;
- (void)setNumberOfSelectedItems:(id)arg1;
- (id)numberOfSelectedItems;
- (void)setNameIgnoreCase:(BOOL)arg1;
- (BOOL)nameIgnoreCase;
- (void)setNameStartsWith:(id)arg1;
- (id)nameStartsWith;
- (void)setNameEndsWith:(id)arg1;
- (id)nameEndsWith;
- (void)setNameContains:(id)arg1;
- (id)nameContains;
- (void)setExtendSelection:(BOOL)arg1;
- (BOOL)extendSelection;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)saveToPreferences;

@end

@interface NTBVOBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NTBrowserViewOptionsInspector : NTWindowController <NSWindowDelegate, NSTabViewDelegate>
{
    BOOL _useDefaultOptions;
    NSArray *_arrangeByMenuContents;
    NSArray *_sortByMenuContents;
    BOOL _updatingSetUseDefaultOptions;
    BOOL _enableUseDefaultOptions;
    id _objectController;
    id _currentOptionsController;
    id _iconOptionsController;
    id _listOptionsController;
    id _columnOptionsController;
    id _desktopOptionsController;
    NTFontButton *_fontButton;
    NTCommonViewOptionsModel *_currentOptions;
    NTCommonViewOptionsModel *_iconOptions;
    NTCommonViewOptionsModel *_listOptions;
    NTCommonViewOptionsModel *_columnOptions;
    NTSetBackgroundWindowController *_backgroundSheet;
    NTWindowSaveHelper *_windowSaveHelper;
}

@property(nonatomic) BOOL enableUseDefaultOptions; // @synthesize enableUseDefaultOptions=_enableUseDefaultOptions;
@property(nonatomic) BOOL updatingSetUseDefaultOptions; // @synthesize updatingSetUseDefaultOptions=_updatingSetUseDefaultOptions;
@property(retain, nonatomic) NTWindowSaveHelper *windowSaveHelper; // @synthesize windowSaveHelper=_windowSaveHelper;
@property(retain, nonatomic) NTSetBackgroundWindowController *backgroundSheet; // @synthesize backgroundSheet=_backgroundSheet;
@property(retain, nonatomic) NTCommonViewOptionsModel *columnOptions; // @synthesize columnOptions=_columnOptions;
@property(retain, nonatomic) NTCommonViewOptionsModel *listOptions; // @synthesize listOptions=_listOptions;
@property(retain, nonatomic) NTCommonViewOptionsModel *iconOptions; // @synthesize iconOptions=_iconOptions;
@property(retain, nonatomic) NTCommonViewOptionsModel *currentOptions; // @synthesize currentOptions=_currentOptions;
@property(retain, nonatomic) NTFontButton *fontButton; // @synthesize fontButton=_fontButton;
@property(retain, nonatomic) id desktopOptionsController; // @synthesize desktopOptionsController=_desktopOptionsController;
@property(retain, nonatomic) id columnOptionsController; // @synthesize columnOptionsController=_columnOptionsController;
@property(retain, nonatomic) id listOptionsController; // @synthesize listOptionsController=_listOptionsController;
@property(retain, nonatomic) id iconOptionsController; // @synthesize iconOptionsController=_iconOptionsController;
@property(retain, nonatomic) id currentOptionsController; // @synthesize currentOptionsController=_currentOptionsController;
@property(retain, nonatomic) id objectController; // @synthesize objectController=_objectController;
- (void)fontButton:(id)arg1 didChangeToFont:(id)arg2;
- (void)restoreDefaults:(id)arg1;
- (void)setColorsButtonAction:(id)arg1;
- (void)fontButtonAction:(id)arg1;
- (void)windowDidLoad;
- (id)init;
- (void)dealloc;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (void)setSortByMenuContents:(id)arg1;
- (id)sortByMenuContents;
- (void)setArrangeByMenuContents:(id)arg1;
- (id)arrangeByMenuContents;
- (void)setUseDefaultOptions:(BOOL)arg1;
- (BOOL)useDefaultOptions;
- (void)resizeWindowToFitCurrentTabViewItem:(id)arg1;
- (void)updateCurrentOptions;
- (void)updateUseDefaultOptionsDirectorySetting;
- (id)getBrowser:(id *)arg1 viewOptions:(id *)arg2 directoryID:(id *)arg3 browserID:(id *)arg4;
- (void)setUseDefaultOptions_Internal:(BOOL)arg1;
- (void)setupForInitialTabState;
- (void)registerCustomImages;
- (void)backgroundSheetDidEnd:(id)arg1;
- (void)browserStateChanged:(id)arg1;
- (void)browserStyleChanged:(id)arg1;
- (void)keyWindowChanged:(id)arg1;

@end

@interface NTIconViewItemImager : NSObject
{
    BOOL _drawsShadow;
    BOOL _drawsTitle;
    BOOL _drawsIcon;
    BOOL _drawsItemInfo;
    int _labelPosition;
    unsigned long long _iconSize;
    double _textWidthFraction;
    NSColor *_itemInfoColor;
    NSFont *_itemInfoFont;
    NTAttributesDictionary *_attrDictionary;
    long long _infoLineHeight;
    unsigned long long _titleLineHeight;
}

+ (id)imager;
@property(nonatomic) unsigned long long titleLineHeight; // @synthesize titleLineHeight=_titleLineHeight;
@property(nonatomic) long long infoLineHeight; // @synthesize infoLineHeight=_infoLineHeight;
@property(retain, nonatomic) NTAttributesDictionary *attrDictionary; // @synthesize attrDictionary=_attrDictionary;
@property(retain, nonatomic) NSFont *itemInfoFont; // @synthesize itemInfoFont=_itemInfoFont;
@property(retain, nonatomic) NSColor *itemInfoColor; // @synthesize itemInfoColor=_itemInfoColor;
@property(nonatomic) int labelPosition; // @synthesize labelPosition=_labelPosition;
@property(nonatomic) BOOL drawsItemInfo; // @synthesize drawsItemInfo=_drawsItemInfo;
@property(nonatomic) double textWidthFraction; // @synthesize textWidthFraction=_textWidthFraction;
@property(nonatomic) unsigned long long iconSize; // @synthesize iconSize=_iconSize;
@property(nonatomic) BOOL drawsIcon; // @synthesize drawsIcon=_drawsIcon;
@property(nonatomic) BOOL drawsTitle; // @synthesize drawsTitle=_drawsTitle;
@property(nonatomic) BOOL drawsShadow; // @synthesize drawsShadow=_drawsShadow;
- (void)rectsForRect:(struct CGRect)arg1 outTitleRect:(struct CGRect *)arg2 outInfoRect:(struct CGRect *)arg3 outIconRect:(struct CGRect *)arg4 flipped:(BOOL)arg5;
- (void)rectsForItem:(id)arg1 inRect:(struct CGRect)arg2 select:(BOOL)arg3 iconRect:(struct CGRect *)arg4 titleRect:(struct CGRect *)arg5 infoRect:(struct CGRect *)arg6 flipped:(BOOL)arg7;
- (BOOL)doesPoint:(struct CGPoint)arg1 intersectIcon:(struct CGRect)arg2 item:(id)arg3 inView:(id)arg4;
- (BOOL)doesRect:(struct CGRect)arg1 intersectIcon:(struct CGRect)arg2 item:(id)arg3 inView:(id)arg4;
- (void)drawItem:(id)arg1 inRect:(struct CGRect)arg2 select:(BOOL)arg3 dragging:(BOOL)arg4 inView:(id)arg5;
- (struct CGSize)itemSize;
- (void)updateTitleHeightForFont:(id)arg1;
- (void)dealloc;
- (long long)extraIconWidth;
- (struct CGRect)textRects:(struct CGRect *)arg1 outInfoRect:(struct CGRect *)arg2 flipped:(BOOL)arg3;
- (long long)iconSelectionBorder;
- (long long)numberOfLinesToDraw;
- (struct CGRect)iconDrawRect:(struct CGRect)arg1;
- (struct CGRect)zeroIconRect;
- (unsigned long long)alignment;
- (id)itemInfoTextImager:(id)arg1;
- (id)itemNameTextImager:(id)arg1 drawLines:(long long)arg2 shadow:(BOOL)arg3 dragging:(BOOL)arg4;
- (long long)roundRectRadius;

@end

@interface NTBrowserSplitView : NTBoxView
{
    BOOL _hasSetupSplitView;
    NTBrowserOptionsModel *_documentOptions;
    NTMainSplitView *_mainSplitView;
    NTSplitViewDelegate *_splitViewDelegate;
    NSView *_leftView;
    NTBrowserRightContainerView *_rightView;
}

@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NTBrowserRightContainerView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) NSView *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NTMainSplitView *mainSplitView; // @synthesize mainSplitView=_mainSplitView;
@property(retain, nonatomic) NTBrowserOptionsModel *documentOptions; // @synthesize documentOptions=_documentOptions;
- (void)installView:(id)arg1 documentOptions:(id)arg2;
- (void)dealloc;
- (void)viewWillDraw;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)leftShelfIsVisible:(id)arg1;
- (void)showLeftShelf:(id)arg1;
- (void)createViews;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (void)splitViewCollapseStateChanged:(id)arg1;

@end

@interface NTHistoryModule : NTSubmodule
{
    NTHistoryView *mHistoryView;
}

+ (id)module:(id)arg1 modulePrefsKey:(id)arg2 showFolders:(BOOL)arg3;
- (void)dealloc;
- (void)headerPopUpMenuAction:(id)arg1;
- (void)defaultColorsChanged:(id)arg1;
- (void)frameDidChange;
- (void)setup;
- (void)createSubviews:(BOOL)arg1;
- (id)menu;
- (void)setHistoryView:(id)arg1;
- (id)historyView;

@end

@interface NTHistoryView : NSView
{
    NTGrid *grid;
    NSScrollView *scrollView;
    NTHistoryDataSet *dataSet;
}

@property(retain, nonatomic) NTHistoryDataSet *dataSet; // @synthesize dataSet;
@property(retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) NTGrid *grid; // @synthesize grid;
- (BOOL)isOpaque;
- (BOOL)showFolders;
- (id)initWithFrame:(struct CGRect)arg1 showFolders:(BOOL)arg2;
- (void)dealloc;
- (void)setup;
- (void)historyGridDataSetNotification:(id)arg1;

@end

@interface NTBrowserToolbarItemCache : NTSingletonObject
{
    NSMutableDictionary *mItems;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (id)allKeys;
- (id)itemForIdentifier:(id)arg1 toolbar:(id)arg2 target:(id)arg3;
- (void)dealloc;
- (id)init;
- (void)addFolderItems;
- (void)addSearchTextField;
- (void)addSimpleButton:(id)arg1 label:(id)arg2 action:(SEL)arg3;
- (void)addBrowserViewItem;
- (void)addDropStackToolbarButton;
- (void)addProgressToolbarButton;
- (void)addViewsToggleButton;
- (void)addShelfsToggleButton;
- (void)addPopUpButton:(id)arg1 label:(id)arg2 action:(SEL)arg3 menu:(id)arg4;
- (void)addBackButtonItem;
- (void)addToolbarItem:(id)arg1;
- (void)setItems:(id)arg1;
- (id)items;

@end

@interface NTBrowserSearchField : NTSearchField <NSTextFieldDelegate>
{
    int mv_mode;
}

+ (void)notifySearchFieldToSync:(int)arg1 string:(id)arg2 window:(id)arg3;
+ (id)searchField;
- (void)setMode:(int)arg1;
- (int)mode;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (void)updateStateNotification:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)searchFieldMenuItemAction:(id)arg1;
- (id)searchFieldMenu;
- (void)syncPlaceholderString;
- (void)syncBehavior;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;

@end

@interface NTTopGradientBox : NSBox
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NTVolumeInfoDump : NSObject
{
}

+ (id)dumpVolumeInfo:(id)arg1;

@end

@interface NTIconViewDataMgr : NTListIconBaseViewDataMgr
{
    NSArray *_groups;
    NSArray *_fileServerItems_storage;
    NSArray *_iconViewItems_storage;
}

+ (id)dataMgr:(id)arg1;
@property(retain, nonatomic) NSArray *iconViewItems_storage; // @synthesize iconViewItems_storage=_iconViewItems_storage;
@property(retain, nonatomic) NSArray *fileServerItems_storage; // @synthesize fileServerItems_storage=_fileServerItems_storage;
@property(retain, nonatomic) NSArray *groups; // @synthesize groups=_groups;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (unsigned long long)indexOfItem:(id)arg1;
- (id)iconViewItems;
- (id)fileServerItems;
- (void)dealloc;

@end

@interface NTBaseViewDataMgr : NSObject <NTFileServerDelegateProtocol>
{
    id <NTBaseViewDataMgrDelegateProtocol> delegate;
    NTFileServer *fileServer_storage;
    NTFileServerRequest *mv_displayedServerRequest;
    BOOL busy;
    BOOL sentDelayedBusyNotification;
}

+ (id)dataMgr:(id)arg1;
@property(nonatomic) BOOL sentDelayedBusyNotification; // @synthesize sentDelayedBusyNotification;
@property(nonatomic) BOOL busy; // @synthesize busy;
@property(retain, nonatomic) NTFileServer *fileServer_storage; // @synthesize fileServer_storage;
@property id <NTBaseViewDataMgrDelegateProtocol> delegate; // @synthesize delegate;
- (void)setServerItemFilter:(id)arg1;
- (void)setItemFilter:(id)arg1;
- (id)itemFilter;
- (void)setDisplayName:(id)arg1 forItem:(id)arg2;
- (void)setDisableUpdates:(BOOL)arg1;
- (BOOL)disableUpdates;
- (void)dataMgr_Error;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)stop;
- (void)setServerSettings:(id)arg1;
- (BOOL)hasServerRequest:(id)arg1;
- (id)serverSettings;
- (id)listForRequest:(id)arg1;
- (void)selectItemsOnReload:(id)arg1;
- (void)reloadRequest:(id)arg1;
- (id)displayedServerRequest;
- (void)displayServerRequest:(id)arg1 params:(id)arg2;
- (void)clearDelegate;
- (id)fileServer;
- (void)dealloc;
- (void)fileServer_Error;
- (void)fileServer_isBusy:(BOOL)arg1;
- (void)fileServer_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)fileServer_didUpdateRequest:(id)arg1 savedState:(id)arg2;
- (id)fileServer_willUpdateRequest:(id)arg1;
- (BOOL)fileServer_shouldUpdate;
- (void)delayedSimulatedListUpdate:(id)arg1;
- (void)sendBusyNotificationAfterDelay;
- (void)setDisplayedServerRequest:(id)arg1;

@end

@interface NTViewOptions : NTSingletonObject
{
}

+ (void)initialize;
+ (id *)staticStorageVariable;
- (int)browserStyleForController:(id)arg1;
- (id)viewOptionsWithController:(id)arg1;

@end

@interface NTOpenWithLazyMenu : NTSelectionLazyMenu
{
    NSNumber *threadID;
}

@property(retain, nonatomic) NSNumber *threadID; // @synthesize threadID;
- (void)rebuildMenu;
- (void)dealloc;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)buildOpenWithAsync:(id)arg1;
- (void)checkDefaultApplication:(id)arg1;
- (void)initializeMenu;
- (id)openWithTextEditorString;

@end

@interface NTRunningApplicationsLazyMenu : NTLazyMenu <NSCopying>
{
}

- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NTDesktopManager : NTSingletonObject
{
    NSArray *_windowControllers;
    NTRectArray *_screenRects;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NTRectArray *screenRects; // @synthesize screenRects=_screenRects;
@property(retain, nonatomic) NSArray *windowControllers; // @synthesize windowControllers=_windowControllers;
- (void)removeDesktopWithFinderRestart:(BOOL)arg1;
- (BOOL)isDesktopInstalled;
- (id)init;
- (void)dealloc;
- (id)currentScreenRects;
- (void)installDesktopWithFinderRestart:(BOOL)arg1;
- (void)itemsFilterChanged:(id)arg1;
- (void)screensChanged:(id)arg1;
- (void)viewOptionsChanged:(id)arg1;

@end

@interface NTSegmentedCell : NSSegmentedCell
{
}

+ (unsigned long long)segmentWidthAdjustment;
+ (unsigned long long)segmentedCellSegmentWidth;
+ (unsigned long long)segmentedCellButtonWidth;
+ (unsigned long long)segmentedCellButtonHeight;
- (id)font;
- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;

@end

@interface NTFindSegmentedControl : NSSegmentedControl <NSCoding>
{
}

+ (Class)cellClass;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)findImage:(BOOL)arg1;

@end

@interface NTFileMenuDelegate : NSObject <NSMenuDelegate>
{
    NSMenuItem *closeMenuItem;
    NSMenuItem *closeAllMenuItem;
    NSMenuItem *closeTabMenuItem;
    NSMenuItem *closeOtherTabsMenuItem;
}

+ (void)install;
@property(retain, nonatomic) NSMenuItem *closeOtherTabsMenuItem; // @synthesize closeOtherTabsMenuItem;
@property(retain, nonatomic) NSMenuItem *closeTabMenuItem; // @synthesize closeTabMenuItem;
@property(retain, nonatomic) NSMenuItem *closeAllMenuItem; // @synthesize closeAllMenuItem;
@property(retain, nonatomic) NSMenuItem *closeMenuItem; // @synthesize closeMenuItem;
- (id)init;
- (void)dealloc;
- (void)menuNeedsUpdate:(id)arg1;
- (void)normalizeMenu;
- (void)setupMenu;
- (void)clearKeys;

@end

@interface NTFileBrowserDocumentOptionsMgr : NTSingletonObject
{
    BOOL restoringBrowsers;
    NSMutableArray *documentOptionModels;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(nonatomic) BOOL restoringBrowsers; // @synthesize restoringBrowsers;
@property(retain, nonatomic) NSMutableArray *documentOptionModels; // @synthesize documentOptionModels;
- (id)modelForDocument:(id)arg1;
- (void)makeDocumentWithModel:(id)arg1;
- (void)cloneDocument:(id)arg1;
- (void)saveOpenFileBrowsers;
- (id)documentOptions;
- (void)restoreOpenFileBrowsers;
- (void)dealloc;
- (void)createDocuments:(BOOL)arg1;

@end

@interface NTModule : NTBoxView <NSMenuDelegate>
{
    BOOL _installedInNonBrowserWindow;
    BOOL _showTopFrameLine;
    BOOL _menuHidden;
    BOOL _saveInProgress;
    int _location;
    NSMenu *_menu;
    NTDefaultsClient *_defaultsClient;
    NSString *_modulePrefsKey;
    NSDictionary *_pluginParams;
    NTModuleModel *_model;
    NSView *_containerView;
    NTSubmodule *_submoduleView;
    NTPopUpHeaderView *_headerControl;
}

+ (id)moduleWithModel:(id)arg1 defaultsClient:(id)arg2 modulePrefsKey:(id)arg3 location:(int)arg4 pluginParams:(id)arg5;
+ (id)moduleWithModel:(id)arg1 defaultsClient:(id)arg2 modulePrefsKey:(id)arg3 pluginParams:(id)arg4;
+ (id)moduleWithModel:(id)arg1 defaultsClient:(id)arg2;
@property(nonatomic) BOOL saveInProgress; // @synthesize saveInProgress=_saveInProgress;
@property(retain, nonatomic) NTPopUpHeaderView *headerControl; // @synthesize headerControl=_headerControl;
@property(retain, nonatomic) NTSubmodule *submoduleView; // @synthesize submoduleView=_submoduleView;
@property(retain, nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) NTModuleModel *model; // @synthesize model=_model;
@property(nonatomic) int location; // @synthesize location=_location;
@property(retain, nonatomic) NSDictionary *pluginParams; // @synthesize pluginParams=_pluginParams;
@property(retain, nonatomic) NSString *modulePrefsKey; // @synthesize modulePrefsKey=_modulePrefsKey;
@property(retain, nonatomic) NTDefaultsClient *defaultsClient; // @synthesize defaultsClient=_defaultsClient;
@property(retain, nonatomic) NSMenu *menu; // @synthesize menu=_menu;
@property(nonatomic) BOOL menuHidden; // @synthesize menuHidden=_menuHidden;
@property(nonatomic) BOOL showTopFrameLine; // @synthesize showTopFrameLine=_showTopFrameLine;
@property(nonatomic) BOOL installedInNonBrowserWindow; // @synthesize installedInNonBrowserWindow=_installedInNonBrowserWindow;
- (id)moduleMenu;
- (id)pluginID;
- (void)showModel:(id)arg1;
- (void)hideHeaderControl:(BOOL)arg1;
- (BOOL)headerControlHidden;
- (void)dealloc;
- (BOOL)isModuleModelDisabled:(id)arg1;
- (void)installSubmodule;
- (void)frameDidChange;
- (void)setup;
- (void)createSubviews;
- (void)appearanceMgrChangedNotification:(id)arg1;
- (void)firstResponderDidChangeNotification:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)menuItemForModel:(id)arg1;
- (id)shelfItemImage:(BOOL)arg1;
- (id)shelfItemBitmapRep:(BOOL)arg1 multiplier:(unsigned long long)arg2;
- (void)switchModulesMenuItemAction:(id)arg1;
- (id)removeFolderMenuItem;
- (id)addCustomizeMenuItem;
- (id)addFolderMenuItem;
- (void)newFolderSelector:(id)arg1;
- (void)customizeAction:(id)arg1;
- (void)addFolderAction:(id)arg1;
- (void)removeFolderAction:(id)arg1;
- (id)sheetWindow;
- (void)saveToPreferences;
- (void)saveToPrefsAfterDelay:(id)arg1;
- (id)readFromPrefs;

@end

@interface NTDirectoryModule : NTSubmodule
{
    NTDirectoryView *directoryView;
    NSMenu *directoryMenu;
}

+ (id)module:(id)arg1 modulePrefsKey:(id)arg2 directory:(id)arg3;
@property(retain, nonatomic) NSMenu *directoryMenu; // @synthesize directoryMenu;
@property(retain, nonatomic) NTDirectoryView *directoryView; // @synthesize directoryView;
- (void)dealloc;
- (void)defaultColorsChanged:(id)arg1;
- (void)frameDidChange;
- (void)setup;
- (id)menu;

@end

@interface NTDirectoryDataSet : NTGridDataSet
{
}

@end

@interface NTDirectoryView : NTBoxView <NTFSWatcherDelegate>
{
    NTFileDesc *mv_desc;
    NTGrid *mv_grid;
    NSScrollView *mv_scrollView;
    NTFSWatcher *watcher;
    NTFSWatcherDelegateProxy *watcherProxy;
}

@property(retain) NTFSWatcher *watcher; // @synthesize watcher;
@property(retain) NTFSWatcherDelegateProxy *watcherProxy; // @synthesize watcherProxy;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 directory:(id)arg2;
- (void)setDesc:(id)arg1;
- (id)desc;
- (void)rebuildDataSet;
- (void)createViews;
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;

@end

@interface NTSharedUndoManager : NSUndoManager
{
}

- (id)closeTabActionTokens;
- (void)undoClosedTab:(id)arg1;
- (void)registerUndoAction:(id)arg1;
- (BOOL)canRedo;

@end

@interface NTModuleModelMgr : NTSingletonObject
{
    NSArray *mStandardModels;
    NSArray *mDirectoryModels;
    NSArray *mPluginModels;
    NSMutableSet *mDisabledSet;
    BOOL mSaveInProgress;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (BOOL)isModuleModelFiltered:(id)arg1;
- (BOOL)isModuleModelDisabled:(id)arg1;
- (void)saveDisabledToPreferences:(id)arg1;
- (void)addDirectoryModel:(id)arg1;
- (void)removeDirectoryModel:(id)arg1;
- (void)setPluginModels:(id)arg1;
- (id)pluginModels;
- (void)setDirectoryModels:(id)arg1;
- (id)directoryModels;
- (void)setStandardModels:(id)arg1;
- (id)standardModels;
- (void)dealloc;
- (id)init;
- (void)saveDirectoryModelsToPrefs:(id)arg1;
- (id)readDirectoryModelsFromPrefs;
- (id)buildPluginModels;
- (id)defaultModels;
- (id)defaultDirectoryModels;
- (void)setSaveInProgress:(BOOL)arg1;
- (BOOL)saveInProgress;
- (void)saveToPreferences;
- (void)setDisabledSet:(id)arg1;
- (id)disabledSet;
- (void)loadDisabledFromPreferences;

@end

@interface NTModuleModel : NSObject
{
    int mv_moduleID;
    NSString *mName;
    NSString *mPluginID;
    NTFileDesc *mv_directory;
}

+ (id)modelWithPluginID:(id)arg1;
+ (id)modelWithDirectory:(id)arg1;
+ (id)modelWithID:(int)arg1;
- (id)directory;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)makeModule:(id)arg1 modulePrefsKey:(id)arg2 location:(int)arg3 pluginParams:(id)arg4;
- (BOOL)isValid;
- (void)setPluginID:(id)arg1;
- (id)pluginID;
- (void)setName:(id)arg1;
- (id)name;
- (BOOL)isModuleOKForNonBrowserWindow;
- (int)moduleID;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)defaultName;
- (void)setDirectory:(id)arg1;
- (void)setModuleID:(int)arg1;

@end

@interface NTStuffitHelper : NSObject
{
}

+ (void)stuffDescs:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 destFolder:(id)arg4 sheetWindow:(id)arg5;
+ (void)stuffDescs:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 compressInSameDirectory:(BOOL)arg4 sheetWindow:(id)arg5;
+ (void)getCompressDestinationPath:(id)arg1 contextInfo:(id)arg2;
+ (void)compressDestinationCallback:(id)arg1;
+ (void)doStuffDescs:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 destFolder:(id)arg4 sheetWindow:(id)arg5;
+ (void)doStuffDescs:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 compressInSameDirectory:(BOOL)arg4 sheetWindow:(id)arg5;

@end

@interface NTCompressionContextInfo : NSObject
{
    NSArray *mv_descs;
    int _requestType;
    BOOL _archiveWithPassword;
    NSWindow *mv_sheetWindow;
}

+ (id)contextInfo:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 sheetWindow:(id)arg4;
- (id)sheetWindow;
- (id)descs;
- (BOOL)archiveWithPassword;
- (int)requestType;
- (void)dealloc;
- (id)initWithDescs:(id)arg1 type:(int)arg2 archiveWithPassword:(BOOL)arg3 sheetWindow:(id)arg4;
- (void)setDescs:(id)arg1;
- (void)setSheetWindow:(id)arg1;

@end

@interface NTOutlineTreeNode : NSObject
{
    NTProxy *nodeMgrProxy;
    NTProxy *parentProxy;
    NTFileServerItem *item;
    NTProxy *mSelfProxy;
    NSArray *mChildren;
    unsigned long long expandOnSetChildrenMode;
    BOOL resettingChildrenArray;
}

+ (id)nodeWithMgr:(id)arg1 item:(id)arg2 parent:(id)arg3;
@property(retain, nonatomic) NTProxy *parentProxy; // @synthesize parentProxy;
@property(retain, nonatomic) NTProxy *nodeMgrProxy; // @synthesize nodeMgrProxy;
@property(retain, nonatomic) NTFileServerItem *item; // @synthesize item;
@property(nonatomic) unsigned long long expandOnSetChildrenMode; // @synthesize expandOnSetChildrenMode;
@property(nonatomic) BOOL resettingChildrenArray; // @synthesize resettingChildrenArray;
- (void)setChildren:(id)arg1;
- (id)children;
- (BOOL)leaf;
- (void)setSelfProxy:(id)arg1;
- (id)selfProxy;
- (id)parentDesc;
- (id)parent;
- (void)reload:(BOOL)arg1;
- (void)dealloc;
- (id)description;
- (id)nodeMgr;
- (void)doExpandChildren:(id)arg1;
- (void)expandChildren:(id)arg1;

@end

@interface NTSelectionPathModule : NTSubmodule
{
    BOOL _refreshIfMadeVisible;
    NTSelectionPathView *_pathView;
    NSString *_browserID;
}

+ (id)module:(id)arg1 modulePrefsKey:(id)arg2 browserID:(id)arg3;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
@property(retain, nonatomic) NTSelectionPathView *pathView; // @synthesize pathView=_pathView;
@property(nonatomic) BOOL refreshIfMadeVisible; // @synthesize refreshIfMadeVisible=_refreshIfMadeVisible;
- (void)dealloc;
- (void)refresh:(int)arg1;
- (void)setup;
- (void)createSubviews;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)frameDidChange;
- (void)browserStateChangedNotification:(id)arg1;
- (void)defaultColorsChanged:(id)arg1;
- (void)clearSelectionAfterDelay;
- (void)initialDelayedRefresh;

@end

@interface NTSelectionPathView : NTView
{
    NTGrid *grid;
    NSScrollView *scrollView;
    NTNoSelectionDisplayView *noSelectionView;
}

@property(retain, nonatomic) NTNoSelectionDisplayView *noSelectionView; // @synthesize noSelectionView;
@property(retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) NTGrid *grid; // @synthesize grid;
- (void)setDescs:(id)arg1;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)syncInstalledView;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)rebuildDataSet:(id)arg1;
- (void)createViews;

@end

@interface NTSelectionPathDataSet : NTGridDataSet
{
}

@end

@interface NTSetBackgroundWindowController : NSWindowController
{
    NTCommonViewOptionsModel *mViewOptions;
}

+ (id)setBackground:(id)arg1 optionsModel:(id)arg2;
- (void)closeButtonAction:(id)arg1;
- (void)setViewOptions:(id)arg1;
- (id)viewOptions;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)run:(id)arg1;
- (void)windowDidLoad;
- (void)endPanel:(long long)arg1;
- (void)sheetDone:(id)arg1;

@end

@interface NTIconViewSelectionLayer : CALayer
{
}

+ (id)layerWithDelegate:(id)arg1;
- (id)actionForKey:(id)arg1;

@end

@interface NTIconView : IKImageBrowserView <NTRenamerDelegate, NTPreviewViewMgrDelegate, NTBrowserContextualMenuProtocol, NTDragDropIndicatorClientProtocol>
{
    BOOL _drawDragSelectionInverted;
    BOOL _expandButtonClicked;
    NTIconViewController *_viewController;
    NTRenamer *_renamer;
    NTPreviewViewMgr *_previewMgr;
    NTIconViewItemImager *_itemImager;
    NTBrowserContextualMenu *_contextualMenu;
    NTDragInfoCache *_dragInfoCache;
    long long _dragSelection;
    NTDragDropIndicatorClient *_dragDropIndicatorClient;
    NTSpringLoadedHelper *_springLoadedHelper;
    NTClickState *_clickState;
    NTRubberbandSelector *_rubberband;
}

@property(nonatomic) BOOL expandButtonClicked; // @synthesize expandButtonClicked=_expandButtonClicked;
@property(retain, nonatomic) NTRubberbandSelector *rubberband; // @synthesize rubberband=_rubberband;
@property(retain, nonatomic) NTClickState *clickState; // @synthesize clickState=_clickState;
@property(retain, nonatomic) NTSpringLoadedHelper *springLoadedHelper; // @synthesize springLoadedHelper=_springLoadedHelper;
@property(retain, nonatomic) NTDragDropIndicatorClient *dragDropIndicatorClient; // @synthesize dragDropIndicatorClient=_dragDropIndicatorClient;
@property(nonatomic) BOOL drawDragSelectionInverted; // @synthesize drawDragSelectionInverted=_drawDragSelectionInverted;
@property(nonatomic) long long dragSelection; // @synthesize dragSelection=_dragSelection;
@property(retain, nonatomic) NTDragInfoCache *dragInfoCache; // @synthesize dragInfoCache=_dragInfoCache;
@property(retain, nonatomic) NTBrowserContextualMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
@property(retain, nonatomic) NTIconViewItemImager *itemImager; // @synthesize itemImager=_itemImager;
@property(retain, nonatomic) NTPreviewViewMgr *previewMgr; // @synthesize previewMgr=_previewMgr;
@property(retain, nonatomic) NTRenamer *renamer; // @synthesize renamer=_renamer;
@property(nonatomic) NTIconViewController *viewController; // @synthesize viewController=_viewController;
- (id)draggingImage:(struct CGPoint *)arg1;
- (id)iconPositionMapForSelection:(id)arg1;
- (void)syncInlinePreviewOption;
- (BOOL)getRectsForItemAtIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3 infoRect:(struct CGRect *)arg4;
- (id)itemInRename;
- (BOOL)isRenaming;
- (BOOL)renameSelection;
- (void)updateItemSizeWithOptions:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1;
- (void)_expandButtonClicked:(id)arg1;
- (id)newCellForRepresentedItem:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)renamerDelegate_renameNext:(id)arg1 item:(id)arg2 context:(id)arg3;
- (id)renamerDelegate_prepareToRenameNext:(BOOL)arg1 item:(id)arg2 context:(id)arg3;
- (struct CGRect)renamerDelegate_screenRectForEditor;
- (struct CGRect)renamerDelegate_screenRectForText;
- (void)renamerDelegate_renameItem:(id)arg1 context:(id)arg2 to:(id)arg3;
- (void)renamerDelegate_renameDidEnd;
- (void)renamerDelegate_renameDidStart;
- (id)previewMgrImager:(id)arg1;
- (id)previewMgrItems:(id)arg1;
- (struct CGRect)previewMgr:(id)arg1 rectForPosition:(unsigned long long)arg2 iconRect:(struct CGRect *)arg3;
- (id)previewMgrView:(id)arg1;
- (id)contextualMenuHelper:(id)arg1 outTarget:(id *)arg2;
- (struct CGRect)dragDropIndicatorRect;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)showContextualMenuFromInlinePreview:(id)arg1;
- (struct CGRect)dragDropHighlightRect:(long long)arg1;
- (void)redrawDragDropHighlightAtIndex:(long long)arg1;
- (void)setInvertDragSelection:(BOOL)arg1;
- (void)clearDragSelection;
- (void)performSpringLoadedFolder;
- (id)indexesIntersectingRect:(struct CGRect)arg1;
- (void)toggleSelections:(id)arg1;
- (id)performRubberbandDrag:(id)arg1;
- (void)performDrag:(id)arg1;
- (void)performMouseUp:(id)arg1;
- (void)renameAtIndex:(long long)arg1 delay:(BOOL)arg2;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1 intersectsIcon:(char *)arg2 intersectsText:(char *)arg3;
- (void)showContextualMenu:(id)arg1;
- (void)deselectItemAtIndex:(long long)arg1;

@end

@interface NTHomeLazyMenu : NTLazyMenu <NSCopying>
{
    NTMenu *ntMenu;
}

@property(retain) NTMenu *ntMenu; // @synthesize ntMenu;
- (void)menuNeedsUpdate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTitle:(id)arg1;
- (void)dealloc;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)buildNTMenuAsync;

@end

@interface NTComputerLazyMenu : NTLazyMenu <NSCopying>
{
    unsigned long long volumesBuildID;
}

@property unsigned long long volumesBuildID; // @synthesize volumesBuildID;
- (void)menuNeedsUpdate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1;
- (void)volumeListChangedNotification:(id)arg1;
- (id)ntMenu;

@end

@interface NTFavoritesLazyMenu : NTLazyMenu <NSCopying>
{
}

- (void)menuNeedsUpdate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NTDropStackData : NSObject
{
    BOOL copyAction;
    NSArray *aliases;
}

+ (id)dataWithDragInfo:(id)arg1 copyAction:(BOOL)arg2;
+ (id)dataWithDescs:(id)arg1 copyAction:(BOOL)arg2;
@property(retain, nonatomic) NSArray *aliases; // @synthesize aliases;
@property(nonatomic) BOOL copyAction; // @synthesize copyAction;
- (id)paths;
- (id)descs;
- (void)dealloc;

@end

@interface NTKeyDownSearchCache : NSObject
{
    BOOL _arrangeAscending;
    BOOL _sortAscending;
    BOOL _smartSortEnabled;
    int _arrangeOrder;
    int _sortOrder;
    NTFileServerRequest *_serverRequest;
    NSArray *_sortedItems;
    NSArray *_items;
    NSDictionary *_itemMap;
}

@property(retain, nonatomic) NSDictionary *itemMap; // @synthesize itemMap=_itemMap;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSArray *sortedItems; // @synthesize sortedItems=_sortedItems;
@property(nonatomic) BOOL smartSortEnabled; // @synthesize smartSortEnabled=_smartSortEnabled;
@property(nonatomic) BOOL sortAscending; // @synthesize sortAscending=_sortAscending;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
@property(nonatomic) BOOL arrangeAscending; // @synthesize arrangeAscending=_arrangeAscending;
@property(nonatomic) int arrangeOrder; // @synthesize arrangeOrder=_arrangeOrder;
@property(retain, nonatomic) NTFileServerRequest *serverRequest; // @synthesize serverRequest=_serverRequest;
- (id)description;
- (id)previousSearchItem:(id)arg1;
- (id)nextSearchItem:(id)arg1;
- (id)matchingSearchItem:(id)arg1;
- (id)searchItemForDesc:(id)arg1;
- (unsigned long long)numberOfItems;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 items:(id)arg2 arrangeOrder:(int)arg3 arrangeAscending:(BOOL)arg4 sortOrder:(int)arg5 sortAscending:(BOOL)arg6 smartSortEnabled:(BOOL)arg7;

@end

@interface NTBrowserKeyEventHandler : NSObject
{
    BOOL _navigationKeysEnabled;
    id <NTBrowserKeyEventHandlerDelegate> _delegate;
    NSMutableString *_keyDownBuffer;
    double _lastKeyEventTimeInterval;
    NTKeyDownSearchCache *_keySearchCache;
}

+ (id)keyHandlerWithDelegate:(id)arg1 navigationKeysEnabled:(BOOL)arg2;
@property(nonatomic) BOOL navigationKeysEnabled; // @synthesize navigationKeysEnabled=_navigationKeysEnabled;
@property(retain, nonatomic) NTKeyDownSearchCache *keySearchCache; // @synthesize keySearchCache=_keySearchCache;
@property(nonatomic) double lastKeyEventTimeInterval; // @synthesize lastKeyEventTimeInterval=_lastKeyEventTimeInterval;
@property(retain, nonatomic) NSMutableString *keyDownBuffer; // @synthesize keyDownBuffer=_keyDownBuffer;
@property id <NTBrowserKeyEventHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (BOOL)keyDownEvent:(id)arg1;
- (void)clearDelegate;
- (void)dealloc;
- (unsigned long long)calcRowFromTabKeyDown:(BOOL)arg1;
- (void)buildKeySearchCache;
- (BOOL)doOtherKey:(unsigned short)arg1 modifiers:(unsigned long long)arg2;
- (BOOL)doPrintableKey:(unsigned short)arg1 modifiers:(unsigned long long)arg2 keyEventTimeInterval:(double)arg3;
- (BOOL)doTabKey:(unsigned short)arg1 modifiers:(unsigned long long)arg2;
- (BOOL)doNavigationKey:(unsigned short)arg1 modifiers:(unsigned long long)arg2;

@end

@interface NTBrowserTitlesContainerViewHack : NSObject
{
}

+ (void)install;
+ (Class)containerViewClass;
- (void)h_rightMouseDown:(id)arg1;

@end

@interface NTSortingPopUpMenu : NSMenu <NSMenuDelegate>
{
}

+ (id)staticMenu;
+ (id)menu;
+ (void)buildMenu:(id)arg1;
- (void)dealloc;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTBookmarksContainerView : NTBoxView
{
    NTBookmarksBar *bookmarksBar;
    NTBookmarksBarDelegate *bookmarksBarDelegate;
}

+ (void)drawTopBarBackgroundInRect:(struct CGRect)arg1 inView:(id)arg2;
+ (id)containerView;
@property(retain, nonatomic) NTBookmarksBarDelegate *bookmarksBarDelegate; // @synthesize bookmarksBarDelegate;
@property(retain, nonatomic) NTBookmarksBar *bookmarksBar; // @synthesize bookmarksBar;
- (void)drawRect:(struct CGRect)arg1;
- (void)frameDidChange;
- (void)dealloc;
- (void)arrangeSubviews;
- (void)createSubviews;
- (void)windowStateChangedNotification:(id)arg1;

@end

@interface NTStringLocalizationTools : NSObject <NTLocalizedStringFilterProtocol>
{
    NTCocoaPluginHost *mPluginHost;
}

+ (void)install;
- (void)dealloc;
- (id)init;
- (void)localizedStringFilter_unlocalizedString:(id)arg1 table:(id)arg2;
- (void)mergeStringFoldersAction:(id)arg1;
- (void)createMissingLocalizations_locAction:(id)arg1;
- (void)viewADInStringsFormat_locAction:(id)arg1;
- (void)ripFromSelectedADFiles_locAction:(id)arg1;
- (void)ripNibsFromBundle_locAction:(id)arg1;
- (void)displayNibStringssFromBundle_locAction:(id)arg1;
- (void)showUnlocalizedStrings_locAction:(id)arg1;
- (void)ripFromSelectionOverride_locAction:(id)arg1;
- (void)ripFromSelection_locAction:(id)arg1;
- (void)rebuildSelectedStringsFiles_locAction:(id)arg1;
- (void)rebuildByConsultingTables_locAction:(id)arg1;
- (void)rebuildStringFiles_locAction:(id)arg1;
- (void)showInfo_locAction:(id)arg1;
- (void)dumpStrings_locAction:(id)arg1;
- (void)renameFolders_locAction:(id)arg1;
- (id)selectedADFiles;
- (id)selectedStringsFiles;
- (id)selectedBundles;
- (void)setPluginHost:(id)arg1;
- (id)pluginHost;
- (void)installMenu:(id)arg1;
- (void)localizeTableForAllRegions:(id)arg1;
- (void)performRipOnBundleResourceType:(id)arg1 unlocalizedStrings:(BOOL)arg2 matchFilename:(BOOL)arg3;

@end

@interface NTStringsFile : NSObject
{
    NSString *mv_region;
    NSString *mv_table;
    NTFileDesc *mv_desc;
    NSDictionary *mv_dictionary;
    NSDictionary *mv_strippedDictionary;
}

+ (id)stringsFileWithDictionary:(id)arg1 region:(id)arg2;
+ (id)stringsFile:(id)arg1 region:(id)arg2;
+ (id)localizeFiles:(id)arg1 byConsultingFiles:(id)arg2 unlocalizedStrings:(BOOL)arg3 matchFilename:(BOOL)arg4;
+ (void)rebuildStringsFile:(id)arg1;
- (id)strings:(BOOL)arg1;
- (id)unlocalizedStrings:(BOOL)arg1;
- (void)rebuildDictionaryUsingEnglishNib:(id)arg1;
- (void)rebuildDictionaryUsingFile:(id)arg1;
- (id)mergeStringsConsultingFiles:(id)arg1 unlocalizedStrings:(BOOL)arg2 matchFilename:(BOOL)arg3;
- (id)table;
- (id)desc;
- (id)region;
- (void)dealloc;
- (id)matchForKey:(id)arg1;
- (BOOL)isADFile;
- (BOOL)isNibFile;
- (BOOL)isStringsFile;
- (BOOL)isChinese;
- (BOOL)isFinnish;
- (BOOL)isFrench;
- (BOOL)isJapanese;
- (BOOL)isEnglish;
- (id)adFileToDictionary;
- (id)nibFileToDictionary;
- (id)stringsFileToDictionary;
- (id)stringToDictionary:(id)arg1;
- (id)description;
- (void)setDesc:(id)arg1;
- (void)setRegion:(id)arg1;
- (void)setTable:(id)arg1;
- (id)stripEndingPunctuationMark:(id)arg1 outType:(int *)arg2;
- (id)appendEndingPunctuationMark:(id)arg1 type:(int)arg2;
- (id)buildStrippedDictionary;
- (void)setStrippedDictionary:(id)arg1;
- (id)strippedDictionary;
- (void)setDictionary:(id)arg1;
- (id)dictionary;
- (void)save;

@end

@interface NTStringLocalizationLogger : NTSingletonObject
{
    NSMutableDictionary *mv_unlocalizedStrings;
    NTStringsFileManager *mv_fileMgr;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (id)unlocalizedStringsOuput;
- (void)dumpToConsole;
- (void)log:(id)arg1 table:(id)arg2;
- (id)setForTable:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setFileMgr:(id)arg1;
- (id)fileMgr;
- (void)setUnlocalizedStrings:(id)arg1;
- (id)unlocalizedStrings;

@end

@interface NTStringsFileManager : NSObject
{
    NTFileDesc *mv_desc;
    NSString *mv_type;
    NSArray *mv_files;
    NSArray *mv_tables;
    NSArray *mv_regions;
    NSBundle *mv_bundle;
}

+ (id)managerForBundleDirectory:(id)arg1 type:(id)arg2;
+ (id)targetFramework;
+ (id)cocoatechStringsFramework;
- (id)bundle;
- (id)regions;
- (id)tables;
- (id)files;
- (id)type;
- (id)desc;
- (id)fileForTable:(id)arg1 region:(id)arg2;
- (id)filesForTable:(id)arg1;
- (id)filesForRegion:(id)arg1;
- (void)dealloc;
- (void)updateNibFiles:(id)arg1;
- (void)updateNibFiles;
- (BOOL)isABType;
- (BOOL)isNibsType;
- (BOOL)isStringsType;
- (void)load;
- (void)setRegions:(id)arg1;
- (void)setTables:(id)arg1;
- (void)setFiles:(id)arg1;
- (void)setType:(id)arg1;
- (void)setDesc:(id)arg1;
- (void)setBundle:(id)arg1;

@end

@interface NTIconViewItem : NSObject
{
    NTFileServerItem *_item;
}

+ (id)itemWithFileServerItem:(id)arg1;
@property(retain, nonatomic) NTFileServerItem *item; // @synthesize item=_item;
- (void)dealloc;
- (id)imageUID;
- (id)imageRepresentation;
- (id)imageRepresentationType;

@end

@interface NTABFileParser : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *mv_parser;
    NSString *mv_region;
    NSString *mv_base;
    NSMutableString *mv_englishString;
    NSMutableString *mv_translationString;
    NSString *mv_savedEnglish;
    NSMutableDictionary *mv_results;
}

+ (id)parseFile:(id)arg1;
- (id)base;
- (id)dictionary;
- (id)region;
- (void)dealloc;
- (id)init;
- (void)setSavedEnglish:(id)arg1;
- (id)savedEnglish;
- (void)setParser:(id)arg1;
- (id)parser;
- (void)setTranslationString:(id)arg1;
- (id)translationString;
- (void)setEnglishString:(id)arg1;
- (id)englishString;
- (void)go:(id)arg1;
- (void)setResults:(id)arg1;
- (id)results;
- (void)setRegion:(id)arg1;
- (void)setBase:(id)arg1;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;

@end

@interface NTPreviewColumn : NTBoxView
{
    NTSplitViewDelegate *_splitViewDelegate;
    BOOL _swapped;
    BOOL _vertical;
    BOOL _centered;
    BOOL _hasSetupSplitView;
    NSString *_browserID;
    NSSplitView *_splitView;
    NTModule *_previewModule;
    NTModule *_infoModule;
    NTDefaultsClient *_defaultsClient;
    double _oldPosition;
}

@property(nonatomic) double oldPosition; // @synthesize oldPosition=_oldPosition;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(nonatomic) BOOL centered; // @synthesize centered=_centered;
@property(nonatomic) BOOL vertical; // @synthesize vertical=_vertical;
@property(nonatomic) BOOL swapped; // @synthesize swapped=_swapped;
@property(retain, nonatomic) NTDefaultsClient *defaultsClient; // @synthesize defaultsClient=_defaultsClient;
@property(retain, nonatomic) NTModule *infoModule; // @synthesize infoModule=_infoModule;
@property(retain, nonatomic) NTModule *previewModule; // @synthesize previewModule=_previewModule;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
- (void)openTerminalInDirectory:(id)arg1;
- (BOOL)hasTerminal;
- (void)setInstalledInNonBrowserWindow:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1 vertical:(BOOL)arg2 frameType:(int)arg3 browserID:(id)arg4 defaultsClient:(id)arg5 swapped:(BOOL)arg6;
- (void)dealloc;
- (void)frameDidChange;
- (void)viewWillDraw;
- (void)viewDidMoveToWindow;
- (BOOL)isViewCollapsed:(id)arg1;
- (void)setup;
- (void)createSubviews;
- (void)setSplitViewDelegate:(id)arg1;
- (id)splitViewDelegate;
- (void)splitViewDidDragDivider:(id)arg1;

@end

@interface NTPreviewColumnSplitView : NSSplitView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface NTApplicationLocation : NSObject
{
    NTFileDesc *directory;
    NSArray *applications_storage;
}

+ (id)location:(id)arg1;
@property(retain, nonatomic) NSArray *applications_storage; // @synthesize applications_storage;
@property(retain, nonatomic) NTFileDesc *directory; // @synthesize directory;
- (id)applications;
- (void)dealloc;

@end

@interface NTHistoryDataSet : NTGridDataSet
{
    BOOL showFolders;
}

+ (id)folderHistoryDataSet;
+ (id)fileHistoryDataSet;
@property(nonatomic) BOOL showFolders; // @synthesize showFolders;
- (void)dealloc;
- (id)init;
- (void)sharedFileListChanged:(id)arg1;
- (void)fileHistoryChangedNotification:(id)arg1;
- (void)rebuildDataSet;

@end

@interface NSTextFieldCellHack : NSObject
{
}

+ (void)install;
- (void)hack_setPlaceholderString:(id)arg1;

@end

@interface NSFormCellHack : NSObject
{
}

+ (void)install;
- (void)hack_setPlaceholderString:(id)arg1;

@end

@interface NTListIconBaseViewDataMgr : NTBaseViewDataMgr
{
    NTFileServerRequest *serverRequest;
    BOOL rootRequestIsNewLocation;
    BOOL removeRequestsWhenRootChanges;
}

+ (id)dataMgr:(id)arg1;
@property(nonatomic) BOOL removeRequestsWhenRootChanges; // @synthesize removeRequestsWhenRootChanges;
@property(nonatomic) BOOL rootRequestIsNewLocation; // @synthesize rootRequestIsNewLocation;
@property(retain, nonatomic) NTFileServerRequest *serverRequest; // @synthesize serverRequest;
- (void)dealloc;
- (void)fileServer_didUpdateRequest:(id)arg1 savedState:(id)arg2;
- (id)fileServer_willUpdateRequest:(id)arg1;
- (void)displayServerRequest:(id)arg1 params:(id)arg2;

@end

@interface NTPathBarThread : NTDispatchThread
{
    int _result;
    NTFileDesc *_desc;
    NSArray *_pathBarComponents;
    unsigned long long _selectedIndex;
    unsigned long long _previousSelectedIndex;
    NSArray *_previousPathBarComponents;
}

+ (id)thread:(id)arg1 previousComponents:(id)arg2 previousSelectedIndex:(unsigned long long)arg3 delegateProxy:(id)arg4;
@property(retain) NSArray *previousPathBarComponents; // @synthesize previousPathBarComponents=_previousPathBarComponents;
@property unsigned long long previousSelectedIndex; // @synthesize previousSelectedIndex=_previousSelectedIndex;
@property unsigned long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(retain) NSArray *pathBarComponents; // @synthesize pathBarComponents=_pathBarComponents;
@property int result; // @synthesize result=_result;
@property(retain) NTFileDesc *desc; // @synthesize desc=_desc;
- (void)dealloc;
- (BOOL)threadMethod;
- (void)rebuild;
- (void)rebuildIfNeeded;

@end

@interface NTFolderListCacheThread : NTDispatchThread
{
    NTFileDesc *directory;
    NSArray *list;
}

+ (id)thread:(id)arg1 delegateProxy:(id)arg2;
@property(retain) NSArray *list; // @synthesize list;
@property(retain) NTFileDesc *directory; // @synthesize directory;
- (void)dealloc;
- (BOOL)threadMethod;

@end

@interface NTFolderListCache : NSObject <NTMessageProxyProtocol>
{
    id <NTFolderListCacheDelegateProtocol> delegate;
    NTMessageProxy *selfProxy;
    NTFolderListCacheThread *thread;
    NSMutableDictionary *cache;
}

+ (id)cache:(id)arg1;
@property(retain) NSMutableDictionary *cache; // @synthesize cache;
@property(retain) NTFolderListCacheThread *thread; // @synthesize thread;
@property(retain) NTMessageProxy *selfProxy; // @synthesize selfProxy;
@property id <NTFolderListCacheDelegateProtocol> delegate; // @synthesize delegate;
- (void)requestList:(id)arg1;
- (void)clearDelegate;
- (void)dealloc;
- (id)init;
- (void)messageProxy:(id)arg1 message:(id)arg2;

@end

@interface NTGotoFolderUIModel : NSObject <NTFolderListCacheDelegateProtocol>
{
    NTFileDesc *mDirectory;
    NSArray *mList;
    NSArray *mPathComponents;
    NSString *mFilter;
    NSArray *filteredList;
    NTFolderListCache *mFolderListCache;
    NSIndexSet *selectedIndexes;
    BOOL shortCutsVisible;
    NSAttributedString *mShortCutsString;
    NSDictionary *mAttributes;
    NSDictionary *mInvisibleAttributes;
    NSDictionary *mLeftAttributes;
}

+ (id)keyPathsForValuesAffectingSelectedDirectory;
+ (id)model;
@property(nonatomic) BOOL shortCutsVisible; // @synthesize shortCutsVisible;
@property(retain, nonatomic) NSIndexSet *selectedIndexes; // @synthesize selectedIndexes;
@property(retain, nonatomic) NSArray *filteredList; // @synthesize filteredList;
- (void)setShortCutsString:(id)arg1;
- (id)shortCutsString;
- (void)setSelectedIndex:(unsigned long long)arg1;
- (unsigned long long)selectedIndex;
- (void)setPathComponents:(id)arg1;
- (id)pathComponents;
- (void)setDirectory:(id)arg1;
- (id)directory;
- (id)selectedDirectory;
- (BOOL)validateFilter:(id *)arg1 error:(id *)arg2;
- (void)setFilter:(id)arg1;
- (id)filter;
- (void)dealloc;
- (void)setLeftAttributes:(id)arg1;
- (id)leftAttributes;
- (void)setAttributes:(id)arg1;
- (id)attributes;
- (id)paragraphStyle;
- (void)doubleClickInTableAction:(id)arg1;
- (id)cleanedFilter:(id)arg1;
- (void)setFolderListCache:(id)arg1;
- (id)folderListCache;
- (void)setList:(id)arg1;
- (id)list;
- (void)updateFilteredList;
- (void)buildShortCuts;
- (void)folderListCache_list:(id)arg1 forDirectory:(id)arg2;

@end

@interface NTGotoFolderSearchField : NSSearchField
{
    NSTextView *mTextEditor;
    NSString *mCompletedString;
}

- (void)setCompletedString:(id)arg1;
- (id)completedString;
- (void)setTextEditor:(id)arg1;
- (id)textEditor;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

@interface NTGotoFolderSearchFieldEditor : NSTextView
{
}

+ (id)editor;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;

@end

@interface NTGotoFolderWindow : NSWindow
{
    NSResponder *mFakeFirstResponder;
}

- (void)setFakeFirstResponder:(id)arg1;
- (id)fakeFirstResponder;
- (void)sendEvent:(id)arg1;
- (id)firstResponder;
- (BOOL)handleKeyDown:(id)arg1;

@end

@interface NTTransparentTextView : NSTextView <NSTextViewDelegate>
{
}

- (void)awakeFromNib;

@end

@interface NTWindowCollapse : NSObject
{
    struct CGPoint mSavedOrigin;
}

+ (id)collapse:(id)arg1;
- (void)expand:(id)arg1;
- (void)dealloc;
- (void)setSavedOrigin:(struct CGPoint)arg1;
- (struct CGPoint)savedOrigin;

@end

@interface NTSizeBrowserController : NTWindowController <NTMessageProxyProtocol>
{
    NSBrowser *browserView;
    NTSizeBrowserModel *model;
    NTSizeBrowserToolbar *toolbar;
    BOOL runningAsSheet;
    NSWindow *parentWindow;
    NTSizeBrowserNodeUpdater *nodeUpdater;
    NTWindowSaveHelper *windowHelper;
    NSImage *icon;
    NSString *folderName;
    NTMessageProxy *selfProxy;
    NTSizeBrowserThread *thread;
}

+ (void)sizeBrowser:(id)arg1 parentWindow:(id)arg2;
@property(retain) NTSizeBrowserThread *thread; // @synthesize thread;
@property(retain) NTMessageProxy *selfProxy; // @synthesize selfProxy;
@property(retain, nonatomic) NSBrowser *browserView; // @synthesize browserView;
@property(retain, nonatomic) NSString *folderName; // @synthesize folderName;
@property(retain, nonatomic) NTWindowSaveHelper *windowHelper; // @synthesize windowHelper;
@property(retain, nonatomic) NTSizeBrowserNodeUpdater *nodeUpdater; // @synthesize nodeUpdater;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow;
@property(nonatomic) BOOL runningAsSheet; // @synthesize runningAsSheet;
@property(retain, nonatomic) NTSizeBrowserToolbar *toolbar; // @synthesize toolbar;
@property(retain, nonatomic) NTSizeBrowserModel *model; // @synthesize model;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;
- (void)doClose:(BOOL)arg1;
- (void)run;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)openInNewWindowAction:(id)arg1;
- (void)secureDeleteAction:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)moveToTrashAction:(id)arg1;
- (void)closeButtonAction:(id)arg1;
- (void)messageProxy:(id)arg1 message:(id)arg2;

@end

@interface NTSizeBrowserNode : NSObject
{
    NTProxy *parentProxy;
    NTProxy *mSelfProxy;
    unsigned long long bytes;
    NSMutableDictionary *dataContainer;
    NSMutableDictionary *threadDataContainer;
    struct FSRef fileRef;
    BOOL leaf;
    BOOL calculating;
    BOOL needsRefresh;
    BOOL childrenNeedRefresh;
}

+ (id)node:(id)arg1 parent:(id)arg2;
+ (id)keyPathsForValuesAffectingDisplayInfo;
@property(retain, nonatomic) NTProxy *parentProxy; // @synthesize parentProxy;
@property(nonatomic) BOOL calculating; // @synthesize calculating;
@property(nonatomic) BOOL leaf; // @synthesize leaf;
@property(retain, nonatomic) NSMutableDictionary *threadDataContainer; // @synthesize threadDataContainer;
@property(nonatomic) BOOL childrenNeedRefresh; // @synthesize childrenNeedRefresh;
@property(nonatomic) unsigned long long bytes; // @synthesize bytes;
@property(retain, nonatomic) NSMutableDictionary *dataContainer; // @synthesize dataContainer;
@property(nonatomic) BOOL needsRefresh; // @synthesize needsRefresh;
- (void)setIcon:(id)arg1;
- (id)icon;
- (void)setCalculating_thread:(long long)arg1;
- (void)setBytes_thread:(unsigned long long)arg1;
- (void)setChildren_thread:(id)arg1;
- (BOOL)childrenNeedReload:(BOOL)arg1;
- (void)flushThreadValues:(BOOL)arg1;
- (void)setDeletedBytes:(unsigned long long)arg1;
- (unsigned long long)deletedBytes;
- (void)setChildren:(id)arg1;
- (id)children;
- (id)createDesc;
- (void)dealloc;
- (void)setPath:(id)arg1;
- (id)path;
- (id)displayInfo;
- (id)displaySize;
- (id)displayName;
- (void)setName:(id)arg1;
- (id)name;
- (id)attributeForSizeUnit:(int)arg1;
- (id)sharedByteAttributes;
- (id)sharedKAttributes;
- (id)sharedMBAttributes;
- (id)sharedGBAttributes;
- (id)sharedCalculatingSizeAttributes;
- (id)sharedSizeAttributes;
- (id)sharedAttributes;
- (id)paragraphStyle:(unsigned long long)arg1;
- (void)doFlushThreadValues:(id)arg1;
- (id)description;
- (void)setSelfProxy:(id)arg1;
- (id)selfProxy;
- (void)setupThreadDataContainer;
- (id)sortName;
- (unsigned long long)sortBytes;

@end

@interface NTSizeBrowserThread : NTDispatchThread
{
    NTSizeBrowserNode *node;
    BOOL supportsForks;
    NTSizeBrowserNodeUpdater *nodeUpdater;
    NSArray *sortDescriptors;
}

+ (id)thread:(id)arg1 nodeUpdater:(id)arg2 sortDescriptors:(id)arg3 delegateProxy:(id)arg4;
@property(retain, nonatomic) NSArray *sortDescriptors; // @synthesize sortDescriptors;
@property(retain, nonatomic) NTSizeBrowserNodeUpdater *nodeUpdater; // @synthesize nodeUpdater;
@property(nonatomic) BOOL supportsForks; // @synthesize supportsForks;
@property(retain, nonatomic) NTSizeBrowserNode *node; // @synthesize node;
- (void)dealloc;
- (BOOL)threadMethod;
- (unsigned long long)build:(id)arg1 nodeDesc:(id)arg2;

@end

@interface NTSizeBrowserNodeUpdater : NSObject <NTSecureDeletePanelControllerDelegate, NSBrowserDelegate>
{
    NSBrowser *mBrowserView;
    NTSizeBrowserModel *mModel;
    NSMutableSet *mUpdateNode;
    NSMutableSet *mUpdateNodeAndChildren;
    BOOL mSentMainThreadUpdate;
    BOOL mSentSelectionChangedNotification;
    NTActionToken *moveToTrashActionToken;
}

+ (id)updater:(id)arg1 model:(id)arg2;
@property(retain, nonatomic) NTActionToken *moveToTrashActionToken; // @synthesize moveToTrashActionToken;
- (void)revealSelection;
- (void)secureDeleteSelection;
- (void)deleteSelection;
- (void)trashSelection;
- (void)update:(id)arg1 updateChildren:(BOOL)arg2;
- (void)dealloc;
- (void)deleteSheetSelector:(id)arg1;
- (void)actionTokenNotification:(id)arg1;
- (void)removeFromTree:(id)arg1;
- (void)updateSelectionAfterDelay:(id)arg1;
- (void)setBrowserView:(id)arg1;
- (id)browserView;
- (void)refreshColumns;
- (void)updateOnMainThread;
- (void)setSentMainThreadUpdate:(BOOL)arg1;
- (BOOL)sentMainThreadUpdate;
- (void)setUpdateNodeAndChildren:(id)arg1;
- (id)updateNodeAndChildren;
- (void)setUpdateNode:(id)arg1;
- (id)updateNode;
- (void)setSentSelectionChangedNotification:(BOOL)arg1;
- (BOOL)sentSelectionChangedNotification;
- (id)selectedNode;
- (void)setModel:(id)arg1;
- (id)model;
- (void)deletePanel_deleteStarted;
- (void)browserChangedAction:(id)arg1;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)rootItemForBrowser:(id)arg1;

@end

@interface NTSizeBrowserCell : NSCell <NSCopying, NSCoding>
{
    NSAttributedString *mSizeString;
    NSAttributedString *mNameString;
    NTGlyphBlitter *mSizeBlitter;
    NTGlyphBlitter *mNameBlitter;
    NSImage *mImage;
}

- (void)setImage:(id)arg1;
- (id)image;
- (void)setNameString:(id)arg1;
- (id)nameString;
- (void)setSizeString:(id)arg1;
- (id)sizeString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)rects:(struct CGRect)arg1 outNameRect:(struct CGRect *)arg2 outBackRect:(struct CGRect *)arg3 outSizeRect:(struct CGRect *)arg4 outIconRect:(struct CGRect *)arg5 isFlipped:(BOOL)arg6;
- (void)setNameBlitter:(id)arg1;
- (id)nameBlitter:(struct CGSize)arg1;
- (void)setSizeBlitter:(id)arg1;
- (id)sizeBlitter:(struct CGSize)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NTSizeBrowserModel : NSObject
{
    NTSizeBrowserNode *mTreeRoot;
    NSArray *mSortDescriptors;
    NSString *windowTitle;
    NTSizeBrowserNode *mSelection;
}

+ (id)model:(id)arg1;
+ (id)keyPathsForValuesAffectingIsSelectionDeletable;
+ (id)keyPathsForValuesAffectingIsSelectionMovable;
@property(retain, nonatomic) NSString *windowTitle; // @synthesize windowTitle;
- (BOOL)isSelectionDeletable;
- (BOOL)isSelectionMovable;
- (void)setSelection:(id)arg1;
- (id)selection;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (void)setTreeRoot:(id)arg1;
- (id)treeRoot;
- (void)dealloc;

@end

@interface NTFolderMerge : NSObject
{
    NTFileDesc *mDestinationFolder;
    NTFileDesc *mSourceFolder;
    NSDictionary *mDestinationTable;
    NSDictionary *mSourceTable;
}

+ (id)mergeFolder:(id)arg1;
- (void)dealloc;
- (void)setSourceTable:(id)arg1;
- (id)sourceTable;
- (void)setDestinationTable:(id)arg1;
- (id)destinationTable;
- (void)setSourceFolder:(id)arg1;
- (id)sourceFolder;
- (void)setDestinationFolder:(id)arg1;
- (id)destinationFolder;
- (id)buildTable:(id)arg1;
- (BOOL)sourceAndDestinationMatch;
- (void)doMerge;

@end

@interface NTLSOFTask : NTReportTask
{
}

+ (void)lsofOnVolume:(id)arg1;
+ (void)lsof;
- (id)parseOutput:(id)arg1;

@end

@interface NTReportTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTTaskController *task;
    NTProgressBar *progressBar;
    NSMutableString *output;
    NSMutableString *errors;
    NSString *toolPath;
    NSArray *arguments;
}

+ (void)reportTask:(id)arg1 arguments:(id)arg2 progressTitle:(id)arg3 progressInfo:(id)arg4;
@property(retain, nonatomic) NSArray *arguments; // @synthesize arguments;
@property(retain, nonatomic) NSString *toolPath; // @synthesize toolPath;
@property(retain, nonatomic) NSMutableString *errors; // @synthesize errors;
@property(retain, nonatomic) NSMutableString *output; // @synthesize output;
@property(retain, nonatomic) NTProgressBar *progressBar; // @synthesize progressBar;
@property(retain, nonatomic) NTTaskController *task; // @synthesize task;
- (id)parseOutput:(id)arg1;
- (void)dealloc;
- (id)argumentsAsString;
- (void)taskFinished;
- (void)run;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NTSharedUndoHandler : NTSingletonObject
{
    NSUndoManager *_undoManager;
    NSMutableArray *_actionTokens;
}

+ (void)initialize;
+ (id *)staticStorageVariable;
@property(retain, nonatomic) NSMutableArray *actionTokens; // @synthesize actionTokens=_actionTokens;
@property(retain, nonatomic) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
- (void)undo:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)addActionToken:(id)arg1;

@end

@interface NTSelectionLazyMenu : NTLazyMenu <NSCopying>
{
    NTFileDesc *selection;
    BOOL selectionSetByUser;
}

@property(nonatomic) BOOL selectionSetByUser; // @synthesize selectionSetByUser;
@property(retain, nonatomic) NTFileDesc *selection; // @synthesize selection;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)setSelection:(id)arg1 action:(SEL)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)currentSelection;
- (void)initializeMenu;
- (void)rebuildMenu;

@end

@interface NTGroupLazyMenu : NTSelectionLazyMenu
{
}

- (void)initializeMenu;
- (void)rebuildMenu;

@end

@interface NTOwnerLazyMenu : NTSelectionLazyMenu
{
}

- (void)initializeMenu;
- (void)rebuildMenu;

@end

@interface NTTrashWindow : NSWindow
{
    NTTrashView *_trashView;
}

- (void)setTrashViewTextAttributes;
- (unsigned long long)iconSize;
- (void)setIconSize:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithContentRect:(struct CGRect)arg1;

@end

@interface NTSizeBrowserToolbarItemCache : NSObject
{
    NSMutableDictionary *items;
}

@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items;
- (void)addSimpleButton:(id)arg1 label:(id)arg2 action:(SEL)arg3;
- (id)allKeys;
- (id)itemForIdentifier:(id)arg1 target:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface NTSizeBrowserToolbar : NSObject <NSToolbarDelegate>
{
    NSToolbar *toolbar;
    NTSizeBrowserToolbarItemCache *cache;
}

@property(retain, nonatomic) NTSizeBrowserToolbarItemCache *cache; // @synthesize cache;
@property(retain, nonatomic) NSToolbar *toolbar; // @synthesize toolbar;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;

@end

@interface NTTabSetManager : NTSingletonObject <NTListEditorControllerDelegate>
{
    BOOL savePending;
    NSMutableArray *tabSets_storage;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(nonatomic) BOOL savePending; // @synthesize savePending;
@property(retain, nonatomic) NSMutableArray *tabSets_storage; // @synthesize tabSets_storage;
- (void)editTabSets:(id)arg1;
- (void)newTabSet:(id)arg1 browserContentView:(id)arg2;
- (void)deleteTabSet:(id)arg1;
- (void)addTabSet:(id)arg1;
- (id)tabSetNames;
- (id)tabSetWithName:(id)arg1;
- (id)tabSetAtIndex:(unsigned long long)arg1;
- (id)tabSets;
- (id)init;
- (void)dealloc;
- (void)editorResults:(id)arg1;
- (void)doSaveToPreferencesAfterDelay:(id)arg1;
- (void)loadFromPrefs;
- (void)saveToPreferences;
- (void)addedOrDeletedTabSet;
- (void)tabBarNamesNotification:(id)arg1;
- (void)newTabSet_message:(id)arg1;

@end

@interface NTTabSet : NSObject
{
    NSString *name;
    NSArray *tabModels;
    NSNumber *selectedTab;
}

+ (id)tabSet:(id)arg1 tabModels:(id)arg2 selectedTab:(unsigned long long)arg3;
@property(retain, nonatomic) NSNumber *selectedTab; // @synthesize selectedTab;
@property(retain, nonatomic) NSArray *tabModels; // @synthesize tabModels;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NTDisplayInTextEditorNotificationHandler : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)displayTextNotification:(id)arg1;
- (id)init;

@end

@interface NTModulePluginMgr : NTSingletonObject
{
    NSDictionary *mPluginSpecs;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (BOOL)pluginIDExists:(id)arg1;
- (id)displayNameForPluginID:(id)arg1;
- (id)pluginWithID:(id)arg1 host:(id)arg2;
- (id)pluginIDs;
- (void)dealloc;
- (void)setPluginSpecs:(id)arg1;
- (id)pluginSpecs;

@end

@interface NTModulePlugin : NSObject
{
    NTPluginSpec *pluginSpec;
    id <NTModulePluginProtocol> mPluginInstance;
    NTCocoaPluginHost *host;
    BOOL localized;
}

+ (id)plugin:(id)arg1 host:(id)arg2;
@property(retain) NTPluginSpec *pluginSpec; // @synthesize pluginSpec;
@property(retain) NTCocoaPluginHost *host; // @synthesize host;
@property BOOL localized; // @synthesize localized;
- (void)browserEvent:(unsigned long long)arg1 browserID:(id)arg2;
- (id)menu;
- (id)view;
- (id)displayName;
- (id)identifier;
- (void)dealloc;
- (void)setPluginInstance:(id)arg1;
- (id)pluginInstance;

@end

@interface NTPluginModule : NTSubmodule
{
    NTModulePlugin *mModulePlugin;
    NSString *pluginID;
    int location;
    NSDictionary *pluginParams;
    BOOL refreshIfMadeVisible;
}

+ (id)module:(id)arg1 modulePrefsKey:(id)arg2 pluginID:(id)arg3 location:(int)arg4 pluginParams:(id)arg5;
+ (id)module:(id)arg1 modulePrefsKey:(id)arg2 pluginID:(id)arg3 location:(int)arg4;
@property BOOL refreshIfMadeVisible; // @synthesize refreshIfMadeVisible;
@property(retain) NSDictionary *pluginParams; // @synthesize pluginParams;
@property int location; // @synthesize location;
@property(retain) NSString *pluginID; // @synthesize pluginID;
- (void)dealloc;
- (void)setup;
- (void)createSubviews;
- (void)setModulePlugin:(id)arg1;
- (id)modulePlugin;
- (void)delayedVisibleRefresh;
- (void)sendHiddenBrowserEvent:(BOOL)arg1;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (void)frameDidChange;
- (id)menu;

@end

@interface NTMultiModuleView : NTView
{
    NSArray *mModulePlugins;
    NSArray *headers;
    NSString *autosaveName;
    NSArray *mModels;
    BOOL sentSaveAfterDelay;
    id host;
}

+ (id)view:(struct CGRect)arg1 autosaveName:(id)arg2 host:(id)arg3;
@property(nonatomic) BOOL sentSaveAfterDelay; // @synthesize sentSaveAfterDelay;
@property(retain, nonatomic) NSArray *headers; // @synthesize headers;
@property(retain, nonatomic) NSString *autosaveName; // @synthesize autosaveName;
@property(retain, nonatomic) id host; // @synthesize host;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)setModels:(id)arg1;
- (id)models;
- (void)setModulePlugins:(id)arg1;
- (id)modulePlugins;
- (void)frameDidChange;
- (void)createSubviews;
- (void)resizeWindowToFit;
- (void)setup;
- (BOOL)isFlipped;
- (void)viewDidMoveToWindow;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)saveAfterDelay;
- (void)saveModelsToPrefs;
- (void)loadModelsFromPrefs;
- (id)prefsKey;
- (id)defaultModels;

@end

@interface NTMultiModuleHeader : NTView
{
    NTStringView *stringView;
    NSMutableDictionary *model;
    NTTemplateButton *optionsPopup;
    NSButton *disclosureButton;
}

+ (unsigned long long)defaultHeight;
+ (id)header:(id)arg1 menu:(id)arg2;
@property(retain, nonatomic) NSButton *disclosureButton; // @synthesize disclosureButton;
@property(retain, nonatomic) NTTemplateButton *optionsPopup; // @synthesize optionsPopup;
@property(retain, nonatomic) NSMutableDictionary *model; // @synthesize model;
@property(retain, nonatomic) NTStringView *stringView; // @synthesize stringView;
- (void)updateForExpandedState;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)dealloc;
- (void)mouseDown:(id)arg1;
- (void)clearBindings;
- (void)setBindings;
- (void)frameDidChange;
- (void)createSubviews;
- (void)setup;
- (void)windowStateChangedNotification:(id)arg1;

@end

@interface NTInfoInspector : NTWindowController <NTWindowURLSetterDelegate, NSWindowDelegate>
{
    NTWindowSaveHelper *windowSaveHelper;
    NTMultiModuleView *view;
    NSArray *descs;
    NTWindowTitleSetter *titleSetter;
}

+ (id)infoWindow:(id)arg1;
+ (void)toggleInspector;
+ (id)inspector:(id)arg1;
+ (id)selectInfoWindowWithDescs:(id)arg1;
@property(retain, nonatomic) NTWindowTitleSetter *titleSetter; // @synthesize titleSetter;
@property(retain, nonatomic) NSArray *descs; // @synthesize descs;
@property(retain, nonatomic) NTMultiModuleView *view; // @synthesize view;
@property(retain, nonatomic) NTWindowSaveHelper *windowSaveHelper; // @synthesize windowSaveHelper;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (BOOL)validateMenuItem:(id)arg1;
- (void)windowPopUpMenuAction:(id)arg1;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (BOOL)contentsMatch:(id)arg1;
- (id)windowURLSetter_window:(id)arg1;

@end

@interface NTTerminalMgr : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)showInTerminalWithBehavior:(long long)arg1 directory:(id)arg2;
- (void)showInTerminal:(id)arg1;
- (void)showPath:(id)arg1 inTerminal:(id)arg2;
- (BOOL)launchTerminalIfNeeded:(id)arg1;
- (void)postTerminalNotificationName:(id)arg1;

@end

@interface NTFloatingModulePanel : NTWindowController
{
    NTWindowSaveHelper *mWindowSaveHelper;
    NTModulePlugin *mModule;
    NTTemplateButton *mPopUpButton;
    NSString *mPluginIdentifier;
}

- (void)setOtherParams:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;
- (BOOL)wantsSmallScrollBarsInWebView;
- (void)installPopUpButton;
- (void)setPopUpButton:(id)arg1;
- (id)popUpButton;
- (void)setWindowSaveHelper:(id)arg1;
- (id)windowSaveHelper;
- (void)setPluginIdentifier:(id)arg1;
- (id)pluginIdentifier;
- (void)setModule:(id)arg1;
- (id)module;

@end

@interface NTMenuPluginInstance : NSObject
{
    id mPluginInstance;
    NTPluginSpec *pluginSpec;
}

+ (id)plugin:(id)arg1;
@property(retain, nonatomic) NTPluginSpec *pluginSpec; // @synthesize pluginSpec;
- (id)processItems:(id)arg1 parameter:(id)arg2;
- (id)contextualMenuItem;
- (id)menuItem;
- (BOOL)displayInPluginsMenu;
- (id)displayName;
- (id)identifier;
- (void)dealloc;
- (void)setPluginInstance:(id)arg1;
- (id)pluginInstance;

@end

@interface NTSDKMaker : NSObject
{
    unsigned long long mStep;
    NTFileDesc *mDestinationFolder;
    NTFileDesc *mSourceFolder;
    NTActionToken *mActionToken;
}

+ (void)create;
- (void)dealloc;
- (id)init;
- (void)doNextStep;
- (void)setStep:(unsigned long long)arg1;
- (unsigned long long)step;
- (void)setActionToken:(id)arg1;
- (id)actionToken;
- (void)setSourceFolder:(id)arg1;
- (id)sourceFolder;
- (void)setDestinationFolder:(id)arg1;
- (id)destinationFolder;
- (void)confirmSourceFolder;
- (void)askUserSourceFolderCallback:(id)arg1;
- (void)copy:(id)arg1 source:(id)arg2 destination:(id)arg3;
- (id)createDestination:(id)arg1;
- (void)copyAdvancedPlugins;
- (void)copyTutorial;
- (void)copyPathFinderRemote;
- (void)copyReadme;
- (void)copyFrameworks;
- (void)copySamplePlugins;
- (void)copyConfigurations;
- (void)copyProtocols;
- (id)urlsInDirectory:(id)arg1 names:(id)arg2;
- (void)copyCompletedNotification:(id)arg1;

@end

@interface NSMenuItemHack : NSObject
{
}

+ (void)install;
- (id)initHackWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;

@end

@interface NTApplicationLauncherController : NSWindowController
{
    NTApplicationLauncherView *mLauncherView;
    NSString *statusMessage;
}

+ (void)launch;
@property(retain) NSString *statusMessage; // @synthesize statusMessage;
- (void)dealloc;
- (void)appWasLaunchedNotification:(id)arg1;
- (void)setLauncherView:(id)arg1;
- (id)launcherView;
- (id)uiBinder;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)close;
- (BOOL)windowShouldClose:(id)arg1;
- (void)showWindow:(id)arg1;

@end

@interface NTApplicationLauncherView : NTView <NTLauncherMatrixContentDelegate>
{
    NTLauncherMatrixContent *matrixContent;
    NTCollectionView *collectionView;
}

@property(retain) NTLauncherMatrixContent *matrixContent; // @synthesize matrixContent;
@property(retain) NTCollectionView *collectionView; // @synthesize collectionView;
- (id)uiBinder;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)matrixContent_modelsUpdated:(id)arg1;

@end

@interface NTLauncherFileModel : NSObject
{
    BOOL _running;
    BOOL _recent;
    NSNumber *_uniqueID;
    NTFileDesc *_desc;
    long long _rating;
    NSString *_compareName;
}

+ (id)model:(id)arg1 isRunning:(BOOL)arg2 recent:(BOOL)arg3;
+ (id)models;
+ (id)recentApplicationsURLs;
+ (id)runningApplications;
@property(retain) NSString *compareName; // @synthesize compareName=_compareName;
@property BOOL recent; // @synthesize recent=_recent;
@property BOOL running; // @synthesize running=_running;
@property long long rating; // @synthesize rating=_rating;
@property(retain) NTFileDesc *desc; // @synthesize desc=_desc;
@property(retain) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
- (id)name;
- (void)dealloc;
- (long long)compareByName:(id)arg1;
- (id)description;

@end

@interface NTApplicationLauncherWindow : NSPanel
{
    NTEventOverrideHandler *handler;
}

@property(retain) NTEventOverrideHandler *handler; // @synthesize handler;
- (void)dealloc;
- (void)sendEvent:(id)arg1;

@end

@interface NTBrowserRightView : NTBoxView
{
    BOOL _hasSetupSplitView;
    NSView *_mainView;
    NSView *_bottomView;
    NSSplitView *_rightSplitView;
    NTSplitViewDelegate *_splitViewDelegate;
}

@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NSSplitView *rightSplitView; // @synthesize rightSplitView=_rightSplitView;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NSView *bottomView; // @synthesize bottomView=_bottomView;
@property(retain, nonatomic) NSView *mainView; // @synthesize mainView=_mainView;
- (BOOL)isBottomHidden;
- (void)installView:(id)arg1 bottom:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)bottomShelfIsVisible:(id)arg1;
- (void)showBottomShelf:(id)arg1;
- (void)createViews;
- (void)viewWillDraw;
- (void)arrangeSubviews;
- (void)frameDidChange;
- (void)splitViewCollapseStateChanged:(id)arg1;

@end

@interface NTSidebarResizeControl : NTView
{
    NSMenu *_actionMenu;
    NTTemplateButton *_actionButton;
    NSString *_splitViewID;
    struct CGPoint _offsetFromMouse;
}

+ (unsigned long long)defaultHeight;
+ (id)control:(id)arg1;
@property(nonatomic) struct CGPoint offsetFromMouse; // @synthesize offsetFromMouse=_offsetFromMouse;
@property(retain, nonatomic) NSString *splitViewID; // @synthesize splitViewID=_splitViewID;
@property(retain, nonatomic) NTTemplateButton *actionButton; // @synthesize actionButton=_actionButton;
@property(retain, nonatomic) NSMenu *actionMenu; // @synthesize actionMenu=_actionMenu;
- (struct CGRect)dragRectInWindowCoordinates;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)allowsVibrancy;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)createVerticalResizeBitmapRep:(id)arg1 shadowColor:(id)arg2 multiplier:(unsigned long long)arg3;
- (id)verticalResizeImage:(BOOL)arg1;
- (void)frameDidChange;
- (void)setup;
- (struct CGRect)actionButtonFrame;
- (struct CGRect)resizeFrame;
- (void)windowStateChanged:(id)arg1;

@end

@interface NTApplicationLauncherContentView : NTBackgroundView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)drawBackRect:(struct CGRect)arg1;

@end

@interface NTFloatingModuleMgr : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)toggle:(id)arg1;
- (BOOL)isOpen:(id)arg1;
- (void)end;
- (void)start;
- (BOOL)validateMenuItem:(id)arg1;
- (void)newFloatingModulePanelAction:(id)arg1;
- (void)installModuleMenu;

@end

@interface NTBrowserViewOptionsToggleButton : NSButton
{
    NSImage *mButtonImage;
    NSImage *mOnButtonImage;
    NSImage *mDisabledButtonImage;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (id)createButtonImage:(BOOL)arg1 enabled:(BOOL)arg2;
- (struct CGSize)buttonSize;
- (void)setDisabledButtonImage:(id)arg1;
- (id)disabledButtonImage;
- (void)setOnButtonImage:(id)arg1;
- (id)onButtonImage;
- (void)setButtonImage:(id)arg1;
- (id)buttonImage;
- (struct CGRect)buttonRect;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;

@end

@interface NTOutlineTreeNodeMgr : NSObject
{
    id <NTOutlineTreeNodeMgrDelegateProtocol> delegate;
    NSString *browserID;
    NTProxy *mNodeMgrProxy;
    NSMutableArray *mNodesWithChildren;
    NTFileServerRequest *rootRequest;
    NSArray *mRootChildren;
    BOOL enableExpandChildrenMode;
    BOOL restoringExpandedNodes;
}

+ (id)nodeMgr:(id)arg1 browserID:(id)arg2;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
@property(nonatomic) BOOL restoringExpandedNodes; // @synthesize restoringExpandedNodes;
@property id <NTOutlineTreeNodeMgrDelegateProtocol> delegate; // @synthesize delegate;
@property(nonatomic) BOOL enableExpandChildrenMode; // @synthesize enableExpandChildrenMode;
@property(retain, nonatomic) NTFileServerRequest *rootRequest; // @synthesize rootRequest;
- (id)rootChildren;
- (void)reloadNodesWithItems:(id)arg1 forRequest:(id)arg2;
- (void)setList:(id)arg1 forRequest:(id)arg2;
- (void)setRootList:(id)arg1 forRequest:(id)arg2;
- (void)clearDelegate;
- (void)dealloc;
- (void)reloadNode:(id)arg1 reloadChildren:(BOOL)arg2;
- (void)expandNode:(id)arg1 expandChildren:(BOOL)arg2;
- (id)childrenForNode:(id)arg1;
- (id)nodesForItems:(id)arg1 forRequest:(id)arg2;
- (void)setNodesWithChildren:(id)arg1;
- (id)nodesWithChildren;
- (void)setNodeMgrProxy:(id)arg1;
- (id)nodeMgrProxy;
- (id)itemsToNodes:(id)arg1 parent:(id)arg2;
- (id)nodesWithChildrenForRequest:(id)arg1;
- (void)setRootChildren:(id)arg1;
- (void)recursiveExpandNodes:(id)arg1 itemsToExpand:(id)arg2 aliasesExpanded:(id)arg3;
- (void)expandNodes:(id)arg1 itemsToExpand:(id)arg2;
- (id)itemsToExpandInDirectory:(id)arg1;

@end

@interface NTNewTabSubmenu : NTSingletonObject <NSMenuDelegate>
{
    unsigned long long _newTabIndex;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(nonatomic) unsigned long long newTabIndex; // @synthesize newTabIndex=_newTabIndex;
- (id)init;
- (void)menuNeedsUpdate:(id)arg1;
- (void)install;

@end

@interface NTFindOutlineView : NTOutlineView
{
}

- (void)keyDown:(id)arg1;
- (unsigned long long)focusRingType;

@end

@interface NTPluginEditorController : NSWindowController
{
    NSWindow *mSheetWindow;
    NSMutableDictionary *mModel;
    NTWindowSaveHelper *mWindowSaveHelper;
}

+ (void)editor:(id)arg1;
- (void)windowDidLoad;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)dealloc;
- (id)init;
- (void)okButton:(id)arg1;
- (void)cancelButton:(id)arg1;
- (void)buildModel;
- (void)setWindowSaveHelper:(id)arg1;
- (id)windowSaveHelper;
- (void)setSheetWindow:(id)arg1;
- (id)sheetWindow;
- (void)setModel:(id)arg1;
- (id)model;
- (void)doClose:(BOOL)arg1;

@end

@interface NTFilteredSortDescriptor : NSSortDescriptor
{
    NSString *filter;
    NSPredicate *beginsWithPredicate;
}

+ (id)sortDescriptor:(id)arg1;
@property(retain) NSPredicate *beginsWithPredicate; // @synthesize beginsWithPredicate;
@property(retain) NSString *filter; // @synthesize filter;
- (long long)compareObject:(id)arg1 toObject:(id)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface NTPrivatePluginHost : NSObject
{
    id <NTPathFinderPluginHostProtocol> host;
}

+ (id)privateHost:(id)arg1;
@property(retain) id <NTPathFinderPluginHostProtocol> host; // @synthesize host;
- (void)renameFileDesc_message:(id)arg1;
- (void)renameItem:(id)arg1 withName:(id)arg2;
- (void)renameAction:(id)arg1;
- (void)lsofAction:(id)arg1;
- (void)ejectAction:(id)arg1;
- (void)showInNewWindowAction:(id)arg1;
- (void)showOriginalAction:(id)arg1;
- (void)getInfoAction:(id)arg1;
- (void)showPackageContentsAction:(id)arg1;
- (void)openInTabAction:(id)arg1;
- (id)sourceListContextualMenu:(id)arg1;
- (void)dealloc;

@end

@interface NTSourceListColumn : NTBoxView
{
    NSMutableDictionary *_model;
    NSView *_containerView;
    NTSidebarResizeControl *_sidebarControl;
    NTSourceListColumnView *_sourceListView;
}

+ (id)column:(id)arg1;
@property(retain, nonatomic) NTSourceListColumnView *sourceListView; // @synthesize sourceListView=_sourceListView;
@property(retain, nonatomic) NTSidebarResizeControl *sidebarControl; // @synthesize sidebarControl=_sidebarControl;
@property(retain, nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) NSMutableDictionary *model; // @synthesize model=_model;
- (void)dealloc;
- (void)createViews:(id)arg1;
- (void)frameDidChange;
- (void)splitViewRectNotification:(id)arg1;

@end

@interface NTRecentServersMenu : NSMenu <NSMenuDelegate>
{
    SEL menuAction;
    id menuTarget;
    BOOL clearItem;
    BOOL smallFont;
}

+ (id)menu:(SEL)arg1 target:(id)arg2 smallFont:(BOOL)arg3 clearItem:(BOOL)arg4;
@property BOOL smallFont; // @synthesize smallFont;
@property BOOL clearItem; // @synthesize clearItem;
@property(retain) id menuTarget; // @synthesize menuTarget;
@property SEL menuAction; // @synthesize menuAction;
- (void)dealloc;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTRecentServersMenuInstaller : NSObject
{
    unsigned long long tag;
}

+ (void)install:(unsigned long long)arg1;
@property unsigned long long tag; // @synthesize tag;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)dealloc;

@end

@interface NTRecentDocumentsMenu : NSMenu <NSMenuDelegate>
{
    BOOL needsRefresh;
}

+ (void)install:(unsigned long long)arg1;
@property BOOL needsRefresh; // @synthesize needsRefresh;
- (void)updateMenuNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTRecentApplicationsMenu : NSMenu <NSMenuDelegate>
{
    BOOL needsRefresh;
}

+ (void)install:(unsigned long long)arg1;
@property BOOL needsRefresh; // @synthesize needsRefresh;
- (void)updateMenuNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTBrowserDocumentModel : NSObject
{
    BOOL _preventUISync;
    BOOL _sentDelayedUpdateModel;
    BOOL _modelInitialized;
    NSMutableDictionary *_content;
    NSWindow *_window;
}

+ (id)model:(id)arg1;
@property(nonatomic) BOOL modelInitialized; // @synthesize modelInitialized=_modelInitialized;
@property(nonatomic) BOOL sentDelayedUpdateModel; // @synthesize sentDelayedUpdateModel=_sentDelayedUpdateModel;
@property(nonatomic) BOOL preventUISync; // @synthesize preventUISync=_preventUISync;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSMutableDictionary *content; // @synthesize content=_content;
- (void)updateModel;
- (void)toggleVisible:(id)arg1;
- (BOOL)visible:(id)arg1;
- (void)invalidate;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (void)updateModelNow;
- (void)setVisible:(BOOL)arg1 forKey:(id)arg2 updateUI:(BOOL)arg3;

@end

@interface NTDropStackHeaderView : NTView <NTKVObserverProxyDelegate>
{
    BOOL drawDragDropFrame;
    NSMutableDictionary *model;
    NTDropStackPopUpButton *popUpButton;
    NTKVObserverProxy *observerProxy;
    NTDragInfoCache *dragCache;
    NTDropStackDataMgr *dropStackDataMgr;
    long long toolTipTag;
    NSButton *disclosureButton;
    NSDate *springloadStartDate;
}

+ (unsigned long long)defaultHeight;
+ (id)view:(id)arg1 dataMgr:(id)arg2;
@property(retain, nonatomic) NSDate *springloadStartDate; // @synthesize springloadStartDate;
@property(retain, nonatomic) NSButton *disclosureButton; // @synthesize disclosureButton;
@property(nonatomic) long long toolTipTag; // @synthesize toolTipTag;
@property(retain, nonatomic) NTDropStackDataMgr *dropStackDataMgr; // @synthesize dropStackDataMgr;
@property(retain, nonatomic) NTDragInfoCache *dragCache; // @synthesize dragCache;
@property(nonatomic) BOOL drawDragDropFrame; // @synthesize drawDragDropFrame;
@property(retain, nonatomic) NTKVObserverProxy *observerProxy; // @synthesize observerProxy;
@property(retain, nonatomic) NTDropStackPopUpButton *popUpButton; // @synthesize popUpButton;
@property(retain, nonatomic) NSMutableDictionary *model; // @synthesize model;
- (void)drawRect:(struct CGRect)arg1;
- (void)frameDidChange;
- (void)setLayer:(id)arg1;
- (void)dealloc;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)arrangeSubviews;
- (void)installSubviews;
- (void)invalidateDragDropIndicatorRect;
- (BOOL)isOpaque;
- (void)cleanUpAfterDrag;
- (void)windowStateChangedNotification:(id)arg1;
- (void)windowDidResizeNotification:(id)arg1;
- (void)removeBindings;
- (void)setBindings;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;

@end

@interface NTDropStackView : NTView <NTAnimationDelegateProtocol>
{
    BOOL _drawDragDropFrame;
    BOOL _dragWithCopyOperation;
    BOOL _thisViewIsDragging;
    BOOL _removeAllDragMode;
    BOOL _drawForDraggingImage;
    BOOL _rounded;
    NTDropStackDataMgr *_dropStackDataMgr;
    NTDragInfoCache *_dragCache;
    NTStringView *_stringView;
    NTStaticImageView *_imageView;
    NTStaticImageView *_multiDragView;
    NSString *_tooltipString;
    NTGradient *_gradient;
    NSMutableDictionary *_model;
    NTAnimationDelegate *_animationDelegate;
    NSImage *_targetImage;
    NSImage *_cachedContentImage;
    NSImage *_cachedContentImageDimmed;
    NSImage *_cachedContentImageDropTarget;
    NSImage *_cachedContentImageDropTargetDimmed;
    struct CGRect _cachedContentImageRect;
}

+ (long long)defaultHeight;
+ (id)view:(id)arg1 dataMgr:(id)arg2 rounded:(BOOL)arg3;
@property(nonatomic) BOOL rounded; // @synthesize rounded=_rounded;
@property(nonatomic) struct CGRect cachedContentImageRect; // @synthesize cachedContentImageRect=_cachedContentImageRect;
@property(retain, nonatomic) NSImage *cachedContentImageDropTargetDimmed; // @synthesize cachedContentImageDropTargetDimmed=_cachedContentImageDropTargetDimmed;
@property(retain, nonatomic) NSImage *cachedContentImageDropTarget; // @synthesize cachedContentImageDropTarget=_cachedContentImageDropTarget;
@property(retain, nonatomic) NSImage *cachedContentImageDimmed; // @synthesize cachedContentImageDimmed=_cachedContentImageDimmed;
@property(retain, nonatomic) NSImage *cachedContentImage; // @synthesize cachedContentImage=_cachedContentImage;
@property(nonatomic) BOOL drawForDraggingImage; // @synthesize drawForDraggingImage=_drawForDraggingImage;
@property(nonatomic) BOOL removeAllDragMode; // @synthesize removeAllDragMode=_removeAllDragMode;
@property(nonatomic) BOOL thisViewIsDragging; // @synthesize thisViewIsDragging=_thisViewIsDragging;
@property(nonatomic) BOOL dragWithCopyOperation; // @synthesize dragWithCopyOperation=_dragWithCopyOperation;
@property(nonatomic) BOOL drawDragDropFrame; // @synthesize drawDragDropFrame=_drawDragDropFrame;
@property(retain, nonatomic) NSImage *targetImage; // @synthesize targetImage=_targetImage;
@property(retain, nonatomic) NTAnimationDelegate *animationDelegate; // @synthesize animationDelegate=_animationDelegate;
@property(retain, nonatomic) NSMutableDictionary *model; // @synthesize model=_model;
@property(retain, nonatomic) NTGradient *gradient; // @synthesize gradient=_gradient;
@property(retain, nonatomic) NSString *tooltipString; // @synthesize tooltipString=_tooltipString;
@property(retain, nonatomic) NTStaticImageView *multiDragView; // @synthesize multiDragView=_multiDragView;
@property(retain, nonatomic) NTStaticImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) NTStringView *stringView; // @synthesize stringView=_stringView;
@property(retain, nonatomic) NTDragInfoCache *dragCache; // @synthesize dragCache=_dragCache;
@property(retain, nonatomic) NTDropStackDataMgr *dropStackDataMgr; // @synthesize dropStackDataMgr=_dropStackDataMgr;
- (void)frameDidChange;
- (void)dealloc;
- (id)draggingImage:(struct CGPoint *)arg1 multiDrag:(BOOL)arg2;
- (void)performDrag:(id)arg1 multiDrag:(BOOL)arg2;
- (void)invalidateDragDropIndicatorRect;
- (id)addKopyIndicatorToImage:(id)arg1;
- (id)downArrowImage;
- (id)downArrowPath:(struct CGRect)arg1;
- (void)drawDragDropRect:(struct CGRect)arg1;
- (id)attributes:(id)arg1;
- (id)tooltipString:(id)arg1 namesOnly:(BOOL)arg2;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)arrangeSubviews;
- (struct CGRect)iconRect:(struct CGRect *)arg1;
- (struct CGRect)insetContentBounds;
- (void)drawInteriorInRect:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBackgroundInSubview:(id)arg1 inRect:(struct CGRect)arg2;
- (id)createContentBitmapRep:(unsigned long long)arg1;
- (id)createContentImage;
- (id)contentImage;
- (void)update;
- (id)multiDragTooltipString;
- (void)dropStackDataNotification:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)animationDelegateView:(id)arg1;
- (void)animationDelegateDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDelegateDidStart:(id)arg1;

@end

@interface NTSourceListColumnView : NTView <NTKVObserverProxyDelegate, NTAnimationDelegateProtocol>
{
    NTModule *_sourceListModule;
    NTDropStackModule *_dropStackModule;
    NSMutableDictionary *_model;
    NTKVObserverProxy *_observerProxy;
    NTAnimationDelegate *_animationDelegate;
}

+ (id)view:(id)arg1 defaultsClient:(id)arg2;
@property(retain) NTAnimationDelegate *animationDelegate; // @synthesize animationDelegate=_animationDelegate;
@property(retain) NTKVObserverProxy *observerProxy; // @synthesize observerProxy=_observerProxy;
@property(retain) NSMutableDictionary *model; // @synthesize model=_model;
@property(retain) NTDropStackModule *dropStackModule; // @synthesize dropStackModule=_dropStackModule;
@property(retain) NTModule *sourceListModule; // @synthesize sourceListModule=_sourceListModule;
- (id)moduleMenu;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)frameDidChange;
- (void)arrangeSubviews:(BOOL)arg1;
- (void)appearanceMgrChangedNotification:(id)arg1;
- (void)createViews:(id)arg1;
- (void)removeKVObserver;
- (void)addKVObserver;
- (id)animationDelegateView:(id)arg1;
- (void)animationDelegateDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDelegateDidStart:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface NTDropStackDataMgr : NSObject <NSMenuDelegate>
{
    NSMutableArray *dragDropStack;
    NSMenu *stackMenu;
}

+ (id)dataMgr;
@property(retain, nonatomic) NSMenu *stackMenu; // @synthesize stackMenu;
@property(retain, nonatomic) NSMutableArray *dragDropStack; // @synthesize dragDropStack;
- (id)contextualStackMenu;
- (id)peek;
- (BOOL)isEmpty;
- (id)peekDescs:(char *)arg1 all:(BOOL)arg2;
- (id)popDescs:(BOOL)arg1;
- (id)pop;
- (void)pushToEnd:(id)arg1;
- (void)push:(id)arg1;
- (void)removeAll;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)numItems;
- (void)dealloc;
- (BOOL)validateMenuItem:(id)arg1;
- (void)dragDropStackAction:(id)arg1;
- (void)removeAllAction:(id)arg1;
- (void)removeOneAction:(id)arg1;
- (void)compressAndEmailAction:(id)arg1;
- (void)keepCopiedDropStackItemsAction:(id)arg1;
- (void)keepDropStackExpandedAction:(id)arg1;
- (void)compressAction:(id)arg1;
- (void)burnAction:(id)arg1;
- (id)sheetWindow;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (id)iconForDragData:(id)arg1;
- (id)stringForDragData:(id)arg1;
- (void)dropStack_removeObjectAtIndex:(unsigned long long)arg1;
- (void)dropStack_removeAll;
- (void)dropStack_addObject:(id)arg1;
- (void)dropStack_addObjectToFront:(id)arg1;
- (void)buildStackMenuInMenu:(id)arg1 contexualMenu:(BOOL)arg2;

@end

@interface NTDropStackPopUpButton : NSPopUpButton
{
    NSMenu *alternateMenu;
}

+ (id)button;
+ (Class)cellClass;
@property(retain) NSMenu *alternateMenu; // @synthesize alternateMenu;
- (void)sizeToFit;
- (void)rightMouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)dealloc;

@end

@interface NTDropStackPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)popUpMenu:(struct CGRect)arg1 controlView:(id)arg2;

@end

@interface NTFileBrowserContainerView : NTView
{
    BOOL _dualBrowserMode;
    BOOL _hasSetupSplitView;
    BOOL _verticalDualBrowser;
    BOOL _centeredDualBrowser;
    BOOL _synchronizingSplitView;
    NTFileBrowserView *_browserViewLeft;
    NTFileBrowserView *_browserViewRight;
    NTFileBrowserView *_browserView;
    NTBookmarksContainerView *_bookmarksBar;
    NTBrowserOptionsModel *_documentOptions;
    NTDualBrowserSplitView *_splitView;
    NTSplitViewDelegate *_splitViewDelegate;
    NTFileBrowserView *_defaultCurrentBrowser;
    double _preCollapsedPosition;
}

+ (id)view:(id)arg1;
@property(nonatomic) BOOL synchronizingSplitView; // @synthesize synchronizingSplitView=_synchronizingSplitView;
@property(nonatomic) double preCollapsedPosition; // @synthesize preCollapsedPosition=_preCollapsedPosition;
@property(nonatomic) BOOL centeredDualBrowser; // @synthesize centeredDualBrowser=_centeredDualBrowser;
@property(nonatomic) BOOL verticalDualBrowser; // @synthesize verticalDualBrowser=_verticalDualBrowser;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NTFileBrowserView *defaultCurrentBrowser; // @synthesize defaultCurrentBrowser=_defaultCurrentBrowser;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NTDualBrowserSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) NTBrowserOptionsModel *documentOptions; // @synthesize documentOptions=_documentOptions;
@property(retain, nonatomic) NTBookmarksContainerView *bookmarksBar; // @synthesize bookmarksBar=_bookmarksBar;
@property(retain, nonatomic) NTFileBrowserView *browserView; // @synthesize browserView=_browserView;
@property(retain, nonatomic) NTFileBrowserView *browserViewRight; // @synthesize browserViewRight=_browserViewRight;
@property(retain, nonatomic) NTFileBrowserView *browserViewLeft; // @synthesize browserViewLeft=_browserViewLeft;
@property(nonatomic) BOOL dualBrowserMode; // @synthesize dualBrowserMode=_dualBrowserMode;
- (void)setPathBarEditable:(BOOL)arg1;
- (void)swapBrowserPanes;
- (BOOL)altBrowserIsCurrent;
- (void)switchFirstResponder:(id)arg1;
- (void)setTabSet:(id)arg1;
- (id)tabSet:(id)arg1;
- (id)addBrowser:(id)arg1;
- (id)browserTabModels;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTab:(id)arg1;
- (id)recentRequestManager;
- (unsigned long long)numberOfTabsTotal;
- (unsigned long long)numberOfTabs;
- (void)selectTabAtIndex:(unsigned long long)arg1;
- (void)selectPreviousTab;
- (void)selectNextTab;
- (void)showTab:(id)arg1 selectDescs:(id)arg2 selectExisting:(BOOL)arg3;
- (BOOL)selectTab:(id)arg1 selectDescs:(id)arg2;
- (id)browserWithID:(id)arg1;
- (id)browser;
- (void)dealloc;
- (void)frameDidChange;
- (void)viewWillDraw;
- (void)viewDidMoveToWindow;
- (void)syncDualBrowserViewsSwapped;
- (id)browserIDForLeftView:(BOOL)arg1;
- (void)saveTabModels:(id)arg1 selectedTab:(unsigned long long)arg2 alternateBrowser:(BOOL)arg3;
- (void)updateDocumentOptions;
- (void)setupBrowserViews:(BOOL)arg1 currentView:(id)arg2;
- (BOOL)deleteDualBrowserViews;
- (BOOL)deleteSingleBrowserViews;
- (void)syncWithBrowserDocumentOptions;
- (void)repositionsViews;
- (id)currentBrowserView;
- (void)preferencesModified:(id)arg1;
- (void)dualShelfSplitViewDidResizeSubviews:(id)arg1;
- (void)dualBrowserSplitViewWillCollapseView:(id)arg1;
- (void)dualBrowserSplitViewDidDragDivider:(id)arg1;
- (void)setDefaultFirstResponderNotification:(id)arg1;
- (void)saveDocumentState:(id)arg1;
- (void)appearanceMgrChangedNotification:(id)arg1;
- (void)browserDocumentOptionsNotification:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;

@end

@interface NTDualBrowserSplitView : NSSplitView
{
}

- (void)drawDividerInRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface NTCountBadge : NSObject
{
}

+ (id)badge;
- (void)drawInRect:(struct CGRect)arg1 count:(unsigned long long)arg2 flipped:(BOOL)arg3;
- (id)attributes;

@end

@interface NTFindResultsContentView : NTBoxView
{
    NSView *_mainView;
    NSView *_bottomView;
}

@property(retain, nonatomic) NSView *bottomView; // @synthesize bottomView=_bottomView;
@property(retain, nonatomic) NSView *mainView; // @synthesize mainView=_mainView;
- (void)frameDidChange;
- (void)setup;
- (void)installMainView:(id)arg1 bottomView:(id)arg2;
- (void)dealloc;

@end

@interface NTDayChangedNotification : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)sendNotification;
- (id)init;
- (void)scheduleNotification;

@end

@interface NTLauncherFileLayer : CALayer
{
    NTLauncherFileModel *_model;
    CALayer *_iconLayer;
    CATextLayer *_textLayer;
}

+ (id)layerWithModel:(id)arg1;
+ (id)backColor;
+ (id)fillColor;
+ (unsigned long long)imageSize;
+ (struct CGSize)defaultSize;
+ (struct dispatch_queue_s *)iconCreateQueue;
+ (struct dispatch_queue_s *)fileIOQueue;
@property(retain) CATextLayer *textLayer; // @synthesize textLayer=_textLayer;
@property(retain) CALayer *iconLayer; // @synthesize iconLayer=_iconLayer;
@property(retain) NTLauncherFileModel *model; // @synthesize model=_model;
- (void)drawInContext:(struct CGContext *)arg1;
- (long long)compareByLayerIndex:(id)arg1;
- (void)dealloc;
- (void)createIconAsync;

@end

@interface NTGotoBackButton : NSButton
{
    NSTrackingArea *trackingArea;
    NSImage *normalImage;
    NSImage *mouseOverImage;
    BOOL mMouseOver;
}

@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea;
@property(retain, nonatomic) NSImage *mouseOverImage; // @synthesize mouseOverImage;
@property(retain, nonatomic) NSImage *normalImage; // @synthesize normalImage;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)installMouseTracker;
- (void)setMouseOver:(BOOL)arg1;
- (BOOL)mouseOver;

@end

@interface NTGotoPopUpButton : NSPopUpButton
{
    NSImage *normalImage;
    NSImage *mouseOverImage;
    BOOL mMouseOver;
    NSTrackingArea *trackingArea;
}

@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea;
@property(retain, nonatomic) NSImage *mouseOverImage; // @synthesize mouseOverImage;
@property(retain, nonatomic) NSImage *normalImage; // @synthesize normalImage;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)installMouseTracker;
- (void)setMouseOver:(BOOL)arg1;
- (BOOL)mouseOver;

@end

@interface NTGotoFolder : NSObject
{
    NTFileDesc *directory;
    NSString *name;
    NSString *path;
    NSImage *iconData;
}

+ (id)folder:(id)arg1;
@property(retain, nonatomic) NSImage *iconData; // @synthesize iconData;
@property(retain, nonatomic) NSString *path; // @synthesize path;
@property(retain, nonatomic) NSString *name; // @synthesize name;
@property(retain, nonatomic) NTFileDesc *directory; // @synthesize directory;
- (long long)compareByName:(id)arg1;
- (void)dealloc;

@end

@interface IKImageFlowViewHacks : NSObject
{
}

+ (void)install;
+ (Class)IKImageFlowViewClass;

@end

@interface NTFrameworksMenu : NSMenu <NSMenuDelegate, NSCopying>
{
    NSString *path;
    id target;
    SEL action;
}

+ (id)makeFrameworkMenuItem:(SEL)arg1 target:(id)arg2 framework:(id)arg3;
+ (id)privateFrameworksMenuItem:(SEL)arg1 target:(id)arg2;
+ (id)frameworksMenuItem:(SEL)arg1 target:(id)arg2;
+ (id)menu:(id)arg1 action:(SEL)arg2 target:(id)arg3;
@property SEL action; // @synthesize action;
@property id target; // @synthesize target;
@property(retain) NSString *path; // @synthesize path;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)buildAfterDelay;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTMainSplitView : NSSplitView <NTKVObserverProxyDelegate>
{
    NTKVObserverProxy *observerProxy;
    NTDividerGradient *dividerGradient;
    NTBrowserOptionsModel *documentOptions;
}

+ (id)splitView:(struct CGRect)arg1 documentOptions:(id)arg2;
@property(retain, nonatomic) NTBrowserOptionsModel *documentOptions; // @synthesize documentOptions;
@property(retain, nonatomic) NTDividerGradient *dividerGradient; // @synthesize dividerGradient;
@property(retain, nonatomic) NTKVObserverProxy *observerProxy; // @synthesize observerProxy;
- (void)browserDocumentOptionsNotification:(id)arg1;
- (void)drawDividerInRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface NTModifierKeyActionHandler : NTSingletonObject
{
    double lastModifierDownTime;
    unsigned long long lastModifierFlags;
    NSMutableDictionary *notificationClients;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NSMutableDictionary *notificationClients; // @synthesize notificationClients;
@property unsigned long long lastModifierFlags; // @synthesize lastModifierFlags;
@property double lastModifierDownTime; // @synthesize lastModifierDownTime;
- (void)removeClient:(id)arg1;
- (void)addClient:(id)arg1 forKeyMask:(long long)arg2;
- (void)dealloc;
- (id)init;
- (BOOL)checkForModifierRelease:(unsigned long long)arg1;
- (unsigned long long)keyCodeForKeyMask:(unsigned long long)arg1;
- (void)handleModifierEvent:(id)arg1;
- (void)regisiterForGlobalModifiers;
- (void)modifierFlagsChangedNotification:(id)arg1;

@end

@interface NTProcessesModulePluginHost : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)pluginNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)openObject:(id)arg1 grid:(id)arg2 itemRect:(struct CGRect)arg3;
- (id)contextualMenu:(id)arg1 grid:(id)arg2;
- (void)classDumpReportAction:(id)arg1;
- (void)disassembleReportAction:(id)arg1;
- (void)symbolTableReportAction:(id)arg1;
- (void)selectionReportAction:(id)arg1;
- (void)forceQuitSelector:(id)arg1;
- (void)contextualMenuAction:(id)arg1;

@end

@interface NTRevealPFToolbarInstallWindow : NSWindowController
{
    NTRevealPFDraggableImageView *imageView;
}

+ (void)show;
@property(retain) NTRevealPFDraggableImageView *imageView; // @synthesize imageView;
- (void)revealInFinderAction:(id)arg1;
- (void)dealloc;
- (id)revealInPFToolBarItem;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (BOOL)windowShouldClose:(id)arg1;
- (void)showWindow:(id)arg1;

@end

@interface NTScreenCastReader : NSObject <NSSpeechSynthesizerDelegate>
{
    NSArray *script;
    unsigned long long nextQueue;
    unsigned long long scriptIndex;
    NSSpeechSynthesizer *speechRobot;
    NSArray *scriptsArray;
}

@property(retain) NSArray *scriptsArray; // @synthesize scriptsArray;
@property(retain) NSSpeechSynthesizer *speechRobot; // @synthesize speechRobot;
@property unsigned long long scriptIndex; // @synthesize scriptIndex;
@property unsigned long long nextQueue; // @synthesize nextQueue;
@property(retain) NSArray *script; // @synthesize script;
- (void)dumpScriptsToText;
- (void)dumpScriptsToFiles;
- (void)reset;
- (void)invalidate;
- (void)dealloc;
- (id)init;
- (id)overviewScript;
- (id)revealScript;
- (id)whatsNewScript;
- (id)dropStackScript;
- (id)addSpeechTagsToLine:(id)arg1;
- (void)handleModifierEvent:(id)arg1;
- (void)modifierFlagsChangedNotification:(id)arg1;
- (void)increment;
- (id)line;
- (void)speakLine;
- (void)next;
- (id)scriptToString:(id)arg1 addSpeechTags:(BOOL)arg2 addNewlines:(BOOL)arg3;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;

@end

@interface NTScreenCastLoader : NTSingletonObject
{
    NTScreenCastReader *reader;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NTScreenCastReader *reader; // @synthesize reader;
- (id)menuItem;
- (void)dealloc;
- (id)init;
- (void)syncWithPrefs;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeKVObserver;
- (void)addKVObserver;
- (void)switchToIndexAction:(id)arg1;
- (void)toggleVoiceOverAction:(id)arg1;
- (void)dumpScriptsToTextAction:(id)arg1;
- (void)dumpScriptsToFilesAction:(id)arg1;

@end

@interface NTATOSTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTTaskController *atosTask;
    NSMutableString *atosOutput;
}

+ (void)run:(BOOL)arg1;
@property(retain) NSMutableString *atosOutput; // @synthesize atosOutput;
@property(retain) NTTaskController *atosTask; // @synthesize atosTask;
- (void)appendAtosOutput:(id)arg1;
- (void)dealloc;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NTPathFinderPasteboardHelper : NSObject <NTPasteboardHelperOwnerProtocol>
{
    BOOL isCut;
    NSArray *descs;
    NTPasteboardHelper *helper;
}

+ (void)helper:(id)arg1 isCut:(BOOL)arg2 notificationName:(id)arg3;
@property BOOL isCut; // @synthesize isCut;
@property(retain) NTPasteboardHelper *helper; // @synthesize helper;
@property(retain) NSArray *descs; // @synthesize descs;
- (void)dealloc;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;

@end

@interface NTDockMenu : NSMenu <NSMenuDelegate>
{
}

+ (id)menu;
- (id)dockMenuItemForDesc:(id)arg1 addSubmenu:(BOOL)arg2;
- (void)dealloc;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTLauncherMatrixContent : NSObject <NTCAMatrixContentProtocol>
{
    NSArray *models;
    id <NTLauncherMatrixContentDelegate> delegate;
    NSString *filter;
    long long searchMode;
    NSColor *backColor;
    id <NTCAMatrixContentLayoutMgrProtocol> layoutManager;
    struct CGSize defaultSize;
}

+ (id)matrixContent:(id)arg1;
@property(retain) id <NTCAMatrixContentLayoutMgrProtocol> layoutManager; // @synthesize layoutManager;
@property(retain) NSColor *backColor; // @synthesize backColor;
@property long long searchMode; // @synthesize searchMode;
@property(retain) NSString *filter; // @synthesize filter;
@property id <NTLauncherMatrixContentDelegate> delegate; // @synthesize delegate;
@property struct CGSize defaultSize; // @synthesize defaultSize;
@property(retain) NSArray *models; // @synthesize models;
- (void)applicationsUpdatedNotification:(id)arg1;
- (void)displayLocation:(id)arg1;
- (void)arrangedObjectsUpdated:(id)arg1 inView:(id)arg2;
- (id)makeFilterPredicate;
- (id)makeSortDescriptor;
- (BOOL)isLayerTypeOK:(id)arg1;
- (id)layerWithModel:(id)arg1;
- (id)uniqueIDForModel:(id)arg1;
- (BOOL)handleKeyDown:(id)arg1 selectedLayer:(id)arg2;
- (void)handleMouseDown:(id)arg1 layer:(id)arg2;
- (void)start;
- (void)dealloc;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (void)startThread;
- (void)launchApplication:(id)arg1;

@end

@interface NTEventLoggerWindow : NSWindowController
{
    int mode;
    NSTextView *textView;
    BOOL clearingContinuously;
}

+ (void)show:(int)arg1;
@property(nonatomic) BOOL clearingContinuously; // @synthesize clearingContinuously;
@property(nonatomic) int mode; // @synthesize mode;
@property(retain, nonatomic) NSTextView *textView; // @synthesize textView;
- (void)fileEnvironmentNotification:(id)arg1;
- (void)awakeFromNib;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (id)initWithMode:(int)arg1;
- (void)appendStringOnMainThread:(id)arg1;
- (void)appendString:(id)arg1;

@end

@interface NTFileLauncherThread : NTDispatchThread
{
    unsigned int launchFlags;
    NSArray *descs;
    NSString *applicationPath;
    NSWindow *window;
}

+ (id)thread:(id)arg1 withApp:(id)arg2 window:(id)arg3 launchFlags:(unsigned int)arg4 delegateProxy:(id)arg5;
@property unsigned int launchFlags; // @synthesize launchFlags;
@property(retain) NSWindow *window; // @synthesize window;
@property(retain) NSString *applicationPath; // @synthesize applicationPath;
@property(retain) NSArray *descs; // @synthesize descs;
- (void)dealloc;
- (BOOL)threadMethod;

@end

@interface NTFreeformIntersectionHandler : NSObject
{
    NSMutableDictionary *_itersectingItems1;
    NSMutableDictionary *_itersectingItems2;
    NSMutableDictionary *_itersectingItems3;
    NSMutableDictionary *_itersectingItems4;
    struct CGRect _rect;
    struct CGRect _rect1;
    struct CGRect _rect2;
    struct CGRect _rect3;
    struct CGRect _rect4;
}

@property(retain, nonatomic) NSMutableDictionary *itersectingItems4; // @synthesize itersectingItems4=_itersectingItems4;
@property(nonatomic) struct CGRect rect4; // @synthesize rect4=_rect4;
@property(retain, nonatomic) NSMutableDictionary *itersectingItems3; // @synthesize itersectingItems3=_itersectingItems3;
@property(nonatomic) struct CGRect rect3; // @synthesize rect3=_rect3;
@property(retain, nonatomic) NSMutableDictionary *itersectingItems2; // @synthesize itersectingItems2=_itersectingItems2;
@property(nonatomic) struct CGRect rect2; // @synthesize rect2=_rect2;
@property(retain, nonatomic) NSMutableDictionary *itersectingItems1; // @synthesize itersectingItems1=_itersectingItems1;
@property(nonatomic) struct CGRect rect1; // @synthesize rect1=_rect1;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (id)itemsIntersectingRect:(struct CGRect)arg1;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1;
- (void)setRect:(struct CGRect)arg1 forItem:(id)arg2;
- (id)initWithRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)itemsIntersectingRect:(struct CGRect)arg1 inDictionary:(id)arg2;
- (id)itemsIntersectingPoint:(struct CGPoint)arg1 inDictionary:(id)arg2;

@end

@interface NTDirectoryAttributes : NSObject
{
    BOOL _sentDelayedCleanDeadEntries;
    NTPersistentDictionary *_persistentDictionary;
    NTFileDesc *_directory;
}

+ (id)directoryAttributes:(id)arg1;
@property(nonatomic) BOOL sentDelayedCleanDeadEntries; // @synthesize sentDelayedCleanDeadEntries=_sentDelayedCleanDeadEntries;
@property(retain, nonatomic) NTFileDesc *directory; // @synthesize directory=_directory;
@property(retain, nonatomic) NTPersistentDictionary *persistentDictionary; // @synthesize persistentDictionary=_persistentDictionary;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1 defaultValue:(BOOL)arg2;
- (void)setAttribute:(id)arg1 forKey:(id)arg2 forDesc:(id)arg3;
- (id)attributeForKey:(id)arg1 forDesc:(id)arg2;
- (void)dealloc;
- (id)attributeMap;
- (id)guessMap;
- (id)accurateMap;
- (id)databasePath:(id)arg1;
- (id)pathToSettingsFolder;
- (id)attrDictForDesc:(id)arg1;
- (BOOL)useGuessMapForDesc:(id)arg1;
- (id)uniqueMapKey;
- (void)cleanDictionaryOfDeadEntries:(double)arg1;
- (void)cleanDictionaryOfDeadEntriesAfterDelay;

@end

@interface NTDirectoryAttributesMgr : NTSingletonObject
{
    NSMutableDictionary *_attributesDictionary;
    struct CGPoint _menuBarTopRight;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NSMutableDictionary *attributesDictionary; // @synthesize attributesDictionary=_attributesDictionary;
@property(nonatomic) struct CGPoint menuBarTopRight; // @synthesize menuBarTopRight=_menuBarTopRight;
- (void)setFilteredFiles:(id)arg1 forScreenRect:(struct CGRect)arg2;
- (id)filteredFilesForScreenRect:(struct CGRect)arg1;
- (void)setIconCenterPoint:(struct CGPoint)arg1 forDesc:(id)arg2 screenRect:(struct CGRect)arg3;
- (struct CGPoint)iconCenterPointForDesc:(id)arg1 screenRect:(struct CGRect)arg2 guessed:(char *)arg3;
- (id)init;
- (void)dealloc;
- (void)screensChanged:(id)arg1;
- (id)keyForDirectory:(id)arg1;
- (id)attributesForDirectory:(id)arg1;

@end

@interface NTIconPositionMapStore : NSObject
{
    NSMutableArray *_maps;
}

+ (id)mapStore;
@property(retain, nonatomic) NSMutableArray *maps; // @synthesize maps=_maps;
- (struct CGPoint)originForMatchingItem:(id)arg1 inView:(id)arg2 itemSize:(struct CGSize)arg3;
- (void)addMap:(id)arg1;
- (void)dealloc;
- (void)removeInvalid;
- (id)allItems;

@end

@interface NTIconPositionMap : NSObject <NSCoding, NSCopying>
{
    NSMutableArray *_items;
    NSDate *_creationDate;
    struct CGSize _offset;
    struct CGPoint _startMousePoint;
    struct CGPoint _endMousePoint;
}

+ (id)mapFromPasteboard;
+ (id)map:(id)arg1;
+ (id)map;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(nonatomic) struct CGPoint endMousePoint; // @synthesize endMousePoint=_endMousePoint;
@property(nonatomic) struct CGPoint startMousePoint; // @synthesize startMousePoint=_startMousePoint;
@property(nonatomic) struct CGSize offset; // @synthesize offset=_offset;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
- (struct CGPoint)originForMatchingItem:(id)arg1 inView:(id)arg2 itemSize:(struct CGSize)arg3;
- (void)writeToPasteboard;
- (void)recordDropPoint;
- (void)addPath:(id)arg1 withOrigin:(struct CGPoint)arg2 inView:(id)arg3;
- (void)addDesc:(id)arg1 withOrigin:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)isValid;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (void)dealloc;
- (struct CGPoint)originForPosition:(id)arg1 inView:(id)arg2 itemSize:(struct CGSize)arg3;
- (id)mapItems;

@end

@interface NTIconPosition : NSObject <NSCoding, NSCopying>
{
    NSString *_name;
    struct CGPoint _screenOrigin;
}

+ (id)itemWithPath:(id)arg1 screenOrigin:(struct CGPoint)arg2;
+ (id)itemWithDesc:(id)arg1 screenOrigin:(struct CGPoint)arg2;
@property(nonatomic) struct CGPoint screenOrigin; // @synthesize screenOrigin=_screenOrigin;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NTPersistentDictionary : NSObject
{
    BOOL _sentDelayedSaveRequest;
    NSString *_filePath;
    NSString *_version;
    NSMutableDictionary *_mutableDict;
}

+ (id)dictionary:(id)arg1 version:(id)arg2;
@property(nonatomic) BOOL sentDelayedSaveRequest; // @synthesize sentDelayedSaveRequest=_sentDelayedSaveRequest;
@property(retain, nonatomic) NSMutableDictionary *mutableDict; // @synthesize mutableDict=_mutableDict;
@property(retain, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (void)markDirty;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)pathExists;
- (void)doSaveToFile;
- (void)doLoadFromFile;
- (void)doSaveAfterDelay;
- (void)saveToFile;

@end

@interface NTStationeryLauncher : NSObject
{
    unsigned int launchFlags;
    NTActionToken *duplicateActionToken;
    NTFileDesc *desc;
    NSString *appPath;
    NSWindow *window;
}

+ (void)launch:(id)arg1 withApp:(id)arg2 window:(id)arg3 launchFlags:(unsigned int)arg4;
@property(nonatomic) unsigned int launchFlags; // @synthesize launchFlags;
@property(retain, nonatomic) NSWindow *window; // @synthesize window;
@property(retain, nonatomic) NSString *appPath; // @synthesize appPath;
@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
@property(retain, nonatomic) NTActionToken *duplicateActionToken; // @synthesize duplicateActionToken;
- (void)dealloc;
- (void)actionTokenNotification:(id)arg1;
- (void)actionTokenFailedNotification:(id)arg1;

@end

@interface NTNSBNodeMgr : NSObject
{
    id <NTNSBNodeMgrDelegateProtocol> delegate;
    NTProxy *selfProxy;
    NSMutableDictionary *activeNodes;
    BOOL sentRemoveInactiveNodesAfterDelay;
}

+ (id)nodeMgr:(id)arg1;
@property(nonatomic) BOOL sentRemoveInactiveNodesAfterDelay; // @synthesize sentRemoveInactiveNodesAfterDelay;
@property(retain, nonatomic) NSMutableDictionary *activeNodes; // @synthesize activeNodes;
@property(retain, nonatomic) NTProxy *selfProxy; // @synthesize selfProxy;
@property id <NTNSBNodeMgrDelegateProtocol> delegate; // @synthesize delegate;
- (void)reloadNodesWithItems:(id)arg1 forRequest:(id)arg2;
- (void)setList:(id)arg1 forRequest:(id)arg2;
- (id)nodeWithRequest:(id)arg1;
- (void)clearDelegate;
- (void)dealloc;
- (void)reloadColumn:(unsigned long long)arg1;
- (id)childrenForNode:(id)arg1;
- (void)reloadNodeIndexes:(id)arg1 inColumn:(long long)arg2;
- (id)nodeDictionaryForItems:(id)arg1 forRequest:(id)arg2;
- (id)itemsToNodes:(id)arg1 parent:(id)arg2;
- (id)activeNodesForRequest:(id)arg1;
- (void)removeInactiveNodesAfterDelay;
- (void)removeInactiveNodes;

@end

@interface NTNSBNode : NSObject
{
    BOOL _beingRenamed;
    NSArray *_children;
    NTFileServerRequest *_rootRequest;
    NTFileServerItem *_item;
    NSNumber *_uniqueID;
    unsigned long long _rowIndex;
    long long _columnIndex;
    NTProxy *_nodeMgrProxy;
    NSString *_displayName_storage;
    NSImage *_icon_storage;
    NSArray *_childrenAsItems_storage;
}

+ (id)rootNodeWithMgr:(id)arg1 rootRequest:(id)arg2;
+ (id)nodeWithMgr:(id)arg1 columnIndex:(long long)arg2 rowIndex:(unsigned long long)arg3 item:(id)arg4;
+ (id)nodeWithMgr:(id)arg1 columnIndex:(long long)arg2 rowIndex:(unsigned long long)arg3 item:(id)arg4 rootRequest:(id)arg5;
@property(retain, nonatomic) NSArray *childrenAsItems_storage; // @synthesize childrenAsItems_storage=_childrenAsItems_storage;
@property(retain, nonatomic) NSImage *icon_storage; // @synthesize icon_storage=_icon_storage;
@property(retain, nonatomic) NSString *displayName_storage; // @synthesize displayName_storage=_displayName_storage;
@property(retain, nonatomic) NTProxy *nodeMgrProxy; // @synthesize nodeMgrProxy=_nodeMgrProxy;
@property(nonatomic) BOOL beingRenamed; // @synthesize beingRenamed=_beingRenamed;
@property(nonatomic) long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) unsigned long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(retain, nonatomic) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain, nonatomic) NTFileServerItem *item; // @synthesize item=_item;
@property(retain, nonatomic) NTFileServerRequest *rootRequest; // @synthesize rootRequest=_rootRequest;
@property(retain, nonatomic) NSArray *children; // @synthesize children=_children;
- (unsigned long long)numberOfChildrenIgnoringGroups:(BOOL)arg1;
- (id)childrenAsItems;
- (id)serverRequest;
- (id)resolvedDesc;
- (id)desc;
- (void)reload;
- (BOOL)leaf;
- (void)dealloc;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)previewDesc;
- (id)displayName;
- (id)nodeMgr;
- (void)private_reloadAfterUpdate;
- (void)private_updateChildren:(id)arg1;
- (void)private_clearChildren;

@end

@interface NTNSBBrowser : Browser
{
}

- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;

@end

@interface NTNSBViewController : NTBrowserViewController <NTNSBViewDelegate, NTBrowserViewControllerImplementationProtocol, NTNSBNodeMgrDelegateProtocol, NTNSBViewDataMgrDelegateProtocol, NTBrowserContextualMenuProtocol>
{
    unsigned long long _setPathCounter;
    BOOL _sentUpdateDisplayedServerRequest;
    NTNSBView *_nsbView;
    NTNSBViewContainer *_viewContainer;
    NTNSBNode *_rootNode;
    NTNSBNodeMgr *_nodeMgr;
    NSViewController *_previewController;
    NTBrowserContextualMenu *_contextualMenu;
    unsigned long long _cellIconHeight_storage;
    unsigned long long _cellTextHeight_storage;
    NTDropHandler *_dropHandler;
    NTDragInfoCache *_dragInfoCache;
    NTFileServerRequest *_serverRequestBeforeDrag;
    NSMutableSet *_resizeAfterDelayMutableSet;
    NSString *_selectionRestoreDisplayName;
}

@property(retain, nonatomic) NSString *selectionRestoreDisplayName; // @synthesize selectionRestoreDisplayName=_selectionRestoreDisplayName;
@property(retain, nonatomic) NSMutableSet *resizeAfterDelayMutableSet; // @synthesize resizeAfterDelayMutableSet=_resizeAfterDelayMutableSet;
@property(nonatomic) BOOL sentUpdateDisplayedServerRequest; // @synthesize sentUpdateDisplayedServerRequest=_sentUpdateDisplayedServerRequest;
@property(retain, nonatomic) NTFileServerRequest *serverRequestBeforeDrag; // @synthesize serverRequestBeforeDrag=_serverRequestBeforeDrag;
@property(retain, nonatomic) NTDragInfoCache *dragInfoCache; // @synthesize dragInfoCache=_dragInfoCache;
@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler=_dropHandler;
@property(nonatomic) unsigned long long cellTextHeight_storage; // @synthesize cellTextHeight_storage=_cellTextHeight_storage;
@property(nonatomic) unsigned long long cellIconHeight_storage; // @synthesize cellIconHeight_storage=_cellIconHeight_storage;
@property(retain, nonatomic) NTBrowserContextualMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
@property(retain, nonatomic) NSViewController *previewController; // @synthesize previewController=_previewController;
@property(retain, nonatomic) NTNSBNodeMgr *nodeMgr; // @synthesize nodeMgr=_nodeMgr;
@property(retain, nonatomic) NTNSBNode *rootNode; // @synthesize rootNode=_rootNode;
@property(retain, nonatomic) NTNSBViewContainer *viewContainer; // @synthesize viewContainer=_viewContainer;
@property(retain, nonatomic) NTNSBView *nsbView; // @synthesize nsbView=_nsbView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 browserID:(id)arg2;
- (void)restoreViewVisibleRectWithRect:(struct CGRect)arg1;
- (id)currentContainingDirectory;
- (void)syncUISortSettings:(id)arg1;
- (unsigned long long)numberOfVisibleItemsForDisplay:(unsigned long long *)arg1;
- (unsigned long long)numVisibleItemsIgnoringGroups:(BOOL)arg1;
- (id)visibleItems;
- (BOOL)browserShouldStretchWindowIfNecessaryForUserColumnResize:(id)arg1;
- (void)browser:(id)arg1 draggedImage:(id)arg2 endedAt:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)updateDisplayedServerRequestAfterDelay;
- (void)nsbView:(id)arg1 titleContextualMenuEvent:(id)arg2;
- (void)nsbView_browserSelectionChanged:(id)arg1;
- (void)nsbView_browserDoubleClick:(id)arg1;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (id)browser:(id)arg1 titleOfColumn:(long long)arg2;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (double)browser:(id)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)rootItemForBrowser:(id)arg1;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (id)browser:(id)arg1 draggingImageForRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4 offset:(struct CGPoint *)arg5;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (void)synchronizeColumnHeadersState;
- (void)synchronizeAutoresizeColumnsState;
- (void)resizeColumnToFit:(long long)arg1;
- (void)reloadColumnRestoreSelection:(long long)arg1;
- (unsigned long long)cellTextHeight;
- (unsigned long long)cellIconHeight;
- (unsigned long long)calcRowHeight;
- (id)createNSBView:(struct CGRect)arg1;
- (void)resizeColumnToFitAfterDelay;
- (id)imp_rootServerRequest;
- (id)imp_actionTargetInSelectedDirectory;
- (id)imp_actionTargetDirectory;
- (BOOL)imp_treatPackagesAsFolderOnDoubleClick;
- (BOOL)imp_renameSelection;
- (id)imp_imageForSelection:(struct CGPoint *)arg1;
- (void)imp_scrollToSelection;
- (void)imp_selectVisibleIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)imp_itemWithDesc:(id)arg1;
- (unsigned long long)imp_numItemsSelected;
- (void)imp_deselectAllInRoot;
- (void)imp_deselectAll;
- (id)imp_afterSelectionItem;
- (id)imp_firstSelectedItem;
- (id)imp_selectedItems;
- (id)imp_firstSelectedDesc:(BOOL)arg1;
- (id)imp_selectedDescs:(BOOL)arg1;
- (struct CGRect)imp_rectForVisibleIndex:(unsigned long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (id)imp_responderView;
- (id)imp_containingView;
- (void)handleViewOptionsNotification:(id)arg1;
- (void)handleDefaultColorOptionsChanged;
- (void)synchronizeColorChange:(id)arg1;
- (void)updateBrowserDrawingMode;
- (void)nsbNodeMgr:(id)arg1 updatedActiveNodes:(id)arg2;
- (id)nsbNodeMgr_nodeForColumns:(id)arg1;
- (void)nsbNodeMgr:(id)arg1 reloadNodeIndexes:(id)arg2 inColumn:(long long)arg3;
- (void)nsbNodeMgr:(id)arg1 reloadColumn:(long long)arg2;
- (id)nsbNodeMgr:(id)arg1 listForNode:(id)arg2;
- (id)contextualMenuHelper:(id)arg1 outTarget:(id *)arg2;
- (id)dataMgr_rootRequest;
- (id)dataMgr_columnServerRequestForFiltering;
- (void)delayedSetPath:(id)arg1;
- (BOOL)dataMgr_selectColumnWithServerRequest:(id)arg1;
- (void)dataMgr_displayedRequestChanged:(id)arg1;
- (void)dataMgr_itemsNeedRefresh:(id)arg1 forRequest:(id)arg2;
- (void)dataMgr_didUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3 savedState:(id)arg4;
- (id)dataMgr_willUpdateRequest:(id)arg1 isRootRequest:(BOOL)arg2 rootIsNewLocation:(BOOL)arg3;
- (BOOL)dataMgr_shouldUpdate;

@end

@interface NTNSBView : NSBrowser <NTRenamerDelegate>
{
    BOOL _drawingForDrag;
    BOOL _allowDragSelection;
    NTNSBViewSettings *_settings;
    NTRenamer *_renamer;
    NTSpringLoadedHelper *_springLoadedHelper;
    NSTextFieldCell *_titleCell;
    NSEvent *_firstResponderEvent;
    NTCachedSelection *_cachedSelection;
    unsigned long long _titleCellHeight;
}

+ (void)initialize;
@property(nonatomic) BOOL allowDragSelection; // @synthesize allowDragSelection=_allowDragSelection;
@property(nonatomic) unsigned long long titleCellHeight; // @synthesize titleCellHeight=_titleCellHeight;
@property(retain, nonatomic) NTCachedSelection *cachedSelection; // @synthesize cachedSelection=_cachedSelection;
@property(retain, nonatomic) NSEvent *firstResponderEvent; // @synthesize firstResponderEvent=_firstResponderEvent;
@property(retain, nonatomic) NSTextFieldCell *titleCell; // @synthesize titleCell=_titleCell;
@property(retain, nonatomic) NTSpringLoadedHelper *springLoadedHelper; // @synthesize springLoadedHelper=_springLoadedHelper;
@property(nonatomic) BOOL drawingForDrag; // @synthesize drawingForDrag=_drawingForDrag;
@property(retain, nonatomic) NTRenamer *renamer; // @synthesize renamer=_renamer;
@property(retain, nonatomic) NTNSBViewSettings *settings; // @synthesize settings=_settings;
- (void)renameNode:(id)arg1 delay:(BOOL)arg2;
- (BOOL)isRenaming;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)table_menuInTable:(id)arg1 column:(long long)arg2;
- (BOOL)table_handleSelectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2 table:(id)arg3 column:(long long)arg4;
- (void)table_handleDraggingUpdated:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (BOOL)table_handleKeyDown:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (void)table_handleBecomeFirstResponder:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (BOOL)table_handleOtherMouseDown:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (BOOL)table_handleRightMouseDown:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (BOOL)table_handleMouseDown:(id)arg1 table:(id)arg2 column:(long long)arg3;
- (void)_drawEmptyColumnsForView:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)_shouldStretchWindowIfNecessaryForUserColumnResize;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)separatesColumns;
- (double)titleHeight;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setBackgroundColor:(id)arg1;
- (void)drawTitleOfColumn:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)_drawTitlesForView:(id)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)titleFrameOfColumn:(long long)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)browserChangedAction:(id)arg1;
- (void)browserDoubleClick:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)rectsForRow:(long long)arg1 column:(long long)arg2 iconRect:(struct CGRect *)arg3 textRect:(struct CGRect *)arg4 minimalTextRect:(BOOL)arg5;
- (id)clickedNode:(id)arg1 outPart:(long long *)arg2;
- (id)previewViewInColumn:(long long)arg1;
- (id)tableInColumn:(long long)arg1;
- (long long)browser_activeColumn:(id *)arg1;
- (void)browser_activateColumn:(long long)arg1;
- (id)nodeAtRow:(long long)arg1 column:(long long)arg2;
- (id)afterSelectionNode;
- (id)selectedNodes;
- (BOOL)isClickInColumnTitles:(id)arg1;
- (unsigned long long)clickedColumnTitle:(id)arg1;
- (void)refreshTitleView;
- (id)titleView;
- (void)deselectAllInRoot;
- (void)deselectAll;
- (void)sizeColumnToFit:(long long)arg1;
- (long long)columnWithSelection;
- (void)reloadAllColumns;
- (BOOL)isPreviewColumn:(long long)arg1;
- (long long)lastNonPreviewColumn;
- (void)renamerDelegate_renameNext:(id)arg1 item:(id)arg2 context:(id)arg3;
- (id)renamerDelegate_prepareToRenameNext:(BOOL)arg1 item:(id)arg2 context:(id)arg3;
- (void)renamerDelegate_renameItem:(id)arg1 context:(id)arg2 to:(id)arg3;
- (struct CGRect)renamerDelegate_screenRectForEditor;
- (struct CGRect)renamerDelegate_screenRectForText;
- (void)renamerDelegate_renameDidEnd;
- (void)renamerDelegate_renameDidStart;
- (void)quickLookWithEvent:(id)arg1;
- (id)correctTitleOfColumn:(long long)arg1;
- (id)createTitleCell;
- (id)viewController;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)rightClickOnTitlesNotification:(id)arg1;
- (void)notifySelectionChanged;
- (void)browserTableSelectionChangedNotification:(id)arg1;

@end

@interface NTNSBViewCell : NSCell
{
    BOOL _drawForDragAndDrop;
    BOOL _disableTextDrawing;
    BOOL _groupCell;
    BOOL _firstGroupCell;
    double _iconHeight;
    double _textHeight;
    unsigned long long _label;
    NTIconImager *_iconImager;
    NTStringImager *_textImage;
}

@property(nonatomic, getter=isFirstGroupCell) BOOL firstGroupCell; // @synthesize firstGroupCell=_firstGroupCell;
@property(nonatomic, getter=isGroupCell) BOOL groupCell; // @synthesize groupCell=_groupCell;
@property(nonatomic) BOOL disableTextDrawing; // @synthesize disableTextDrawing=_disableTextDrawing;
@property(nonatomic) BOOL drawForDragAndDrop; // @synthesize drawForDragAndDrop=_drawForDragAndDrop;
@property(retain, nonatomic) NTStringImager *textImage; // @synthesize textImage=_textImage;
@property(retain, nonatomic) NTIconImager *iconImager; // @synthesize iconImager=_iconImager;
@property(nonatomic) unsigned long long label; // @synthesize label=_label;
@property(nonatomic) double textHeight; // @synthesize textHeight=_textHeight;
@property(nonatomic) double iconHeight; // @synthesize iconHeight=_iconHeight;
- (struct CGRect)minimumTitleRectForBounds:(struct CGRect)arg1;
- (BOOL)shouldSendActionForEvent:(id)arg1 inRect:(struct CGRect)arg2 inView:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (unsigned long long)type;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)sharedIconCell;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)rectsForBounds:(struct CGRect)arg1 imageRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (void)drawIconInCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTextInRect:(struct CGRect)arg1 inView:(id)arg2 highlighted:(BOOL)arg3;
- (struct CGRect)cellRectForBounds:(struct CGRect)arg1;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface NTBrowserTableView : NSObject
{
}

+ (void)install;

@end

@interface NSBrowserTableViewHack : NSObject
{
}

+ (id)nsbView:(id)arg1;
+ (void)install;
- (id)hack_menu;
- (unsigned long long)hack_draggingUpdated:(id)arg1;
- (BOOL)hack_becomeFirstResponder;
- (BOOL)hack_selectionShouldUsePrimaryColor;
- (void)hack_selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)hack_keyDown:(id)arg1;
- (void)hack_otherMouseDown:(id)arg1;
- (void)hack_rightMouseDown:(id)arg1;
- (void)hack_mouseDown:(id)arg1;
- (void)hack_drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)hack_viewDidMoveToWindow;

@end

@interface NTIconImager : NSObject
{
    NTFileServerItem *item;
    unsigned long long iconSize;
    NSImage *icon_storage;
    NSImage *selectedIcon_storage;
    BOOL iconInitialized;
    BOOL selectedIconInitialized;
}

+ (id)iconImager:(id)arg1 iconSize:(unsigned long long)arg2;
@property(nonatomic) BOOL selectedIconInitialized; // @synthesize selectedIconInitialized;
@property(nonatomic) BOOL iconInitialized; // @synthesize iconInitialized;
@property(retain, nonatomic) NSImage *selectedIcon_storage; // @synthesize selectedIcon_storage;
@property(retain, nonatomic) NSImage *icon_storage; // @synthesize icon_storage;
@property(nonatomic) unsigned long long iconSize; // @synthesize iconSize;
@property(retain, nonatomic) NTFileServerItem *item; // @synthesize item;
- (void)drawInRect:(struct CGRect)arg1 selected:(BOOL)arg2 inView:(id)arg3;
@property(readonly) NSImage *selectedIcon; // @dynamic selectedIcon;
@property(readonly) NSImage *icon; // @dynamic icon;
- (void)dealloc;

@end

@interface NTGrowlHost : NTSingletonObject <GrowlApplicationBridgeDelegate>
{
    id mountainLionPlugin;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) id mountainLionPlugin; // @synthesize mountainLionPlugin;
- (void)growlNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)loadMountainLionPlugin;
- (void)setupGrowlAfterDelay;

@end

@interface NTNSBViewPreview : NSView <NTKVObserverProxyDelegate, NTSlidingViewDelegate, NSMenuDelegate>
{
    NSButton *disclosureButton;
    NSTextField *title;
    NSButton *moreInfoButton;
    NTCocoaPluginHost *pluginHost_storage;
    NTModulePlugin *previewModule;
    NTSlidingView *previewContainerView;
    NTModulePlugin *infoModule;
    NSString *infoViewNotification;
    NTKVObserverProxy *observerProxy;
    NTFileDesc *desc;
    NTTemplateButton *actionButton;
    NSMenu *actionMenu;
    NSTrackingArea *trackingArea;
}

@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea;
@property(retain, nonatomic) NSMenu *actionMenu; // @synthesize actionMenu;
@property(retain, nonatomic) NTTemplateButton *actionButton; // @synthesize actionButton;
@property(retain, nonatomic) NSString *infoViewNotification; // @synthesize infoViewNotification;
@property(retain, nonatomic) NTSlidingView *previewContainerView; // @synthesize previewContainerView;
@property(retain, nonatomic) NTCocoaPluginHost *pluginHost_storage; // @synthesize pluginHost_storage;
@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
@property(retain, nonatomic) NTKVObserverProxy *observerProxy; // @synthesize observerProxy;
@property(retain, nonatomic) NTModulePlugin *infoModule; // @synthesize infoModule;
@property(retain, nonatomic) NTModulePlugin *previewModule; // @synthesize previewModule;
@property(retain, nonatomic) NSButton *moreInfoButton; // @synthesize moreInfoButton;
@property(retain, nonatomic) NSTextField *title; // @synthesize title;
@property(retain, nonatomic) NSButton *disclosureButton; // @synthesize disclosureButton;
- (void)removeBindings:(id)arg1;
- (void)setBindings:(id)arg1;
- (void)dealloc;
- (void)updateMouseOver:(BOOL)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)installMouseTracker;
- (void)moreInfoButtonAction:(id)arg1;
- (void)updateViewsAfterDelay;
- (void)updateInfoView;
- (id)selection;
- (void)installPreviewView:(BOOL)arg1;
- (void)updatePreviewModuleAfterDelay;
- (id)pluginHost;
- (void)createViews;
- (void)infoViewResizeNotification:(id)arg1;
- (unsigned long long)previewAreaHeight;
- (void)adjustSubViews:(BOOL)arg1;
- (BOOL)shouldShowPreview;
- (unsigned long long)layoutPreviewContainer:(unsigned long long)arg1 animatedResize:(BOOL)arg2;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (BOOL)isFlipped;
- (void)removeKVObserver:(id)arg1;
- (void)setKVObserver:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)slidingViewAnimationDone:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface NTNSBViewPreviewController : NSViewController
{
    NTNSBViewPreview *boundView;
}

@property(retain, nonatomic) NTNSBViewPreview *boundView; // @synthesize boundView;
- (void)loadView;
- (void)dealloc;

@end

@interface NTSlidingView : NSView <NTAnimationDelegateProtocol>
{
    id <NTSlidingViewDelegate> delegate;
    NTAnimationDelegate *animationDelegate;
}

+ (id)view:(id)arg1;
@property id <NTSlidingViewDelegate> delegate; // @synthesize delegate;
@property(retain) NTAnimationDelegate *animationDelegate; // @synthesize animationDelegate;
- (void)reset:(BOOL)arg1;
- (void)slideUp:(long long)arg1 animate:(BOOL)arg2;
- (void)clearDelegate;
- (void)dealloc;
- (id)animationDelegateView:(id)arg1;
- (void)animationDelegateDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDelegateDidStart:(id)arg1;

@end

@interface NTApplicationFileFilter : NTFileFilter
{
}

- (BOOL)passesFilter:(id)arg1;

@end

@interface NTApplicationSubmenuFilter : NTFileFilter
{
}

- (BOOL)passesFilter:(id)arg1;

@end

@interface NTApplicationsList : NSObject
{
    NSDictionary *applicationsParentMap;
    NSDictionary *applicationsDictionary;
    NSDictionary *applicationsPathMap;
}

+ (id)list:(id)arg1;
+ (id)buildPathMap:(id)arg1;
+ (id)buildParentMap:(id)arg1;
@property(retain, nonatomic) NSDictionary *applicationsPathMap; // @synthesize applicationsPathMap;
@property(retain, nonatomic) NSDictionary *applicationsDictionary; // @synthesize applicationsDictionary;
@property(retain, nonatomic) NSDictionary *applicationsParentMap; // @synthesize applicationsParentMap;
- (id)updatedList:(id)arg1 directoriesSearched:(id)arg2;
- (id)applications;
- (void)dealloc;
- (id)applicationsInDirectory:(id)arg1;
- (id)removeMissingAppsInDirectories:(id)arg1;

@end

@interface NTDisassembleTask : NSObject <NTTaskControllerDelegateProtocol>
{
    NTFileDesc *desc;
    NTTaskController *systemProfileTask;
    NTProgressBar *progressBar;
    NSMutableString *output;
    NSMutableString *errors;
}

+ (void)disassemble:(id)arg1 title:(id)arg2;
@property(retain, nonatomic) NSMutableString *errors; // @synthesize errors;
@property(retain, nonatomic) NSMutableString *output; // @synthesize output;
@property(retain, nonatomic) NTProgressBar *progressBar; // @synthesize progressBar;
@property(retain, nonatomic) NTTaskController *systemProfileTask; // @synthesize systemProfileTask;
@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
- (id)initWithDesc:(id)arg1 title:(id)arg2;
- (void)dealloc;
- (void)disposeTask;
- (void)disposeProgressBar;
- (void)task_handleTask:(id)arg1 finished:(id)arg2;
- (void)task_handleTask:(id)arg1 output:(id)arg2;
- (void)task_handleTask:(id)arg1 errors:(id)arg2;

@end

@interface NSConnectionFix : NSConnection
{
}

+ (void)install;
- (void)hack_setRequestTimeout:(double)arg1;
- (void)hack_setReplyTimeout:(double)arg1;

@end

@interface NTNSBViewSettings : NSObject
{
    NSColor *alternatingRowColor;
    BOOL usesAlternatingRowBackgroundColors;
    NSColor *backgroundColor;
}

+ (id)settings;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor;
@property(nonatomic) BOOL usesAlternatingRowBackgroundColors; // @synthesize usesAlternatingRowBackgroundColors;
@property(retain, nonatomic) NSColor *alternatingRowColor; // @synthesize alternatingRowColor;
- (void)dealloc;

@end

@interface NTNSBViewContainer : NTView
{
    NTViewColorSetProvider *colorSetProvider;
}

@property(retain, nonatomic) NTViewColorSetProvider *colorSetProvider; // @synthesize colorSetProvider;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)viewColorSetProvider;

@end

@interface NTNSBViewDataMgr : NTBaseViewDataMgr
{
    NTFileServerRequest *rootRequest;
}

+ (id)dataMgr:(id)arg1;
@property(retain, nonatomic) NTFileServerRequest *rootRequest; // @synthesize rootRequest;
- (void)updateActiveServerRequests:(id)arg1;
- (void)dealloc;
- (void)setItemFilter:(id)arg1;
- (void)fileServer_didUpdateRequest:(id)arg1 savedState:(id)arg2;
- (id)fileServer_willUpdateRequest:(id)arg1;
- (void)displayServerRequest:(id)arg1 params:(id)arg2;

@end

@interface NTFindRightView : NTBoxView
{
    BOOL _hasSetupSplitView;
    NSSplitView *_splitView;
    NTSplitViewDelegate *_splitViewDelegate;
    NSView *_rightView;
}

@property(retain, nonatomic) NSView *rightView; // @synthesize rightView=_rightView;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
- (void)installMainView:(id)arg1 rightView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)toggleRightView:(id)arg1;
- (void)createViews;
- (void)viewWillDraw;
- (void)frameDidChange;
- (void)splitViewCollapseStateChanged:(id)arg1;

@end

@interface NTCachedSelection : NSObject
{
    id cachedSelection;
    id selectionState;
}

+ (id)cachedSelection;
@property(retain, nonatomic) NSArray *selectionState; // @synthesize selectionState;
@property(retain, nonatomic) NSArray *cachedSelection; // @synthesize cachedSelection;
- (void)clearCache;
- (void)setSelection:(id)arg1 selectionState:(id)arg2;
- (id)selection:(id)arg1;
- (void)dealloc;

@end

@interface NTFindWindowContextualMenu : NSMenu
{
}

- (void)_popUpMenuWithEvent:(id)arg1 forView:(id)arg2;

@end

@interface NTTrashEntry : NSObject
{
    BOOL _trashItemCountInitialized;
    NSString *_trashPath;
    NTFileDesc *_trashDesc;
    unsigned long long _trashItemCount;
}

+ (id)trashEntry:(id)arg1;
@property(nonatomic) BOOL trashItemCountInitialized; // @synthesize trashItemCountInitialized=_trashItemCountInitialized;
@property(nonatomic) unsigned long long trashItemCount; // @synthesize trashItemCount=_trashItemCount;
@property(retain, nonatomic) NTFileDesc *trashDesc; // @synthesize trashDesc=_trashDesc;
@property(retain, nonatomic) NSString *trashPath; // @synthesize trashPath=_trashPath;
- (unsigned long long)itemCount;
- (id)description;
- (void)dealloc;
- (unsigned long long)calcTrashItemCount;

@end

@interface NTBuyNowWindowView : NTView
{
    BOOL mouseOver;
    NSTrackingArea *trackingArea;
    NTGradient *normalGradient;
    NTGradient *mouseOverGradient;
    NSButton *button;
}

+ (id)buyNowView:(SEL)arg1;
@property(retain, nonatomic) NSButton *button; // @synthesize button;
@property(retain, nonatomic) NTGradient *mouseOverGradient; // @synthesize mouseOverGradient;
@property(retain, nonatomic) NTGradient *normalGradient; // @synthesize normalGradient;
@property(nonatomic) BOOL mouseOver; // @synthesize mouseOver;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea;
- (struct CGSize)minSizeToFit;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (id)makeTitle;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)installMouseTracker;
- (BOOL)acceptsFirstMouse:(id)arg1;

@end

@interface NTSimpleToolbarButton : NSButton <NSCoding>
{
    NSString *buttonID;
}

+ (id)button:(id)arg1;
@property(retain, nonatomic) NSString *buttonID; // @synthesize buttonID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)modifierFlagsChangedNotification:(id)arg1;

@end

@interface NTSimpleToolbarButtonCache : NTSingletonObject
{
    NSMutableDictionary *images;
    NSMutableDictionary *alternateImages;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NSMutableDictionary *alternateImages; // @synthesize alternateImages;
@property(retain, nonatomic) NSMutableDictionary *images; // @synthesize images;
- (id)buttonImage:(id)arg1 optionKeyDown:(BOOL)arg2;
- (id)init;
- (void)dealloc;
- (id)imageWithArrow:(id)arg1;
- (id)bitmapRepWithArrow:(id)arg1 multipier:(unsigned long long)arg2;

@end

@interface NTSimpleToolbarPopUp : NSSegmentedControl
{
    NSString *buttonID;
}

+ (id)button:(id)arg1;
+ (Class)cellClass;
@property(retain, nonatomic) NSString *buttonID; // @synthesize buttonID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NTPathPopUpMenu : NSMenu <NSMenuDelegate, NSCoding>
{
}

+ (id)menu;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTActionPopUpMenu : NSMenu <NSMenuDelegate, NSCoding>
{
    NSNumber *_buildID;
}

+ (id)menu;
@property(retain, nonatomic) NSNumber *buildID; // @synthesize buildID=_buildID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)menuDidClose:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)addDelayedItemsIfNeeded:(id)arg1 firstSelectedDesc:(id)arg2 numberOfSelected:(unsigned long long)arg3;

@end

@interface NTLevelIndicatorCell : NSLevelIndicatorCell
{
    BOOL lastColumn;
    BOOL firstColumn;
    unsigned long long label;
}

@property(nonatomic) BOOL firstColumn; // @synthesize firstColumn;
@property(nonatomic) BOOL lastColumn; // @synthesize lastColumn;
@property(nonatomic) unsigned long long label; // @synthesize label;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NTPreviewViewMgr : NSObject
{
    id <NTPreviewViewMgrDelegate> _delegate;
    NSMutableDictionary *_installedViews;
    NSArray *_itemList_storage;
}

+ (id)previewMgr:(id)arg1;
@property(retain, nonatomic) NSArray *itemList_storage; // @synthesize itemList_storage=_itemList_storage;
@property(retain, nonatomic) NSMutableDictionary *installedViews; // @synthesize installedViews=_installedViews;
@property id <NTPreviewViewMgrDelegate> delegate; // @synthesize delegate=_delegate;
- (id)itemImager;
- (void)removeAllPreviews;
- (void)stopAllPreviews;
- (void)installPreviewsForIndexes:(id)arg1 iconSize:(unsigned long long)arg2 browserID:(id)arg3;
- (void)clearDelegate;
- (void)dealloc;
- (id)items;

@end

@interface NTIconInlinePreview : NSView
{
    BOOL _mouseOver;
    NTPreviewViewMgr *_mgr;
    NSString *_browserID;
    NTFileServerItem *_item;
    NTImageButton *_previewButton;
    NSTrackingArea *_trackingArea;
    NTPDFPreviewView *_pdfView;
    NTMediaPreviewView *_movieView;
    struct CGRect _iconRect;
}

+ (id)viewWithMgr:(id)arg1 frame:(struct CGRect)arg2 iconRect:(struct CGRect)arg3 browserID:(id)arg4 item:(id)arg5;
+ (id)buttonImage:(BOOL)arg1;
@property(retain, nonatomic) NTMediaPreviewView *movieView; // @synthesize movieView=_movieView;
@property(retain, nonatomic) NTPDFPreviewView *pdfView; // @synthesize pdfView=_pdfView;
@property(nonatomic) BOOL mouseOver; // @synthesize mouseOver=_mouseOver;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(retain, nonatomic) NTImageButton *previewButton; // @synthesize previewButton=_previewButton;
@property(retain, nonatomic) NTFileServerItem *item; // @synthesize item=_item;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID=_browserID;
@property(nonatomic) NTPreviewViewMgr *mgr; // @synthesize mgr=_mgr;
@property(nonatomic) struct CGRect iconRect; // @synthesize iconRect=_iconRect;
- (void)stopPreview;
- (void)dealloc;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)previewButtonAction:(id)arg1;
- (void)showContextualMenu:(id)arg1;
- (void)updateLayout;
- (void)removePreviewButton;
- (void)installPreviewButton;

@end

@interface NTTokenFieldCell : NSTokenFieldCell
{
    BOOL lastColumn;
    BOOL firstColumn;
    unsigned long long label;
}

@property(nonatomic) BOOL firstColumn; // @synthesize firstColumn;
@property(nonatomic) BOOL lastColumn; // @synthesize lastColumn;
@property(nonatomic) unsigned long long label; // @synthesize label;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NTDropboxManager : NTSingletonObject <DBRestClientDelegate, NTMessageProxyProtocol, NTFSWatcherDelegate>
{
    NTFileDesc *_publicDir;
    DBRestClient *_client;
    NTMessageProxy *_proxy;
    NTFSEventClient *_eventClient;
    NTFSWatcherDelegateProxy *_watcherProxy;
    NTFSWatcher *_watcher;
    NTFSWatcher *_dropboxWatcher;
    NTFileDesc *_rootDir_storage;
    NSString *_rootDirPath;
    NSString *_publicDirPath;
    NSMutableDictionary *_sharedFolders;
    NSString *_rootID;
    NSString *_userID;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(retain, nonatomic) NSString *rootID; // @synthesize rootID=_rootID;
@property(retain, nonatomic) NSMutableDictionary *sharedFolders; // @synthesize sharedFolders=_sharedFolders;
@property(retain, nonatomic) NSString *publicDirPath; // @synthesize publicDirPath=_publicDirPath;
@property(retain, nonatomic) NSString *rootDirPath; // @synthesize rootDirPath=_rootDirPath;
@property(retain, nonatomic) NTFileDesc *rootDir_storage; // @synthesize rootDir_storage=_rootDir_storage;
@property(retain, nonatomic) NTFSWatcher *dropboxWatcher; // @synthesize dropboxWatcher=_dropboxWatcher;
@property(retain, nonatomic) NTFSWatcher *watcher; // @synthesize watcher=_watcher;
@property(retain, nonatomic) NTFSWatcherDelegateProxy *watcherProxy; // @synthesize watcherProxy=_watcherProxy;
@property(retain, nonatomic) NTFSEventClient *eventClient; // @synthesize eventClient=_eventClient;
@property(retain, nonatomic) NTMessageProxy *proxy; // @synthesize proxy=_proxy;
@property(retain, nonatomic) DBRestClient *client; // @synthesize client=_client;
@property(retain, nonatomic) NTFileDesc *publicDir; // @synthesize publicDir=_publicDir;
- (void)shareDropboxFolder:(id)arg1;
- (void)viewPreviousVersionsOfDesc:(id)arg1;
- (void)viewOnDropboxDesc:(id)arg1;
- (void)copyPublicLinkForDesc:(id)arg1;
- (void)createSharedLinkForDesc:(id)arg1;
- (BOOL)isSharedChild:(id)arg1;
- (BOOL)isSharedFolder:(id)arg1;
- (BOOL)isDropboxAppLinkBackURL:(id)arg1;
- (id)rootDir;
- (id)init;
- (void)dealloc;
- (void)restClient:(id)arg1 loadedMetadata:(id)arg2;
- (void)restClient:(id)arg1 loadSharableLinkFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedSharableLink:(id)arg2 forFile:(id)arg3;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (void)watcher:(id)arg1 itemsChanged:(id)arg2;
- (void)openURLWithString:(id)arg1 forDesc:(id)arg2;
- (void)updateSharedFolders;
- (void)updateRootID;
- (void)findRootDir;
- (void)start;
- (void)toggleAlertSupress:(id)arg1;
- (void)delayedUpdateRootID:(id)arg1;
- (void)updateDropboxDir;

@end

@interface NTBrowserTabSpec : NSObject
{
    int style;
    NTBrowserTabModel *model;
    NTFileServerRequest *request;
    NSArray *selection;
}

+ (id)spec:(id)arg1 browserStyle:(int)arg2 selection:(id)arg3;
+ (id)spec:(id)arg1 selection:(id)arg2;
@property(retain, nonatomic) NSArray *selection; // @synthesize selection;
@property(nonatomic) int style; // @synthesize style;
@property(retain, nonatomic) NTFileServerRequest *request; // @synthesize request;
@property(retain, nonatomic) NTBrowserTabModel *model; // @synthesize model;
- (id)selectDescs;
- (int)browserStyle;
- (id)serverRequest;
- (id)tabModel;
- (void)dealloc;

@end

@interface NTSmartFile : NSObject <NSCoding>
{
    BOOL valid;
    NTFileDesc *desc;
    NSData *bookmarkData;
}

+ (id)smartFile:(id)arg1;
@property(retain, nonatomic) NSData *bookmarkData; // @synthesize bookmarkData;
@property(nonatomic) BOOL valid; // @synthesize valid;
@property(retain, nonatomic) NTFileDesc *desc; // @synthesize desc;
- (id)desc:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NTSpeechTextView : NSTextView <NSSpeechSynthesizerDelegate>
{
    NSSpeechSynthesizer *speechSynthesizer;
}

@property(retain, nonatomic) NSSpeechSynthesizer *speechSynthesizer; // @synthesize speechSynthesizer;
- (BOOL)validateMenuItem:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)dealloc;
- (void)prepareForRelease;
- (void)speechSynthesizer:(id)arg1 willSpeakWord:(struct _NSRange)arg2 ofString:(id)arg3;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;

@end

@interface NTBrowserStatusBar : NTBoxView <NTCurrentBrowserMgrProtocol, NTMessageProxyProtocol>
{
    BOOL sentUpdateAfterDelay;
    NSSlider *iconSlider;
    NSString *browserID;
    NTFSEventClient *eventClient;
    NTMessageProxy *proxy;
    NSImageView *noWriteImageView;
    NTProgressStopButton *progressBar;
    NSView *leftView;
    NSView *centerView;
    NSView *rightView;
    NTClickStringView *infoMessageView;
    unsigned long long cached_freeBytes;
    unsigned long long cached_totalBytes;
}

+ (unsigned long long)defaultHeight;
+ (id)statusBar:(id)arg1;
@property(nonatomic) unsigned long long cached_totalBytes; // @synthesize cached_totalBytes;
@property(nonatomic) unsigned long long cached_freeBytes; // @synthesize cached_freeBytes;
@property(retain, nonatomic) NTClickStringView *infoMessageView; // @synthesize infoMessageView;
@property(retain, nonatomic) NSView *rightView; // @synthesize rightView;
@property(retain, nonatomic) NSView *centerView; // @synthesize centerView;
@property(retain, nonatomic) NSView *leftView; // @synthesize leftView;
@property(retain, nonatomic) NTProgressStopButton *progressBar; // @synthesize progressBar;
@property(nonatomic) BOOL sentUpdateAfterDelay; // @synthesize sentUpdateAfterDelay;
@property(retain, nonatomic) NSImageView *noWriteImageView; // @synthesize noWriteImageView;
@property(retain, nonatomic) NTMessageProxy *proxy; // @synthesize proxy;
@property(retain, nonatomic) NTFSEventClient *eventClient; // @synthesize eventClient;
@property(retain, nonatomic) NSString *browserID; // @synthesize browserID;
@property(retain, nonatomic) NSSlider *iconSlider; // @synthesize iconSlider;
- (void)toggleShowUsedSpace:(id)arg1;
- (void)dealloc;
- (void)CBMNotification:(id)arg1;
- (void)messageProxy:(id)arg1 message:(id)arg2;
- (void)worker_result:(id)arg1;
- (id)worker:(id)arg1;
- (id)infoString:(id)arg1 free:(unsigned long long)arg2 total:(unsigned long long)arg3;
- (void)createViews;
- (void)browserStyleChanged:(id)arg1;
- (void)adjustSubviews;
- (void)adjustPaginateViews;
- (void)frameDidChange;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)drawInactive;
- (BOOL)dualBrowser;
- (BOOL)isIconView;
- (id)currentBrowser;
- (id)browser;
- (void)updateWithDelay;
- (void)update;
- (void)viewDidMoveToWindow;
- (void)delayedViewOptionsChangedNotification:(id)arg1;
- (void)viewOptionsChangedNotification:(id)arg1;
- (void)setupIconSlider;
- (void)appearanceMgrChangedNotification:(id)arg1;
- (void)freeSpaceUpdatedNotification:(id)arg1;
- (void)busyNotification:(id)arg1;
- (BOOL)isOpaque;
- (void)updateViews:(id)arg1 free:(unsigned long long)arg2 total:(unsigned long long)arg3 writable:(BOOL)arg4;
- (void)updateViews_selection:(id)arg1 adjustViews:(BOOL)arg2;
- (void)doUpdateAfterDelay;

@end

@interface NTSegmentedMessage : NTView
{
    unsigned long long width;
    NSShadow *frameShadow;
    NSShadow *firstShadow;
    NTGradient *gradient;
    NSShadow *whiteShadow;
}

+ (unsigned long long)defaultHeight;
+ (id)message;
@property(retain, nonatomic) NSShadow *whiteShadow; // @synthesize whiteShadow;
@property(retain, nonatomic) NTGradient *gradient; // @synthesize gradient;
@property(retain, nonatomic) NSShadow *firstShadow; // @synthesize firstShadow;
@property(retain, nonatomic) NSShadow *frameShadow; // @synthesize frameShadow;
@property(nonatomic) unsigned long long width; // @synthesize width;
- (void)updateFont;
- (void)updateMessages:(id)arg1;
- (void)dealloc;
- (void)adjustSubviews;
- (void)frameDidChange;
- (void)drawRect:(struct CGRect)arg1;
- (id)messageFrameColor:(BOOL)arg1;

@end

@interface NTViewsToggleButton : NSSegmentedControl
{
}

+ (Class)cellClass;
- (id)toolbarMenuItem;
- (void)handleAction:(BOOL)arg1;
- (void)updateState:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface NTProgressStopButton : NTView
{
    NTSpinningWheel *progressBar;
    NTTemplateButton *stopButton;
    NSTrackingArea *trackingArea;
}

+ (id)button;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea;
@property(retain, nonatomic) NTTemplateButton *stopButton; // @synthesize stopButton;
@property(retain, nonatomic) NTSpinningWheel *progressBar; // @synthesize progressBar;
- (void)stopAnimation;
- (void)startAnimation;
- (void)dealloc;
- (void)arrangeSubviews;
- (void)updateMouseOver:(BOOL)arg1;
- (void)frameDidChange;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)installMouseTracker;
- (void)createViews;

@end

@interface NTSubmodule : NTView
{
    NTDefaultsClient *defaultsClient;
    NSString *_modulePrefsKey;
}

+ (id)module:(id)arg1;
@property(retain, nonatomic) NSString *modulePrefsKey; // @synthesize modulePrefsKey=_modulePrefsKey;
@property(retain, nonatomic) NTDefaultsClient *defaultsClient; // @synthesize defaultsClient;
- (void)dealloc;
- (id)menu;

@end

@interface NTFileOperationProgressViewController : NSViewController
{
    NTColumnCollectionView *itemsCollectionView;
}

+ (id)viewController;
@property(retain, nonatomic) NTColumnCollectionView *itemsCollectionView; // @synthesize itemsCollectionView;
- (double)itemsViewHeight;
- (void)awakeFromNib;
- (void)dealloc;
- (void)updateContentView:(id)arg1;

@end

@interface NTGenericProgressWindow : NSWindowController
{
    NSString *message;
}

+ (id)show:(id)arg1;
@property(retain, nonatomic) NSString *message; // @synthesize message;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;

@end

@interface NTBrowserShelfView : NTBoxView
{
    NTSplitViewDelegate *_splitViewDelegate;
    BOOL _vertical;
    BOOL _centered;
    BOOL _hasSetupSplitView;
    BOOL _synchronizingSplitViews;
    NSSplitView *_splitView;
    NTPreviewColumn *_leftView;
    NTPreviewColumn *_rightView;
    NTDefaultsClient *_defaultsClient;
}

@property(nonatomic) BOOL synchronizingSplitViews; // @synthesize synchronizingSplitViews=_synchronizingSplitViews;
@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(nonatomic) BOOL centered; // @synthesize centered=_centered;
@property(nonatomic) BOOL vertical; // @synthesize vertical=_vertical;
@property(retain, nonatomic) NTDefaultsClient *defaultsClient; // @synthesize defaultsClient=_defaultsClient;
@property(retain, nonatomic) NTPreviewColumn *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) NTPreviewColumn *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
- (id)initWithFrame:(struct CGRect)arg1 vertical:(BOOL)arg2 frameType:(int)arg3 defaultsClient:(id)arg4;
- (void)dealloc;
- (void)frameDidChange;
- (void)viewWillDraw;
- (void)viewDidMoveToWindow;
- (void)setupSubviews;
- (void)arrangeSubviews;
- (void)createSubviews;
- (void)setSplitViewDelegate:(id)arg1;
- (id)splitViewDelegate;
- (void)openTerminalPreview:(id)arg1;
- (BOOL)isViewCollapsed:(id)arg1;
- (void)dualBrowserPrefsChanged:(id)arg1;
- (void)dualBrowserDidSwapViews:(id)arg1;
- (void)dualBrowserSplitViewDidResizeSubviews:(id)arg1;
- (void)shelfSplitViewWillCollapseView:(id)arg1;
- (void)shelfSplitViewDidDragDivider:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;

@end

@interface NTShelfSplitView : NSSplitView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface NTNewBrowserSubmenu : NTSingletonObject <NSMenuDelegate>
{
    unsigned long long newTabIndex;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(nonatomic) unsigned long long newTabIndex; // @synthesize newTabIndex;
- (id)init;
- (void)menuNeedsUpdate:(id)arg1;
- (void)newBrowserWithSetAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)appendBrowserMenuItems:(id)arg1 smallFont:(BOOL)arg2;
- (void)install;

@end

@interface NTBrowserSetManager : NTSingletonObject <NTListEditorControllerDelegate>
{
    BOOL savePending;
    NSMutableArray *browserSets_storage;
    NSString *defaultBrowserSetName_storage;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NSString *defaultBrowserSetName_storage; // @synthesize defaultBrowserSetName_storage;
@property(nonatomic) BOOL savePending; // @synthesize savePending;
@property(retain, nonatomic) NSMutableArray *browserSets_storage; // @synthesize browserSets_storage;
- (void)setDefaultBrowserSetName:(id)arg1;
- (id)defaultBrowserSetName;
- (void)editBrowserSets:(id)arg1;
- (void)newBrowserSet:(id)arg1 browserDocument:(id)arg2;
- (void)deleteBrowserSet:(id)arg1;
- (void)addBrowserSet:(id)arg1;
- (id)browserSetNames;
- (id)defaultBrowserSet;
- (id)browserSetWithName:(id)arg1;
- (id)browserSets;
- (id)init;
- (void)dealloc;
- (void)editorResults:(id)arg1;
- (void)doSaveToPreferencesAfterDelay:(id)arg1;
- (void)loadFromPrefs;
- (void)saveToPreferences;
- (void)newBrowserSet_message:(id)arg1;

@end

@interface NTBrowserSet : NSObject
{
    NSString *name;
    NTBrowserOptionsModel *model;
}

+ (id)browserSet:(id)arg1 model:(id)arg2;
@property(retain, nonatomic) NTBrowserOptionsModel *model; // @synthesize model;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NTFileOperationWindowController : NSWindowController
{
    NSViewController *rootViewController;
    id model;
    double oldViewHeight;
}

+ (id)controller;
@property(nonatomic) double oldViewHeight; // @synthesize oldViewHeight;
@property(retain, nonatomic) id model; // @synthesize model;
@property(retain, nonatomic) NSViewController *rootViewController; // @synthesize rootViewController;
- (void)dealloc;
- (void)syncWithPreferences;
- (void)resizeWindow;
- (BOOL)validateMenuItem:(id)arg1;
- (void)hidesOnDeactivateAction:(id)arg1;
- (void)floatAction:(id)arg1;
- (void)adjustWindowSize:(id)arg1;

@end

@interface NTFileOperationsManager : NTSingletonObject
{
    BOOL closeEmptyWindow;
    NTFileOperationWindowController *windowController;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain, nonatomic) NTFileOperationWindowController *windowController; // @synthesize windowController;
@property(nonatomic) BOOL closeEmptyWindow; // @synthesize closeEmptyWindow;
- (BOOL)isWindowVisible;
- (void)closeWindow;
- (void)showWindow;
- (id)init;
- (void)dealloc;
- (void)markAndShowWindow;
- (void)updateWindowContent:(id)arg1;
- (void)showResponse:(id)arg1;

@end

@interface NTProgressToolbarButton : NSButton <NSPopoverDelegate, NTSimpleTimerProtocol, NSCoding>
{
    double _progressValue;
    BOOL _hasAlert;
    NTGradient *_progressGradient;
    NSPopover *_popover;
    NTSimpleTimer *_radarAnimationTimer;
    NTSimpleTimer *_animationTimer;
    NSBezierPath *_progressPath;
}

+ (id)progressButtonInWindow:(id)arg1;
+ (id)button;
@property(retain, nonatomic) NSBezierPath *progressPath; // @synthesize progressPath=_progressPath;
@property(nonatomic) BOOL hasAlert; // @synthesize hasAlert=_hasAlert;
@property(retain, nonatomic) NTSimpleTimer *animationTimer; // @synthesize animationTimer=_animationTimer;
@property(retain, nonatomic) NTSimpleTimer *radarAnimationTimer; // @synthesize radarAnimationTimer=_radarAnimationTimer;
@property(retain, nonatomic) NSPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NTGradient *progressGradient; // @synthesize progressGradient=_progressGradient;
@property(nonatomic) double progressValue; // @synthesize progressValue=_progressValue;
- (void)showRadarAnimation;
- (void)hidePopOver;
- (void)showPopOver;
- (void)togglePopOver;
- (BOOL)isPopOverVisible;
- (id)toolbarMenuItem;
- (void)enableBindings;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)popoverDidClose:(id)arg1;
- (void)calcuatePopoverSize:(id)arg1;
- (void)returnButtonNotification:(id)arg1;
- (void)stopAnimation;
- (void)startAnimation;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)progressRect;
- (void)destroyPopover;
- (void)repositionPopover;
- (void)createPopover;
- (double)hasAlert_binding;
- (void)setHasAlert_binding:(BOOL)arg1;
- (void)setProgressValue_binding:(double)arg1;
- (double)progressValue_binding;
- (void)delegate_simpleTimerNotification:(id)arg1;

@end

@interface NTBuyNowController : NSObject
{
    NSWindow *childWindow;
    NTBuyNowWindowView *buyNowView;
    SEL buyAction;
    NSWindow *parentWindow;
}

+ (void)install:(SEL)arg1 parentWindow:(id)arg2;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow;
@property(nonatomic) SEL buyAction; // @synthesize buyAction;
@property(retain, nonatomic) NTBuyNowWindowView *buyNowView; // @synthesize buyNowView;
@property(retain, nonatomic) NSWindow *childWindow; // @synthesize childWindow;
- (void)dealloc;
- (void)destroyOverlay;
- (void)createOverlay;
- (void)repositionOverlay;
- (void)windowWillCloseNotification:(id)arg1;
- (void)windowDidResizedNotification:(id)arg1;
- (void)windowStateChangedNotification:(id)arg1;
- (void)orderWindowAfterDelay;
- (void)install;
- (void)windowFullScreenNotification:(id)arg1;
- (void)licenseKeyUpdatedNotification:(id)arg1;

@end

@interface NTPluginLaunchNotificationMgr : NTSingletonObject
{
}

+ (id *)staticStorageVariable;
+ (void)initialize;
- (void)pluginLaunchNotification:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface NTWindowTitleSetter : NSObject <NTRenameWatcherDelegateProtocol>
{
    id <NTWindowURLSetterDelegate> _delegate;
    NTRenameWatcher *_renameWatcher;
}

+ (id)setter:(id)arg1 delegate:(id)arg2;
@property(retain, nonatomic) NTRenameWatcher *renameWatcher; // @synthesize renameWatcher=_renameWatcher;
@property id <NTWindowURLSetterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)delayedUpdate:(id)arg1;
- (void)clearDelegate;
- (void)dealloc;
- (void)update:(id)arg1 checkShared:(BOOL)arg2;
- (void)renameWatcher:(id)arg1 renamed:(id)arg2;

@end

@interface NTDSStoreParser : NSObject
{
    NSMutableDictionary *trashDescs;
}

+ (id)parser;
@property(retain, nonatomic) NSMutableDictionary *trashDescs; // @synthesize trashDescs;
- (void)parse:(id)arg1;
- (void)dealloc;
- (id)parseDSStore:(id)arg1;
- (BOOL)shouldScanStore:(id)arg1;

@end

@interface NTBrowserContextualMenu : NSObject <NSMenuDelegate>
{
    NSMenu *_menu;
    id <NTBrowserContextualMenuProtocol> _delegate;
    NSNumber *_buildID;
    NTDSStoreParser *_storeParser;
}

+ (id)menu:(id)arg1;
@property(retain, nonatomic) NTDSStoreParser *storeParser; // @synthesize storeParser=_storeParser;
@property(retain, nonatomic) NSNumber *buildID; // @synthesize buildID=_buildID;
@property id <NTBrowserContextualMenuProtocol> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMenu *menu; // @synthesize menu=_menu;
- (void)clearDelegate;
- (void)dealloc;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)addDelayedItemsIfNeeded:(id)arg1 firstSelectedDesc:(id)arg2 numberOfSelected:(unsigned long long)arg3;

@end

@interface NTFindResultsView : NTView
{
    NTFindUIAccess *_findUIAccess;
    NTIconFindResultsView *_iconResults;
    NTOutlineFindResultsView *_outlineResults;
}

@property(retain, nonatomic) NTOutlineFindResultsView *outlineResults; // @synthesize outlineResults=_outlineResults;
@property(retain, nonatomic) NTIconFindResultsView *iconResults; // @synthesize iconResults=_iconResults;
@property(retain, nonatomic) NTFindUIAccess *findUIAccess; // @synthesize findUIAccess=_findUIAccess;
- (id)sortDescriptorsForArrangeOrder:(long long)arg1 arrangeAscending:(BOOL)arg2 sortOrder:(long long)arg3 sortAscending:(BOOL)arg4;
- (void)updateToSortDescriptors:(id)arg1 syncUI:(BOOL)arg2;
- (void)switchToDirectoryViewOptions;
- (void)setViewOptionsModel:(id)arg1;
- (id)viewOptionsModel;
- (int)browserStyle;
- (void)itemsNeedRefresh:(id)arg1;
- (struct CGRect)screenRectForIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (void)reloadData;
- (void)deselectAll;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (unsigned long long)numberOfSelectedItems;
- (id)selectedIndexes;
- (id)selectedItems;
- (unsigned long long)indexOfResult:(id)arg1;
- (unsigned long long)numberOfItemsIgnoringGroups:(BOOL)arg1;
- (void)switchToViewType:(int)arg1;
- (int)currentViewType;
- (void)setupWithController:(id)arg1;
- (void)dealloc;
- (void)switchToViewType:(int)arg1 saveToDefaults:(BOOL)arg2;

@end

@interface NTFindUIAccess : NSObject
{
    id <NTFindUIAccessDelegate> delegate;
}

+ (id)findUIAccessWithDelegate:(id)arg1;
@property id <NTFindUIAccessDelegate> delegate; // @synthesize delegate;
- (BOOL)isMovableItemSelected;
- (long long)numItemsSelected;
- (id)firstSelectedDesc:(BOOL)arg1;
- (id)selectedDescs:(BOOL)arg1;
- (void)copy:(id)arg1;
- (void)handleSelectionChanged;
- (void)actionButtonClick;
- (void)doubleClick;
- (id)selectedItems;
- (void)removeItems:(id)arg1;
- (id)findList;
- (void)clearDelegate;
- (void)dealloc;

@end

@interface NTOutlineFindResultsView : NTView <NSTokenFieldCellDelegate, NSMenuDelegate, NTBrowserKeyEventHandlerDelegate, ListControllerParamsController, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NTCommonViewOptionsModel *_viewOptionsModel;
    BOOL _hasCustomSortSettings;
    BOOL _syncingSortSettings;
    NTView *_containerView;
    NTFindUIAccess *_findUIAccess;
    NTOutlineView *_outlineView;
    NSMenu *_contextualMenu;
    NTCachedSelection *_cachedSelection;
    ListControllerParams *_listViewParams;
    NTDropHandler *_dropHandler;
    NTBrowserKeyEventHandler *_keyEventHandler;
}

@property(nonatomic) BOOL syncingSortSettings; // @synthesize syncingSortSettings=_syncingSortSettings;
@property(nonatomic) BOOL hasCustomSortSettings; // @synthesize hasCustomSortSettings=_hasCustomSortSettings;
@property(retain, nonatomic) NTBrowserKeyEventHandler *keyEventHandler; // @synthesize keyEventHandler=_keyEventHandler;
@property(retain, nonatomic) NTDropHandler *dropHandler; // @synthesize dropHandler=_dropHandler;
@property(retain, nonatomic) ListControllerParams *listViewParams; // @synthesize listViewParams=_listViewParams;
@property(retain, nonatomic) NTCachedSelection *cachedSelection; // @synthesize cachedSelection=_cachedSelection;
@property(retain, nonatomic) NSMenu *contextualMenu; // @synthesize contextualMenu=_contextualMenu;
@property(retain, nonatomic) NTOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property(retain, nonatomic) NTFindUIAccess *findUIAccess; // @synthesize findUIAccess=_findUIAccess;
@property(retain, nonatomic) NTView *containerView; // @synthesize containerView=_containerView;
- (void)doubleClickAction:(id)arg1;
- (id)sortDescriptorsForArrangeOrder:(long long)arg1 arrangeAscending:(BOOL)arg2 sortOrder:(long long)arg3 sortAscending:(BOOL)arg4;
- (void)updateToSortDescriptors:(id)arg1 syncUI:(BOOL)arg2;
- (struct CGRect)screenRectForIndex:(long long)arg1 iconRect:(struct CGRect *)arg2 textRect:(struct CGRect *)arg3;
- (void)switchToDirectoryViewOptions;
- (void)viewOptionsChanged:(id)arg1;
- (void)itemsNeedRefresh:(id)arg1;
- (void)reloadData;
- (void)deselectAll;
- (id)imageForSelection:(struct CGPoint *)arg1;
- (unsigned long long)numberOfSelectedItems;
- (id)selectedRows;
- (id)selectedItems;
- (unsigned long long)indexOfResult:(id)arg1;
- (unsigned long long)numberOfItemsIgnoringGroups:(BOOL)arg1;
- (BOOL)keyDownEvent:(id)arg1;
- (void)setupWithController:(id)arg1;
@property(retain, nonatomic) NTCommonViewOptionsModel *viewOptionsModel;
- (void)dealloc;
- (void)copy:(id)arg1;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (void)tableHelper_dragEnded;
- (void)tableHelper_performDraggedOperation:(unsigned long long)arg1;
- (void)tableHelper_dragStarted;
- (void)tableHelper_performActionButtonClick;
- (BOOL)tableHelper_shouldTrackActionButton;
- (void)tableHelper_performIconButtonClick;
- (BOOL)tableHelper_shouldTrackIconButton;
- (void)tableHelper_sendSelectionChangedNotification;
- (id)tableHelper_selection:(BOOL)arg1;
- (BOOL)controllerSupportsThemes;
- (void)defaultColorsChanged:(id)arg1;
- (id)fileServerSettingsFromViewOptions:(id)arg1;
- (void)syncUISortSettings:(id)arg1;
- (id)createSortDescriptors:(id)arg1;
- (id)columnLayoutString;
- (id)buildColumnFromSpec:(id)arg1;
- (id)columnSpecWithID:(id)arg1;
- (BOOL)resetColumn:(id)arg1;
- (void)syncListViewColors;
- (void)rearrangeAndResizeColumns;
- (void)resetTableLineHeight;
- (void)resetColumnsWithPrefs;
- (void)columnsChangedNotification:(id)arg1;
- (void)setupOutlineView;
- (id)tokenFieldCell:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (id)key_selection:(BOOL)arg1;
- (id)key_firstSelectedDesc:(BOOL)arg1;
- (id)key_serverRequest;
- (void)key_sendDoubleClick;
- (unsigned long long)key_numItemsSelected;
- (id)key_visibleItems;
- (void)key_deselectAll;
- (BOOL)key_smartSort;
- (BOOL)key_sortAscending;
- (int)key_sortOrder;
- (BOOL)key_arrangeAscending;
- (int)key_arrangeOrder;
- (void)key_scrollTo:(int)arg1 select:(BOOL)arg2 extendSelection:(BOOL)arg3;
- (unsigned long long)key_numVisibleItems;
- (BOOL)key_renameSelection;
- (void)key_scrollToSelection;
- (void)key_selectVisibleIndex:(unsigned long long)arg1 byExtendingSelection:(BOOL)arg2;
- (id)responderView;

@end

@interface NTFindViewButton : NSSegmentedControl <NSCoding>
{
}

+ (Class)cellClass;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface NTSetFileErrorAlerts : NSObject
{
}

+ (void)displaySetAttributeError:(id)arg1 sheetWindow:(id)arg2;

@end

@interface NTSavedSearchesPopUpMenu : NSMenu <NSMenuDelegate, NSCoding>
{
}

+ (id)menu;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NTColumnSpec : NSObject
{
    NSString *_name;
    NSString *_identifier;
    unsigned long long _alignment;
    unsigned long long _headerAlignment;
    long long _width;
}

+ (id)specWithName:(id)arg1 identifier:(id)arg2 headerAlignment:(unsigned long long)arg3 alignment:(unsigned long long)arg4 width:(long long)arg5;
@property(nonatomic) long long width; // @synthesize width=_width;
@property(nonatomic) unsigned long long headerAlignment; // @synthesize headerAlignment=_headerAlignment;
@property(nonatomic) unsigned long long alignment; // @synthesize alignment=_alignment;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;

@end

@interface NTClickStringView : NTStringView
{
}

- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;

@end

@interface NTPathFinderQueryHost : NTSingletonObject <NTPathFinderQueryProtocol>
{
    NSConnection *connection;
}

+ (id *)staticStorageVariable;
+ (void)initialize;
@property(retain) NSConnection *connection; // @synthesize connection;
- (id)init;
- (void)dealloc;
- (bycopy id)query:(oneway id)arg1;

@end

@interface NTRegularSizeToolbar : NSToolbar
{
}

- (BOOL)_allowsSizeMode:(unsigned long long)arg1;

@end

@interface NTDualPaneCommandView : NSView
{
    NSImage *image;
    double angle;
}

@property(nonatomic) double angle; // @synthesize angle;
@property(retain, nonatomic) NSImage *image; // @synthesize image;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface NTDualPaneHUDController : NSWindowController <NSWindowDelegate>
{
    NSWindow *_parentWindow;
    NTDualPaneCommandView *_contentView;
}

+ (void)showForParentWindow:(id)arg1 commandInfo:(id)arg2;
@property(retain, nonatomic) NTDualPaneCommandView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
- (void)dealloc;
- (void)showCommandInfo:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)fadeOutWindow;

@end

@interface NTShelfsToggleButton : NSSegmentedControl
{
}

+ (Class)cellClass;
- (id)toolbarMenuItem;
- (void)handleAction;
- (void)updateState;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface NTBrowserRightContainerView : NTBoxView
{
    BOOL _hasSetupSplitView;
    NSSplitView *_splitView;
    NTSplitViewDelegate *_splitViewDelegate;
    NTBrowserRightView *_leftView;
    NSView *_rightView;
}

@property(nonatomic) BOOL hasSetupSplitView; // @synthesize hasSetupSplitView=_hasSetupSplitView;
@property(retain, nonatomic) NSView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) NTBrowserRightView *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) NTSplitViewDelegate *splitViewDelegate; // @synthesize splitViewDelegate=_splitViewDelegate;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
- (BOOL)isRightViewHidden;
- (void)installMainView:(id)arg1 rightView:(id)arg2 bottomView:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)rightShelfIsVisible:(id)arg1;
- (void)showRightShelf:(id)arg1;
- (void)createViews;
- (void)viewWillDraw;
- (void)arrangeSubviews;
- (void)frameDidChange;
- (void)splitViewCollapseStateChanged:(id)arg1;

@end

@interface NSBrowserCell (Hacks)
- (id)placeholderString;
- (void)setPlaceholderString:(id)arg1;
@end

@interface NTApplication (AppleScript_Attributes)
- (id)home;
- (id)desktop;
- (id)trash;
- (id)startupDisk;
- (id)selection;
- (void)setSelection:(id)arg1;
@end

@interface NTApplication (AppleScript_ToMany)
- (id)valueInDisksWithName:(id)arg1;
- (id)valueInDisksAtIndex:(unsigned long long)arg1;
- (id)disks;
- (id)valueInInfoWindowsWithUniqueID:(id)arg1;
- (id)valueInInfoWindowsAtIndex:(unsigned long long)arg1;
- (id)infoWindows;
- (id)valueInFinderWindowsWithUniqueID:(id)arg1;
- (id)valueInFinderWindowsAtIndex:(unsigned long long)arg1;
- (id)finderWindows;
@end

@interface NTApplication (AppleScript_Private)
- (id)diskList;
@end

@interface NSWindow (ASFinderWindow)
- (BOOL)isFinderWindow;
@end

@interface NSWindow (ASInfoWindow)
- (BOOL)isInfoWindow;
@end

@interface NSApplication (WindowThemeSupport)
- (id)colorSetForController:(id)arg1;
- (id)colorSetForWindow:(id)arg1;
@end

@interface NTApplication (ASCommands)
- (id)doEmptyCommand:(id)arg1;
- (id)doCopyCommand:(id)arg1;
- (id)doMoveCommand:(id)arg1;
- (id)doPFInfoCommand:(id)arg1;
- (id)doPFOpenCommand:(id)arg1;
- (id)doAddToFavoritesCommand:(id)arg1;
- (id)doEjectCommand:(id)arg1;
- (id)doDeleteCommand:(id)arg1;
- (id)doExistsCommand:(id)arg1;
- (id)doSelectCommand:(id)arg1;
- (id)doRevealCommand:(id)arg1;
@end

@interface NTApplication (ASCommandsPrivate)
- (void)openPath:(id)arg1 using:(id)arg2;
@end

@interface NSWindow (NTBrowserDocumentModel)
- (id)browserOptionsModel;
- (id)documentModel;
@end

@interface NSObject (IKImageFlowViewHack)
- (void)hack_mouseDown:(id)arg1;
- (BOOL)hack_acceptsFirstResponder;
@end
